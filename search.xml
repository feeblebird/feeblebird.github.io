<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>love</title>
      <link href="/2020/11/20/love/"/>
      <url>/2020/11/20/love/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head><title></title><style type="text/css">#zuoju{width:400;height:400;display: none;justify-content: center;align-items:center;position:absolute;top:150px;left:200px;display: none;}#zuoju img{width:auto;height:auto;max-width: 400px;max-height: 400px;text-align: center;}#youju{width:400;height:400;display: none;justify-content: center;align-items:center;position:absolute;top:150px;right:200px;display: none;}#youju img{width:auto;height:auto;max-width: 400px;max-height: 400px;text-align: center;}#main{width:200px;height:220px;margin:250px auto;position: relative;bottom:1480px;animation: mymove 2s infinite;display: none;justify-content: center;align-items:center;}#main img{width:auto;height: auto;max-width: 200px;max-height: 220px;text-align: center;}#love1{width:50px;height:50px;margin:300px auto;position: relative;bottom:1050px;animation: mymove 2s infinite;}#love2{width:50px;height:50px;bottom: 700px;margin:300px auto;position: relative;animation: mymove 2s infinite;}#love3{width:50px;height:50px;top:-350px;margin:300px auto;position: relative;animation: mymove 2s infinite;}#love4{width:50px;height:50px;margin:300px auto;position: relative;animation: mymove 2s infinite;}.l{width:30px;height:30px;background:red;border-radius:50%;left:0px;top:0px;position:absolute;}.r{width:30px;height:30px;background:red;position:absolute;border-radius:50%;right: 0px;top:0px;}.z{width:30px;height:30px;background:red;transform:translate(10px,10px) rotate(45deg);}@keyframes mymove{0%{transform:scale(1.2);}50%{transform:scale(1.7);}100%{transform:scale(1.2);}}@keyframes mymove1{from{left:0px;transform:scale(1.2);}to{left:-250px;transform:scale(1.2);}}@keyframes mymove2{from{bottom:700px;transform:scale(1.2);}to{bottom:950px;transform:scale(1.2);}}@keyframes mymove3{from{left:0px;transform:scale(1.2);}to{left:250px;transform:scale(1.2);}}@keyframes mymove4{from{bottom:0px;transform:scale(1.2);}to{bottom:-250px;transform:scale(1.2);}}</style></head><body><div id = "love4"><div class="l"></div><div class="r"></div><div class="z"></div></div><div id = "love3"><div class="l"></div><div class="r"></div><div class="z"></div></div><div id = "love2"><div class="l"></div><div class="r"></div><div class="z"></div></div><div id = "love1"><div class="l"></div><div class="r"></div><div class="z"></div></div><div id = "main"><span><img id = "myimg" src= "/img/loading.gif" data-lazy-src="" /></span></div><div id = "zuoju"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/20/dxUKwhlspqWjBS4.png" /></div><div id = "youju"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/20/AEMDyUF8ONreIWh.png" /></div><script type="text/javascript">document.getElementById("love1").onclick=function(){document.getElementById("love1").style.animation="mymove1 2s 1";window.setTimeout("next1()",2000);document.getElementById("love2").style.animation="mymove2 2s 1";window.setTimeout("next2()",2000);document.getElementById("love3").style.animation="mymove3 2s 1";window.setTimeout("next3()",2000);document.getElementById("love4").style.animation="mymove4 2s 1";window.setTimeout("next4()",2000);document.getElementById("zuoju").style.display="flex";document.getElementById("youju").style.display="flex";window.setTimeout("show()",2000);window.setTimeout("change()",4000);}var imgarr = ['img/1(1).jpg'];//,'https://i.loli.net/2020/11/20/2C4tayJOz68s9qZ.jpg','https://i.loli.net/2020/11/20/SZsYRwLulG2TFrV.jpg','https://i.loli.net/2020/11/20/GpAmqoxfej4klFz.jpg','https://i.loli.net/2020/11/20/318EoiUfnhqVvAY.jpg','https://i.loli.net/2020/11/20/x2QrmDPUwuehF57.jpg','https://i.loli.net/2020/11/20/gANJnhvbeKyX1ck.jpg','https://i.loli.net/2020/11/20/tH38XU5rfqPbpZE.jpg','https://i.loli.net/2020/11/20/kxThYq9H5aI7Gzs.jpg','https://i.loli.net/2020/11/20/fPSDwJx3RMEpBni.jpg','https://i.loli.net/2020/11/20/shWkILBflrOyejZ.jpg','https://i.loli.net/2020/11/20/Z95q2A8DBhwfTba.jpg','https://i.loli.net/2020/11/20/Lg4OtZjkhD7mERr.jpg','https://i.loli.net/2020/11/20/agWfvxbB1XHytNE.jpg','https://i.loli.net/2020/11/20/kOszQhZWPgy1JLA.jpg','https://i.loli.net/2020/11/20/H9jzvmXZGtWygJK.jpg','https://i.loli.net/2020/11/20/kOszQhZWPgy1JLA.jpg','https://i.loli.net/2020/11/20/H9jzvmXZGtWygJK.jpg','https://i.loli.net/2020/11/20/dIPLM2z5DHfWl13.jpg','https://i.loli.net/2020/11/20/eaCKXngFzj6h2L5.jpg'];window.change=function(){var index = Math.floor((Math.random()*imgarr.length));var imgsrc = imgarr[index];document.getElementById("myimg").setAttribute('src',imgsrc);setTimeout("change()",4000);}window.show=function(){document.getElementById("main").style.display="flex";}window.next1=function(){document.getElementById("love1").style.animation="mymove 2s infinite";document.getElementById("love1").style.left="-250px";}window.next2=function(){document.getElementById("love2").style.animation="mymove 2s infinite";document.getElementById("love2").style.bottom="950px";}window.next3=function(){document.getElementById("love3").style.animation="mymove 2s infinite";document.getElementById("love3").style.left="250px";}window.next4=function(){document.getElementById("love4").style.animation="mymove 2s infinite";document.getElementById("love4").style.bottom="-250px";}</script></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>不渲染md或html</title>
      <link href="/2020/11/20/%E4%B8%8D%E6%B8%B2%E6%9F%93md%E6%88%96html/"/>
      <url>/2020/11/20/%E4%B8%8D%E6%B8%B2%E6%9F%93md%E6%88%96html/</url>
      
        <content type="html"><![CDATA[<h1 id="不渲染md文件"><a class="markdownIt-Anchor" href="#不渲染md文件"></a> 不渲染md文件</h1><p>如果想保留原 md 文件后缀要怎么做呢？这就需要在 站点配置文件<code>_config.yml</code> 中配置，找到 <code>skip_render</code> 参数，开始匹配的位置是基于你的 source_dir 的，一般来说，是你的 source 文件夹下。下面我分别列举几种常见的情况进行说明：</p><ul><li><p><code>skip_render: test/*</code> 单个文件夹下全部文件</p></li><li><p><code>skip_render: test/*.md</code> 单个文件夹下指定类型文件</p></li><li><p><code>skip_render: test/**</code> 单个文件夹下全部文件以及子目录</p></li><li><p>多个文件夹以及各种复杂情况：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">`test1/*.html`</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">`test2/**`</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="不渲染html文件"><a class="markdownIt-Anchor" href="#不渲染html文件"></a> 不渲染html文件</h1><p>在不想被渲染的 html 文件最上面添加如下代码:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout:false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PythonStudy</title>
      <link href="/2020/11/12/PythonStudy/"/>
      <url>/2020/11/12/PythonStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="手册"><a class="markdownIt-Anchor" href="#手册"></a> <a href="https://www.runoob.com/manual/pythontutorial3/docs/html/">手册</a></h1><h1 id="pip命令"><a class="markdownIt-Anchor" href="#pip命令"></a> pip命令</h1><ul><li><p>显示版本和路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --version</span><br></pre></td></tr></table></figure></li><li><p>获取帮助</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --help</span><br></pre></td></tr></table></figure></li><li><p>升级pip</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U pip</span><br></pre></td></tr></table></figure></li><li><p>安装其它包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install SomePackage           <span class="comment">#最新版本</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install SomePackage==<span class="number">1.0</span><span class="number">.4</span>    <span class="comment">#指定版本</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install <span class="string">&#x27;SomePackaage&gt;=1.0.4&#x27;</span> <span class="comment">#最小版本</span></span><br></pre></td></tr></table></figure></li><li><p>升级包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade SomePackage</span><br></pre></td></tr></table></figure></li><li><p>卸载包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall SomePackage</span><br></pre></td></tr></table></figure></li><li><p>搜索包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip search SomePackage</span><br></pre></td></tr></table></figure></li><li><p>显示安装包信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip show SomPackage</span><br></pre></td></tr></table></figure></li><li><p>查看指定包的详细信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip show -f SomePackage</span><br></pre></td></tr></table></figure></li><li><p>列出已安装的包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure></li><li><p>查看可升级的包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list -o</span><br></pre></td></tr></table></figure></li></ul><h1 id="注释"><a class="markdownIt-Anchor" href="#注释"></a> 注释</h1><ul><li>使用“#”号</li><li>使用一对三个单引号，一对三个双引号</li></ul><h1 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 函数名(<span class="params">参数<span class="number">1</span>，参数<span class="number">2</span>，参数<span class="number">3.</span>..</span>)</span></span><br><span class="line"><span class="function">函数体</span></span><br><span class="line"><span class="function">    <span class="title">return</span> 返回的值</span></span><br></pre></td></tr></table></figure><h1 id="python模块的导入及使用"><a class="markdownIt-Anchor" href="#python模块的导入及使用"></a> Python模块的导入及使用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">numpy.sqrt(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">np.sqrt(4)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> sqrt,exp</span><br><span class="line">sqrt(<span class="number">4</span>)</span><br><span class="line">exp(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h1 id="itertools包中product函数"><a class="markdownIt-Anchor" href="#itertools包中product函数"></a> itertools包中product函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> product(range(<span class="number">4</span>),range(<span class="number">4</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">print</span> (i,j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#相当于</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">print</span> (i,j);</span><br></pre></td></tr></table></figure><h1 id="math包中的sqrt函数"><a class="markdownIt-Anchor" href="#math包中的sqrt函数"></a> math包中的sqrt函数</h1><h1 id="分支结构"><a class="markdownIt-Anchor" href="#分支结构"></a> 分支结构</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1:</span><br><span class="line">    </span><br><span class="line"><span class="keyword">elif</span> condition2:</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br></pre></td></tr></table></figure><h1 id="运算符"><a class="markdownIt-Anchor" href="#运算符"></a> 运算符</h1><ul><li>//运算符，浮点数除法去除小数部分只留下整数部分</li><li>**运算符，计算幂乘方</li></ul><h1 id="交互模式中最近一个表达式的值赋值给变量-_"><a class="markdownIt-Anchor" href="#交互模式中最近一个表达式的值赋值给变量-_"></a> 交互模式中，最近一个表达式的值赋值给变量 _</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tax = <span class="number">12.5</span> / <span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>price = <span class="number">100.50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>price * tax</span><br><span class="line"><span class="number">12.5625</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>price + _</span><br><span class="line"><span class="number">113.0625</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>round(_, <span class="number">2</span>)</span><br><span class="line"><span class="number">113.06</span></span><br></pre></td></tr></table></figure><h1 id="range函数"><a class="markdownIt-Anchor" href="#range函数"></a> range()函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><h1 id="录入数据"><a class="markdownIt-Anchor" href="#录入数据"></a> 录入数据</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量 = int(input(<span class="string">&#x27;提示内容&#x27;</span>))</span><br></pre></td></tr></table></figure><h1 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">list.append(x)</span><br><span class="line"></span><br><span class="line">list.extend(L)</span><br><span class="line"><span class="comment">#将一个给定列表中的所有元素都添加到另一个列表中</span></span><br><span class="line">list.insert(i,x)</span><br><span class="line">list.insert(len(a),x)<span class="comment">#相当于a.append(x)</span></span><br><span class="line"><span class="comment">#在指定位置插入一个元素,i为下标(从0开始)</span></span><br><span class="line">list.remove(x)</span><br><span class="line"><span class="comment">#删除列表中值为x的第一个元素。如果没有这样的元素，就会返回一个错误</span></span><br><span class="line">list.pop([i])<span class="comment">#这个方括号的意思是可以省略</span></span><br><span class="line"><span class="comment">#从列表的指定位置删除元素，并将其返回。如果没有指定索引，a.pop()返回最后一个元素。元素随机从列表中被删除</span></span><br><span class="line">list.clear()</span><br><span class="line"><span class="comment">#从列表中删除所有元素。相当于del a[:]</span></span><br><span class="line">list.index(x)</span><br><span class="line"><span class="comment">#返回列表中第一个值为x的元素的索引。如果没有匹配的元素就会返回一个错误</span></span><br><span class="line">list.count(x)</span><br><span class="line"><span class="comment">#返回x在列表中出现的次数</span></span><br><span class="line">list.sort()</span><br><span class="line"><span class="comment">#对列表中的元素就地进行排序（意思是原来的顺序不在了）</span></span><br><span class="line">list.reverse()</span><br><span class="line"><span class="comment">#就地倒排列表中的元素</span></span><br><span class="line">list.copy()</span><br><span class="line"><span class="comment">#返回列表的一个浅拷贝。等同于a[:]</span></span><br></pre></td></tr></table></figure><h1 id="浅拷贝和深拷贝"><a class="markdownIt-Anchor" href="#浅拷贝和深拷贝"></a> 浅拷贝和深拷贝</h1><ul><li>看下面的实例</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">colours1 = [<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>]</span><br><span class="line">colours2 = colours1</span><br><span class="line">print(colours1)</span><br><span class="line">print(colours2)</span><br><span class="line">print(id(colours1), id(colours2))</span><br></pre></td></tr></table></figure><p>​输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>]</span><br><span class="line"><span class="number">563841065096</span> <span class="number">563841065096</span></span><br></pre></td></tr></table></figure><blockquote><p>两个列表指向的是同一块地址</p></blockquote><ul><li>现在来看看赋值给colours2一个新的列表对象，会发生什么</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">colours2 = [<span class="string">&quot;rouge&quot;</span>, <span class="string">&quot;vert&quot;</span>]</span><br><span class="line">print(colours1)</span><br><span class="line">print(colours2)</span><br><span class="line">print(id(colours1), id(colours2))</span><br></pre></td></tr></table></figure><p>​输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;rouge&#x27;</span>, <span class="string">&#x27;vert&#x27;</span>]</span><br><span class="line"><span class="number">357368848712</span> <span class="number">357368848456</span></span><br></pre></td></tr></table></figure><blockquote><p>colour2被重新分配了地址，colour1没变</p></blockquote><ul><li>现在修改colour2中的一个值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">colours1 = [<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>]</span><br><span class="line">colours2 = colours1</span><br><span class="line">print(id(colours1), id(colours2))</span><br><span class="line">colours2[<span class="number">1</span>] = <span class="string">&quot;green&quot;</span></span><br><span class="line">print(id(colours1), id(colours2))</span><br><span class="line">print(colours1)</span><br><span class="line">print(colours2)</span><br></pre></td></tr></table></figure><p>​输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1026592727752</span> <span class="number">1026592727752</span></span><br><span class="line"><span class="number">1026592727752</span> <span class="number">1026592727752</span></span><br><span class="line">[<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>]</span><br></pre></td></tr></table></figure><blockquote><p>这是两个列表都被改变了，此时两个对象指向的还是同一块地址</p></blockquote><ul><li>使用a[:]得到一份副本（浅拷贝的副本）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">list2 = list1[:]</span><br><span class="line">list2[<span class="number">1</span>] = <span class="string">&#x27;x&#x27;</span></span><br><span class="line">print(list2)</span><br><span class="line">print(list1)</span><br></pre></td></tr></table></figure><p>​输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br></pre></td></tr></table></figure><blockquote><p>list2 = list1[:]，是产生了一个list1的副本，这个新的对象中的值是list1中的浅拷贝。这里还体现不出来，如果是一个嵌套列表的话就可以体现出来，如下：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lst1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;ba&#x27;</span>]]</span><br><span class="line">lst2 = lst1[:]</span><br><span class="line">lst2[<span class="number">0</span>] = <span class="string">&#x27;c&#x27;</span></span><br><span class="line">print(lst1)</span><br><span class="line">print(lst2)</span><br></pre></td></tr></table></figure><p>​输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;ba&#x27;</span>]]</span><br><span class="line">[<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;ba&#x27;</span>]]</span><br></pre></td></tr></table></figure><p>​但是如果改变的是嵌套子列表中的值，情况就发生了变化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst2[<span class="number">2</span>][<span class="number">1</span>] = <span class="string">&#x27;d&#x27;</span></span><br><span class="line">print(lst1)</span><br><span class="line">print(lst2)</span><br></pre></td></tr></table></figure><p>​输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]]</span><br><span class="line">[<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]]</span><br></pre></td></tr></table></figure><blockquote><p>原因是前面将的a[:]只是产生一个a的浅拷贝的副本，意思就是简单赋值一下每个元素的值，所以前面的’a’和’b’会被赋值，然后后面那个嵌套的子列表也只是地址被复制了过去，所以再去引用的时候，lst1和lst2的嵌套子列表指向的是同一块地址。</p></blockquote><ul><li>所以遇到嵌套子列表的列表，要使用深复制</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line">lst1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;ba&#x27;</span>]]</span><br><span class="line">lst2 = deepcopy(lst1)</span><br><span class="line">print(lst1)</span><br><span class="line">print(lst2)</span><br><span class="line">print(id(lst1))</span><br><span class="line">print(id(lst2))</span><br><span class="line">print(id(lst1[<span class="number">0</span>]))</span><br><span class="line">print(id(lst2[<span class="number">0</span>]))</span><br><span class="line">print(id(lst1[<span class="number">2</span>]))</span><br><span class="line">print(id(lst2[<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><p>​输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;ba&#x27;</span>]]</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;ba&#x27;</span>]]</span><br><span class="line"><span class="number">537508176136</span></span><br><span class="line"><span class="number">537508176200</span></span><br><span class="line"><span class="number">537506121184</span></span><br><span class="line"><span class="number">537506121184</span></span><br><span class="line"><span class="number">537508176712</span></span><br><span class="line"><span class="number">537508176776</span></span><br></pre></td></tr></table></figure><blockquote><p>此时lst1和lst2就没有什么关联了。</p></blockquote><h1 id="元组"><a class="markdownIt-Anchor" href="#元组"></a> 元组</h1><ul><li>一个元组由数个逗号分隔的值组成。</li><li>元组的值是不可更改的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;t = <span class="number">12345</span>,<span class="number">54321</span>,<span class="string">&#x27;hello&#x27;</span></span><br><span class="line">&gt;&gt;&gt;t[<span class="number">0</span>]</span><br><span class="line"><span class="number">12345</span></span><br><span class="line">&gt;&gt;&gt;t</span><br><span class="line">(<span class="number">12345</span>,<span class="number">54321</span>,<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"><span class="comment">#元组可以嵌套</span></span><br><span class="line">&gt;&gt;&gt;u = t,(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">&gt;&gt;&gt;u</span><br><span class="line">((<span class="number">12345</span>,<span class="number">54321</span>,<span class="string">&#x27;hello&#x27;</span>),(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>))</span><br><span class="line"><span class="comment">#元组的值是不可更改的，会报错</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="列表list"><a class="markdownIt-Anchor" href="#列表list"></a> 列表list</h1><ul><li>list[:,1]</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>]</span><br><span class="line">[<span class="number">4</span>，<span class="number">5</span>，<span class="number">6</span>]</span><br><span class="line">[<span class="number">7</span>、<span class="number">8</span>、<span class="number">9</span>]]</span><br><span class="line">list[1,1] --&gt;  5 # it says select the element in position [1,1] (note that indexes start from zero)</span><br><span class="line">list[:,1] --&gt; [2,5,8] </span><br><span class="line">list[1][1]  --&gt; 5</span><br><span class="line">list[:][1] --&gt; [4 5 6]</span><br></pre></td></tr></table></figure><ul><li><p><code>plt.scatter(X_test[:,0],X_test[:,1],c=[color_dict[i] for i in y_])</code></p><p>链表推导式：</p><p><code>x for x in x</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;vec = [<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>]</span><br><span class="line">&gt;&gt;&gt;[<span class="number">3</span>*x <span class="keyword">for</span> x <span class="keyword">in</span> vec]</span><br><span class="line">[<span class="number">6</span>,<span class="number">12</span>,<span class="number">18</span>]</span><br><span class="line">&gt;&gt;&gt;[<span class="number">3</span>*x <span class="keyword">for</span> x <span class="keyword">in</span> vec <span class="keyword">if</span> x&lt;<span class="number">2</span>]</span><br><span class="line">[]</span><br><span class="line">&gt;&gt;&gt;[[x,x**<span class="number">2</span>]<span class="keyword">for</span> x <span class="keyword">in</span> vec]        <span class="comment">#list嵌套</span></span><br><span class="line">[[<span class="number">2</span>,<span class="number">4</span>],[<span class="number">4</span>,<span class="number">16</span>],[<span class="number">6</span>,<span class="number">36</span>]]</span><br><span class="line">&gt;&gt;&gt;[(x,x**<span class="number">2</span>)<span class="keyword">for</span> x <span class="keyword">in</span> vec]        <span class="comment">#元素为元组</span></span><br><span class="line">[(<span class="number">2</span>,<span class="number">4</span>),(<span class="number">4</span>,<span class="number">16</span>),(<span class="number">6</span>,<span class="number">36</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>vec1 = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>vec2 = [<span class="number">4</span>, <span class="number">3</span>, <span class="number">-9</span>]</span><br><span class="line">&gt;&gt;&gt;[x*y <span class="keyword">for</span> x <span class="keyword">in</span> vec1 <span class="keyword">for</span> y <span class="keyword">in</span> vec2]</span><br><span class="line">[<span class="number">8</span>,<span class="number">6</span>,<span class="number">-18</span>,<span class="number">16</span>,<span class="number">12</span>,<span class="number">-36</span>,<span class="number">24</span>,<span class="number">18</span>,<span class="number">-54</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[vec1[i]*vec2[i] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(vec1))]</span><br><span class="line">[<span class="number">8</span>, <span class="number">12</span>, <span class="number">-54</span>]</span><br><span class="line"></span><br><span class="line">为使链表推导式匹配<span class="keyword">for</span>循环的行为，可以在推导之外保留循环变量：</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">100</span> <span class="comment"># this gets overwritten</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x**<span class="number">3</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>)]</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">27</span>, <span class="number">64</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x <span class="comment"># the final value for range(5)</span></span><br></pre></td></tr></table></figure></li><li><p>mylist = list(‘abcde’)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;mylist = list(<span class="string">&#x27;abcde&#x27;</span>)</span><br><span class="line">&gt;&gt;&gt;print(mylist)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;mylist = list([<span class="string">&#x27;abcde&#x27;</span>])</span><br><span class="line">&gt;&gt;&gt;print(mylist)</span><br><span class="line">[<span class="string">&#x27;abcde&#x27;</span>]</span><br></pre></td></tr></table></figure></li></ul><h1 id="pandas中series和datagram"><a class="markdownIt-Anchor" href="#pandas中series和datagram"></a> pandas中series和datagram</h1><ul><li><p>pandas 是基于 NumPy 的一个 Python 数据分析包，主要目的是为了数据分析。它提供了大量高级的数据结构和对数据处理的方法。</p><p>pandas 有两个主要的数据结构：</p><ul><li><strong>Series</strong></li><li><strong>DataFrame</strong></li></ul></li><li><p><strong>series</strong></p><ul><li><p>Series 是一个一维数组对象 ，类似于 NumPy 的一维 array。它除了包含一组数据还包含一组索引，所以可以把它理解为一组带索引的数组</p><ul><li><p>将python数组转换成Series对象：</p><p>默认索引为从零开始的数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> Pandas <span class="keyword">as</span> pd</span><br><span class="line">&gt;&gt;&gt;obj = Series([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">-5</span>])</span><br><span class="line">&gt;&gt;&gt;obj</span><br><span class="line"><span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">-5</span></span><br><span class="line">dtype:int64</span><br></pre></td></tr></table></figure></li><li><p>将python字典转换成Series对象：</p><p>则指定了索引的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dic = &#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>,<span class="string">&#x27;d&#x27;</span>:<span class="number">4</span>&#125;</span><br><span class="line">&gt;&gt;&gt;obj3 = Series(dic)</span><br><span class="line">&gt;&gt;&gt;obj3</span><br><span class="line">a <span class="number">1</span></span><br><span class="line">b <span class="number">2</span></span><br><span class="line">c <span class="number">3</span></span><br><span class="line">d <span class="number">4</span></span><br><span class="line">dtype:int64</span><br></pre></td></tr></table></figure></li><li><p>当没有显示指定索引的时候，Series 自动以 0 开始，步长为 1 为数据创建索引。</p><p>你也可以通过 index 参数显示指定索引：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;obj2 = Series([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">-5</span>],index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>])</span><br><span class="line">&gt;&gt;&gt;obj2</span><br><span class="line">a <span class="number">2</span></span><br><span class="line">b <span class="number">3</span></span><br><span class="line">c <span class="number">4</span></span><br><span class="line">d <span class="number">-5</span></span><br></pre></td></tr></table></figure></li><li><p>对于 Series 对象里的单个数据来说，和普通数组一样，根据索引获取对应的数据或重新赋值；</p><p>不过你还可以传入一个<code>索引的数组</code> 来获取数组中值作为索引对应的值或为数组中的值作为索引的数据重新赋值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;obj2[<span class="string">&#x27;a&#x27;</span>]</span><br><span class="line"><span class="number">2</span></span><br><span class="line">&gt;&gt;&gt;obj2[[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>]]</span><br><span class="line">a <span class="number">2</span></span><br><span class="line">b <span class="number">3</span></span><br><span class="line">&gt;&gt;&gt;obj2[<span class="string">&#x27;a&#x27;</span>]=<span class="number">10</span></span><br><span class="line">&gt;&gt;&gt;obj2</span><br><span class="line">a <span class="number">10</span></span><br><span class="line">b <span class="number">3</span></span><br><span class="line">c <span class="number">4</span></span><br><span class="line">d <span class="number">-5</span></span><br><span class="line">&gt;&gt;&gt;obj2[[<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]]=<span class="number">20</span></span><br><span class="line">&gt;&gt;&gt;obj2</span><br><span class="line">a <span class="number">10</span></span><br><span class="line">b <span class="number">20</span></span><br><span class="line">c <span class="number">20</span></span><br><span class="line">d <span class="number">20</span></span><br></pre></td></tr></table></figure></li><li><p>单独获取Series对象的索引或者数组内容的时候，可以使用index和values属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;obj2.index</span><br><span class="line">Index([<span class="string">u&#x27;a&#x27;</span>,<span class="string">u&#x27;b&#x27;</span>,<span class="string">u&#x27;c&#x27;</span>,<span class="string">u&#x27;d&#x27;</span>],dtype=<span class="string">&#x27;object&#x27;</span>)</span><br><span class="line">&gt;&gt;&gt;obj2.values</span><br><span class="line">array([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">-5</span>])</span><br></pre></td></tr></table></figure></li><li><p>对series对象的运算(索引不变)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;obj2*<span class="number">2</span></span><br><span class="line">a <span class="number">20</span></span><br><span class="line">b <span class="number">40</span></span><br><span class="line">c <span class="number">40</span></span><br><span class="line">d <span class="number">40</span></span><br><span class="line">&gt;&gt;&gt;obj2+<span class="number">1</span></span><br><span class="line">a <span class="number">11</span></span><br><span class="line">b <span class="number">21</span></span><br><span class="line">c <span class="number">21</span></span><br><span class="line">d <span class="number">21</span></span><br><span class="line">&gt;&gt;&gt;obj2[obj2 &lt;= <span class="number">10</span>]</span><br><span class="line">a <span class="number">10</span></span><br><span class="line">&gt;&gt;&gt;obj2[obj2 &gt; <span class="number">10</span>]</span><br><span class="line">b <span class="number">20</span></span><br><span class="line">c <span class="number">20</span></span><br><span class="line">d <span class="number">20</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p><strong>DataFrame</strong></p><p>DataFrame 是一个表格型的数据结构。它提供<code>有序的列</code>和<code>不同类型的列值</code>。</p><p>例如将一个由字典组成的字典转换成 DataFrame 对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;data = &#123;<span class="string">&#x27;name&#x27;</span>:[<span class="string">&#x27;Carl&#x27;</span>,<span class="string">&#x27;Peter&#x27;</span>,<span class="string">&#x27;Lucy&#x27;</span>,<span class="string">&#x27;Job&#x27;</span>],<span class="string">&#x27;age&#x27;</span>:[<span class="number">30</span>,<span class="number">34</span>,<span class="number">20</span>,<span class="number">35</span>],<span class="string">&#x27;gender&#x27;</span>:[<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>]&#125;</span><br><span class="line">&gt;&gt;&gt;frame = DataFrame(data)</span><br><span class="line">&gt;&gt;&gt;frame</span><br><span class="line">age gender name</span><br><span class="line"><span class="number">0</span>   <span class="number">30</span>      m   Carl</span><br><span class="line"><span class="number">1</span>   <span class="number">34</span>      m  Peter</span><br><span class="line"><span class="number">2</span>   <span class="number">20</span>      f   Lucy</span><br><span class="line"><span class="number">3</span>   <span class="number">35</span>      m    Job</span><br></pre></td></tr></table></figure><ul><li><p>DataFrame默认根据列名首字母顺序对列名进行排序，也可以指定列的顺序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;frame = DataFrame(data,columns=[<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;gender&#x27;</span>])</span><br><span class="line">&gt;&gt;&gt;frame</span><br><span class="line">   name age gender</span><br><span class="line"><span class="number">0</span>  Carl <span class="number">30</span>      m </span><br><span class="line"><span class="number">1</span>  Peter34      m </span><br><span class="line"><span class="number">2</span>  Lucy<span class="number">20</span>      f </span><br><span class="line"><span class="number">3</span>  Job<span class="number">35</span>      m </span><br></pre></td></tr></table></figure></li><li><p>如果传入的列名找不到，会产生一列NA值</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/AHaOEl3ZpLwdF2v.png" alt="image.png" /></p></li><li><p>DataFrame不仅可以以字典索引的方式获取数据，还可以以属性的方法获取</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/1LAMRzkPSXmp4wu.png" alt="image.png" /></p></li><li><p>修改列的值</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/dpBi4yc7q2MDELX.png" alt="image.png" /></p></li><li><p>删除某一列</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/ceA3FPaQjplTsxU.png" alt="image.png" /></p></li><li><p>通过columns属性获得index，通过values属性返回numpy.ndarray，可以通过.tolist()或者list()转换成列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">print(type(df.columns))</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">pandas</span>.<span class="title">core</span>.<span class="title">indexes</span>.<span class="title">base</span>.<span class="title">Index</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">type(<span class="params">df.columns.values</span>)</span>)</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">numpy</span>.<span class="title">ndarray</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">type(<span class="params">df.columns.tolist(<span class="params"></span>)</span>),<span class="string">&quot;:&quot;</span>+<span class="string">&quot;\n&quot;</span>,df.columns.tolist(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">list</span>&#x27;&gt; :</span></span><br><span class="line"> [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br><span class="line">print(type(df.columns.values.tolist()),<span class="string">&quot;:&quot;</span>+<span class="string">&quot;\n&quot;</span>,df.columns.values.tolist())</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">list</span>&#x27;&gt; :</span></span><br><span class="line"> [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li><p>通过链表推导式获得index</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[column <span class="keyword">for</span> column <span class="keyword">in</span> df]</span><br><span class="line">[a,b]</span><br></pre></td></tr></table></figure></li><li><p>直接使用list，返回一个含有columns的list列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(list(df))</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li><p>通过datagram.values属性获得datagrame的值(不包括header)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(df.values)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="dataframe进行排序"><a class="markdownIt-Anchor" href="#dataframe进行排序"></a> DataFrame进行排序</h1><ul><li><p>一个比较重要的参数是 <em>axis</em> 。</p><p>它指定的在 <em>0轴</em> 还是 <em>1轴</em> 上来进行排序，默认 axis=0。</p><p>这个参数在计算的时候也会用到，从文字上来讲，就是 <em>0轴</em> 是“跨过”一行一行来进行处理，所以排序指定 <em>0轴</em> 就是把每一行当作一个单位</p><p>比较指定列（所以axis=0时候，要指定列索引）上的数值，来进行排序。反之指定 <em>1轴</em> 相反。</p></li><li><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/9tidFELWNm1YehO.png" alt="image.png" /></p></li><li><p>按照列名排序(默认)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.sort_index(axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>按照索引排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.sort_index()</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/vgkCqbPo2lxV5Q4.png" alt="image.png" /></p></li><li><p>按照列名或者索引进行降序排序</p><p>添加参数ascending = False</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/D6Ny7HUhEoKilk9.png" alt="image.png" /></p></li><li><p>根据一列或多列的值进行排序</p></li><li><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/pKy7VMCQUeIvctz.png" alt="image.png" /></p></li><li><p><code>df2.sort_values(by='b')</code>对df2按照b列排序，</p><p><code>df2.sort_values(by=['b','a'])</code>对df2按照b列排序后如有相同的再按照a列排序，</p><p><code>df2.sort_values(by=['a','b'])</code>对df2按照a列排序后如有相同的再按照b列排序，</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/Bpwu7RYXAnmrLGa.png" alt="image.png" /></p></li><li><p>DataFrame列出排名。</p><p>df2按照索引和列排序分别用<code>df2.rank()</code>和<code>df2.rank(axis=1)</code>即可，如图</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/gV1olBDu4ZAvQRP.png" alt="image.png" /></p></li><li><p>若排序不成功，则可能是没有替换原来的文本</p><p>再在后面添加参数<code>inplace = True</code></p></li></ul><h1 id="list和numpyarray的区别"><a class="markdownIt-Anchor" href="#list和numpyarray的区别"></a> list和numpy.array的区别</h1><ul><li><p>Numpy是专门针对数组的操作和运算进行了设计，所以数组的存储效率和输入输出性能远优于Python中的嵌套列表，<strong>数组越大，Numpy的优势就越明显</strong>。<strong>通常Numpy数组中的所有元素的类型都是<code>相同的</code>，而Python列表中的元素类型是任意的，所以在通用性能方面Numpy数组不及Python列表，但在科学计算中，可以省掉很多循环语句，代码使用方面比Python列表简单的多。</strong></p></li><li><p>在list中的数据类型保存的是数据的存放的地址，简单的说就是指针，并非数据，这样保存一个list就太麻烦了，例如list1=[1,2,3,‘a’]需要4个指针和四个数据，<strong>增加了存储和消耗cpu。</strong></p></li><li><p>程序举例</p><ul><li><p>创建</p><ul><li><p>列表的创建</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;x = list()</span><br><span class="line">&gt;&gt;&gt;x.append(<span class="number">1</span>)</span><br><span class="line">&gt;&gt;&gt;x.extend([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">&gt;&gt;&gt;print(x)</span><br><span class="line">x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br></pre></td></tr></table></figure><blockquote><p>list.append()和list.extend()的区别，append将()内所有的内容当作<strong>一个元素</strong> 加入到列表中，而extend是一个一个加</p></blockquote></li><li><p>numpy数组创建</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array((<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))               <span class="comment">#参数为tuple</span></span><br><span class="line">b = np.array([<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>])<span class="comment">#参数为list</span></span><br><span class="line">c = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])     <span class="comment">#参数是二维list</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#其它方法创建</span></span><br><span class="line">arr1 = np.arrange(<span class="number">1</span>,<span class="number">10</span>,<span class="number">1</span>)</span><br><span class="line">arr2 = np.linspace(<span class="number">1</span>,<span class="number">10</span>,<span class="number">10</span>)</span><br></pre></td></tr></table></figure><ul><li>np.arrange(a,b,c)表示产生从[a,b)，间隔为c的一个array，数据类型默认是int32</li><li>linspace(a,b,c)表示的是把[a,b]平均分成c份</li></ul></li></ul></li><li><p>元素访问</p><ul><li><p>一维数组、列表访问(一样)</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/1BWEYTOwsfz86oa.png" alt="image.png" /></p></li><li><p>二维数组、列表访问</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/fdF63p5G8smVWJl.png" alt="image.png" /></p><ul><li><p>列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;x = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]]</span><br><span class="line">&gt;&gt;&gt;print(x[<span class="number">1</span>:<span class="number">2</span>])</span><br><span class="line">&gt;&gt;&gt;print(x[<span class="number">1</span>:<span class="number">2</span>][<span class="number">0</span>])</span><br><span class="line">&gt;&gt;&gt;print(x[<span class="number">1</span>])</span><br><span class="line">&gt;&gt;&gt;print(x[<span class="number">0</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure></li><li><p>numpy.array</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;x=np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">&gt;&gt;&gt;print(x[<span class="number">1</span>:<span class="number">2</span>])</span><br><span class="line">&gt;&gt;&gt;print(x[<span class="number">1</span>:<span class="number">2</span>][<span class="number">0</span>])</span><br><span class="line">&gt;&gt;&gt;print(x[<span class="number">1</span>])</span><br><span class="line">&gt;&gt;&gt;print(x[<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">&gt;&gt;&gt;print(x[<span class="number">0</span>,<span class="number">0</span>])</span><br></pre></td></tr></table></figure></li><li><p>区别：在列表List中，不能使用x[0,0]来访问第一行第一列的元素，只能使用x[0][0]</p></li></ul></li></ul></li><li><p>numpy.array中的二维数组(逗号,)</p><ul><li><p>X[n0,n1]是通过 numpy 库引用二维数组或矩阵中的某一段数据集的一种写法。<br />类似的，X[n0,n1,n2]表示取三维数组，取N维数组则有N个参数，N-1个逗号分隔。</p></li><li><h4 id="取元素-xn0n1"><a class="markdownIt-Anchor" href="#取元素-xn0n1"></a> 取元素 X[n0,n1]</h4><p>这是最基本的情况，表示取 第0维 的第 n0 个元素，继续取 第1维 的第 n1个元素。如 X[2,2] 表示第0维第2个元素[20,21,22,23],然后取其第1维的第2个元素即 22；</p></li><li><h4 id="切片-xs0e0s1e1"><a class="markdownIt-Anchor" href="#切片-xs0e0s1e1"></a> 切片 X[s0:e0,s1:e1]</h4><p>这是最通用的切片操作，表示取 第0维 的第 s0 到 e0 个元素，继续取 第1维 的第 s1 到 e1 个元素（左闭右开）。如 X[1:3,1:3] 表示第0维第(1:3)个元素[[10,11,12,13],[20,21,22,23]],然后取其第1维的第(1:3)个元素即 [[11,12],[21,22]]；</p></li><li><h4 id="切片特殊情况-xe0s1"><a class="markdownIt-Anchor" href="#切片特殊情况-xe0s1"></a> 切片特殊情况 X[:e0,s1:]</h4><p>特殊情况，即左边从0开始可以省略X[:e0,s1:e1]，右边到结尾可以省略X[s0:,s1:e1]，取某一维全部元素X[:,s1:e1]，事实上和Python 的 序列切片规则是一样的。</p><p>常见的 X[:,0] 则表示 第0维取全部，第1维取0号元素；</p></li></ul></li><li><p><strong>list中的切片最好在一个维度上进行切片</strong></p></li></ul><ul><li><p>浅拷贝与深拷贝</p><ul><li><p>numpy.array中存放的是数据元素的地址，所以利用切片进行浅拷贝的时候，复制的都是地址，所以浅拷贝后改变没有嵌套数组的值，原来数组的值也会改变。</p><p>numpy.array存放的元素必须是相同的类型，所以有嵌套的话就是多维数组了。</p></li><li><p>numpy的深复制为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">&gt;&gt;&gt;x = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">&gt;&gt;&gt;x1 = x[:][:].copy()</span><br><span class="line">&gt;&gt;&gt;x1[<span class="number">1</span>,<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">&gt;&gt;&gt;print(x1)</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">1</span> <span class="number">6</span>]]</span><br><span class="line">&gt;&gt;&gt;print(x)</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure></li><li><p>list中存放的是这个元素的值，如果这个元素是列表，那么存放的是list的地址，所以如果是没有嵌套的话，改变浅拷贝的值不改变原来的值</p><p>如果有嵌套的话，list就要进行深复制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lst1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;ba&#x27;</span>]]</span><br><span class="line">lst2 = deepcopy(lst1)</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h1 id="list和numpyarray的切片"><a class="markdownIt-Anchor" href="#list和numpyarray的切片"></a> list和numpy.array的切片</h1><ul><li><p>一维切片</p><p>比较简单，就不过多叙述</p></li><li><p>二维形式切片</p><ul><li><p>list</p><blockquote><p>list的切片只能在一个维度上进行，即使写了多个维度，但是还是按照从前往后的顺序进行切片，而且把list当作一个大的整体的一个list，即其中的嵌套也是一个元素</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;x = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]]</span><br><span class="line">&gt;&gt;&gt;print(x[:])</span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]]</span><br><span class="line">&gt;&gt;&gt;print(x[:][:<span class="number">1</span>])</span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">&gt;&gt;&gt;print(x[:][:<span class="number">2</span>][:<span class="number">1</span>])</span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">&gt;&gt;&gt;print(x[:][:<span class="number">2</span>][:<span class="number">1</span>][:<span class="number">0</span>])</span><br><span class="line">[]</span><br></pre></td></tr></table></figure></li><li><p>numpy.array</p><blockquote><p>如果切片的写法和上面那个list的写法一样，那么效果是一样的，还是多个一维的切片</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">&gt;&gt;&gt;x = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">&gt;&gt;&gt;print(x[:])</span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]]</span><br><span class="line">&gt;&gt;&gt;print(x[:][:<span class="number">1</span>])</span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">&gt;&gt;&gt;print(x[:][:<span class="number">2</span>][:<span class="number">1</span>])</span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">&gt;&gt;&gt;print(x[:][:<span class="number">2</span>][:<span class="number">1</span>][:<span class="number">0</span>])</span><br><span class="line">[]</span><br></pre></td></tr></table></figure><blockquote><p>如果切片形式是[,]形式，则是真正的多维度切片</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">&gt;&gt;&gt;x = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">&gt;&gt;&gt;print(x[:,<span class="number">1</span>])</span><br><span class="line">[<span class="number">2</span> <span class="number">5</span>]</span><br><span class="line">&gt;&gt;&gt;print(x[:,:<span class="number">2</span>])</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span>]]</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="numpyndarray的降维"><a class="markdownIt-Anchor" href="#numpyndarray的降维"></a> numpy.ndarray的降维</h1><ul><li><p>array.ravel()</p><p>将高维数组降维到一维</p></li></ul><h1 id="python字典"><a class="markdownIt-Anchor" href="#python字典"></a> python字典</h1><ul><li><p>字典是零一中可变容器模型，且<code>可存储任意类型对象</code></p></li><li><p>字典的每个键值对<code>key=&gt;value</code> 用冒号分隔，每个对之间用逗号(,)分割，整个字典包括在花括号<code>&#123;&#125;</code> 中，格式如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;key1:value1,key2:value2,key3:value3&#125;</span><br></pre></td></tr></table></figure></li><li><p>键是唯一的，但值不必</p></li><li><p>值可以取任何数据类型，但键必须是不可变的，如字符串，数字。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;abc&#x27;</span>:<span class="number">456</span>&#125;</span><br><span class="line">dict2 = &#123;<span class="string">&#x27;abc&#x27;</span>:<span class="number">123</span>,<span class="number">98.6</span>:<span class="number">37</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>访问字典里的值</p><p>把相应的键放入方括号中，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dict = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;runoob&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">7</span>,<span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;First&#x27;</span>&#125;</span><br><span class="line">&gt;&gt;&gt;print(dict[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">runoob</span><br><span class="line">&gt;&gt;&gt;print(dict[<span class="string">&#x27;age&#x27;</span>])</span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure></li><li><p>修改字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dict[<span class="string">&#x27;age&#x27;</span>] = <span class="number">8</span>             <span class="comment"># 更新Age</span></span><br><span class="line">&gt;&gt;&gt;dict[<span class="string">&#x27;school&#x27;</span>] = <span class="string">&#x27;菜鸟教程&#x27;</span>  <span class="comment"># 添加信息</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">del</span> dict[<span class="string">&#x27;name&#x27;</span>]            <span class="comment"># 删除键值对&#x27;name&#x27;=&gt;&#x27;runoob&#x27;</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">del</span> dict                    <span class="comment"># 删除字典</span></span><br></pre></td></tr></table></figure></li><li><p>字典键的特性</p><ul><li><p>不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住</p></li><li><p>键必须不可变，所以可以用数字，字符串或<code>元组</code> 充当，而用<code>列表</code>就不行，如下实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dict = &#123;[<span class="string">&#x27;Name&#x27;</span>]: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>&#125;</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;dict[&#x27;Name&#x27;]: &quot;</span>, dict[<span class="string">&#x27;Name&#x27;</span>])</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;test.py&quot;</span>, line <span class="number">3</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    dict = &#123;[<span class="string">&#x27;Name&#x27;</span>]: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>&#125;</span><br><span class="line">TypeError: unhashable type: <span class="string">&#x27;list&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>python字典内置函数和方法</p><ul><li><p>内置函数</p><ul><li><p>len(dict)</p><p>计算字典元素的个数，即键的总数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Class&#x27;</span>: <span class="string">&#x27;First&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(dict)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></li><li><p>str(dict)</p><p>输出字典，以可打印的字符串表示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Class&#x27;</span>: <span class="string">&#x27;First&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(dict)</span><br><span class="line"><span class="string">&quot;&#123;&#x27;Name&#x27;: &#x27;Runoob&#x27;, &#x27;Class&#x27;: &#x27;First&#x27;, &#x27;Age&#x27;: 7&#125;&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>type(variable)</p><p>返回输入的变量类型，如果变量是字典就返回字典类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Class&#x27;</span>: <span class="string">&#x27;First&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(dict)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">dict</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>内置方法</p><ul><li><p>dict.clear()</p><p>删除字典内所有元素</p></li><li><p>dict.copy</p><p>返回字典的一个浅拷贝</p><p>浅拷贝参照前面的笔记</p></li><li><p>dict.fromkeys()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;seq = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>)</span><br><span class="line">&gt;&gt;&gt;dict = dict.fromkeys(seq)<span class="comment">#默认值为None</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;新的字典为 : %s&quot;</span> %  str(dict))</span><br><span class="line">新的字典为 : &#123;<span class="string">&#x27;age&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;name&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">&gt;&gt;&gt;dict = dict.fromkeys(seq, <span class="number">10</span>)</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;新的字典为 : %s&quot;</span> %  str(dict))</span><br><span class="line">新的字典为 : &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;name&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="number">10</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>dict.get(key,default=None)</p><p>返回指定键的值，如果键不在字典中则返回default设置的默认值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">27</span>&#125;</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;Age 值为 : %s&quot;</span> %  dict.get(<span class="string">&#x27;Age&#x27;</span>))</span><br><span class="line">Age 值为 : <span class="number">27</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;Sex 值为 : %s&quot;</span> %  dict.get(<span class="string">&#x27;Sex&#x27;</span>, <span class="string">&quot;NA&quot;</span>))</span><br><span class="line">Sex 值为 : NA</span><br></pre></td></tr></table></figure></li><li><p>key in dict</p><p>如果键在字典dict里则返回true，反之返回false</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>&#125;</span><br><span class="line"><span class="comment"># 检测键 Age 是否存在</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">if</span>  <span class="string">&#x27;Age&#x27;</span> <span class="keyword">in</span> dict:</span><br><span class="line">       print(<span class="string">&quot;键 Age 存在&quot;</span>)</span><br><span class="line">   <span class="keyword">else</span> :</span><br><span class="line">       print(<span class="string">&quot;键 Age 不存在&quot;</span>)</span><br><span class="line">键 Age 存在</span><br></pre></td></tr></table></figure></li><li><p>dict.items()</p><p>返回可便利的(键，值)<code>元组</code>数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>&#125;</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;Value : %s&quot;</span> %  dict.items())</span><br><span class="line">Value : dict_items([(<span class="string">&#x27;Age&#x27;</span>, <span class="number">7</span>), (<span class="string">&#x27;Name&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>)])</span><br></pre></td></tr></table></figure></li><li><p>dict.keys()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict.keys()</span><br><span class="line">dict_keys([<span class="string">&#x27;Name&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(dict.keys())             <span class="comment"># 转换为列表</span></span><br><span class="line">[<span class="string">&#x27;Name&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li><p>dict.setdefault(key,default=None)</p><p>和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>&#125;</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;Age 键的值为 : %s&quot;</span> %  dict.setdefault(<span class="string">&#x27;Age&#x27;</span>, <span class="literal">None</span>))</span><br><span class="line">Age 键的值为 : <span class="number">7</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;Sex 键的值为 : %s&quot;</span> %  dict.setdefault(<span class="string">&#x27;Sex&#x27;</span>, <span class="literal">None</span>))</span><br><span class="line">Sex 键的值为 : <span class="literal">None</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;新字典为：&quot;</span>, dict)</span><br><span class="line">新字典为： &#123;<span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Sex&#x27;</span>: <span class="literal">None</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>dict.update(dictw)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>&#125;</span><br><span class="line">&gt;&gt;&gt;dict2 = &#123;<span class="string">&#x27;Sex&#x27;</span>: <span class="string">&#x27;female&#x27;</span> &#125;</span><br><span class="line">&gt;&gt;&gt;dict.update(dict2)</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;更新字典 dict : &quot;</span>, dict)</span><br><span class="line">更新字典 dict :  &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Sex&#x27;</span>: <span class="string">&#x27;female&#x27;</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>dict.values()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;dict = &#123;<span class="string">&#x27;Sex&#x27;</span>: <span class="string">&#x27;female&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Zara&#x27;</span>&#125;</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">print</span> (<span class="string">&quot;字典所有值为 : &quot;</span>,  list(dict.values()))</span><br><span class="line">字典所有值为 :  [<span class="string">&#x27;female&#x27;</span>, <span class="number">7</span>, <span class="string">&#x27;Zara&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li><p>dict.pop(key[,default]) []为可省略内容</p><p>删除字典给定键key所对应的值，返回值为被删除的值。</p><p>key必须给出，否则返回default值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>site= &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;菜鸟教程&#x27;</span>, <span class="string">&#x27;alexa&#x27;</span>: <span class="number">10000</span>, <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;www.runoob.com&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pop_obj=site.pop(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(pop_obj)</span><br><span class="line">菜鸟教程</span><br></pre></td></tr></table></figure></li><li><p>dict.popitem()</p><p>以先进先出规则返回一个键值对，所以返回的是最后一个键值对。然后将最后的键值对删除。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;site= &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;菜鸟教程&#x27;</span>, <span class="string">&#x27;alexa&#x27;</span>: <span class="number">10000</span>, <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;www.runoob.com&#x27;</span>&#125;</span><br><span class="line">&gt;&gt;&gt;pop_obj=site.popitem()</span><br><span class="line">&gt;&gt;&gt;print(pop_obj)  </span><br><span class="line">(<span class="string">&#x27;url&#x27;</span>, <span class="string">&#x27;www.runoob.com&#x27;</span>)</span><br><span class="line">&gt;&gt;&gt;print(site)</span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;菜鸟教程&#x27;</span>, <span class="string">&#x27;alexa&#x27;</span>: <span class="number">10000</span>&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h1 id="补笔记"><a class="markdownIt-Anchor" href="#补笔记"></a> <a href="https://blog.csdn.net/weixin_47021806/article/details/108302282?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduend~default-2-108302282.nonecase&amp;utm_term=python%20%E9%81%8D%E5%8E%86%E5%AD%97%E5%85%B8%E5%89%8Dn%E4%B8%AA&amp;spm=1000.2123.3001.4430">补笔记</a></h1>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人工智能导论</title>
      <link href="/2020/11/08/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA/"/>
      <url>/2020/11/08/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="机器学习中训练集-验证集和测试集的作用"><a class="markdownIt-Anchor" href="#机器学习中训练集-验证集和测试集的作用"></a> 机器学习中训练集、验证集和测试集的作用</h1><ul><li><p>训练集</p><p>作用是用来拟合模型，通过设置分类器的参数，训练分类模型。后续结合验证集作用时，会选出同一参数的不同取值，拟合出多个分类器。</p></li><li><p>验证集</p><p>作用是当通过训练集训练出多个模型后，为了能找出效果最佳的模型，使用各个模型对验证集数据进行预测，并记录模型准确率。选出效果最佳的模型所对应的参数，即用来调整模型参数。如svn中的参数c和核函数等。</p></li><li><p>测试集</p><p>通过训练集和验证集得出最优模型后，使用测试集进行模型预测。用来衡量该最优模型的性能和分类能力。即可以把测试集当做从来不存在的数据集，当已经确定模型参数后，使用测试集进行模型性能评价。</p></li><li><p>对原始数据进行三个数据集的划分，也是为了防止模型过拟合。当使用了所有的原始数据去训练模型，得到的结果很可能是该模型最大程度地拟合了原始数据，亦即该模型是为了拟合所有原始数据而存在。当新的样本出现，再使用该模型进行预测，效果可能还不如只使用一部分数据训练的模型。</p></li></ul><h1 id="knn算法"><a class="markdownIt-Anchor" href="#knn算法"></a> KNN算法</h1><p><a href="https://www.cnblogs.com/listenfwind/p/10311496.html">搬运</a></p><ul><li><p>算法概述</p><p>KNN可以说是最简单的分类算法之一，同时，它也是最常用的分类算法之一，注意KNN算法是有监督学习中的分类算法，它看起来和另一个机器学习算法Kmeans有点像（Kmeans是无监督学习算法），但却是有本质区别的。那么什么是KNN算法呢，接下来我们就来介绍介绍吧。</p></li><li><p>knn算法介绍</p><p>KNN的全称是K Nearest Neighbors，意思是K个最近的邻居，从这个名字我们就能看出一些KNN算法的蛛丝马迹了。K个最近邻居，毫无疑问，K的取值肯定是至关重要的。那么最近的邻居又是怎么回事呢？<strong>其实啊，KNN的原理就是当预测一个新的值x的时候，根据它距离最近的K个点是什么类别来判断x属于哪个类别</strong>。听起来有点绕，还是看看图吧。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/VMEqCTOlgxnwGWp.png" alt="image.png" /></p><p>图中绿色的点就是我们要预测的那个点，假设K=3。那么KNN算法就会找到与它距离最近的三个点（这里用圆圈把它圈起来了），看看哪种类别多一些，比如这个例子中是蓝色三角形多一些，新来的绿色点就归类到蓝三角了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/PU29brsAnMW8XD1.png" alt="image.png" /></p><p>但是，<strong>当K=5的时候，判定就变成不一样了</strong>。这次变成红圆多一些，所以新来的绿点被归类成红圆。从这个例子中，我们就能看得出K的取值是很重要的。</p><p>明白了大概原理后，我们就来说一说细节的东西吧，主要有两个，<strong>K值的选取</strong>和<strong>点距离的计算</strong>。</p></li><li><p>距离计算</p><p>要度量空间中点距离的话，有好几种度量方式，比如常见的曼哈顿距离计算，欧式距离计算等等。不过通常KNN算法中使用的是欧式距离，这里只是简单说一下，拿二维平面为例，，二维空间两个点的欧式距离计算公式如下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/M8rAT6NulLpJImD.png" alt="image.png" /></p><p>这个高中应该就有接触到的了，其实就是计算（x1,y1）和（x2,y2）的距离。拓展到多维空间，则公式变成这样：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/5W4dwAbvnY9iyVh.png" alt="image.png" /></p><p>这样我们就明白了如何计算距离，KNN算法最简单粗暴的就是将预测点与所有点距离进行计算，然后保存并排序，选出前面K个值看看哪些类别比较多。但其实也可以通过一些数据结构来辅助，比如最大堆，这里就不多做介绍，有兴趣可以百度最大堆相关数据结构的知识。</p></li><li><p>k值选择</p><p>通过上面那张图我们知道K的取值比较重要，那么该如何确定K取多少值好呢？答案是通过交叉验证（将样本数据按照一定比例，拆分出训练用的数据和验证用的数据，比如6：4拆分出部分训练数据和验证数据），从选取一个较小的K值开始，不断增加K的值，然后计算验证集合的方差，最终找到一个比较合适的K值。</p><p>通过交叉验证计算方差后你大致会得到下面这样的图：<br /><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/VnhN8vqzP4rjBHU.png" alt="image.png" /></p><p>这个图其实很好理解，当你增大k的时候，一般错误率会先降低，因为有周围更多的样本可以借鉴了，分类效果会变好。但注意，和K-means不一样，当K值更大的时候，错误率会更高。这也很好理解，比如说你一共就35个样本，当你K增大到30的时候，KNN基本上就没意义了。</p><p>所以选择K点的时候可以选择一个较大的临界K点，当它继续增大或减小的时候，错误率都会上升，比如图中的K=10。具体如何得出K最佳值的代码，下一节的代码实例中会介绍。</p></li><li><p>knn特点</p><p>KNN是一种<strong>非参的</strong>，<strong>惰性</strong>的算法模型。什么是非参，什么是惰性呢？</p><p><strong>非参</strong>的意思并不是说这个算法不需要参数，而是意味着这个模型不会对数据做出任何的假设，与之相对的是线性回归（我们总会假设线性回归是一条直线）。也就是说KNN建立的模型结构是根据数据来决定的，这也比较符合现实的情况，毕竟在现实中的情况往往与理论上的假设是不相符的。</p><p><strong>惰性</strong>又是什么意思呢？想想看，同样是分类算法，逻辑回归需要先对数据进行大量训练（tranning），最后才会得到一个算法模型。而KNN算法却不需要，它没有明确的训练数据的过程，或者说这个过程很快。</p><h2 id="knn算法的优势和劣势"><a class="markdownIt-Anchor" href="#knn算法的优势和劣势"></a> KNN算法的优势和劣势</h2><p>了解KNN算法的优势和劣势，可以帮助我们在选择学习算法的时候做出更加明智的决定。那我们就来看看KNN算法都有哪些优势以及其缺陷所在！</p><h4 id="knn算法优点"><a class="markdownIt-Anchor" href="#knn算法优点"></a> KNN算法优点</h4><ol><li>简单易用，相比其他算法，KNN算是比较简洁明了的算法。即使没有很高的数学基础也能搞清楚它的原理。</li><li>模型训练时间快，上面说到KNN算法是惰性的，这里也就不再过多讲述。</li><li>预测效果好。</li><li>对异常值不敏感</li></ol><h4 id="knn算法缺点"><a class="markdownIt-Anchor" href="#knn算法缺点"></a> KNN算法缺点</h4><ol><li>对内存要求较高，因为该算法存储了所有训练数据</li><li>预测阶段可能很慢</li><li>对不相关的功能和数据规模敏感</li></ol><p>至于什么时候应该选择使用KNN算法，sklearn的这张图给了我们一个答案。</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/Ps5mhRXSTWCupeU.png" alt="image.png" /></p><p>简单得说，当需要使用分类算法，且数据比较大的时候就可以尝试使用KNN算法进行分类了。</p><p>OK，本次先对KNN算法做一个介绍，下一节解析sklearn的参数，以及K值选取。</p><h1 id="knn参数概述"><a class="markdownIt-Anchor" href="#knn参数概述"></a> KNN参数概述</h1><p><a href="https://zhuanlan.zhihu.com/p/248634166">参数详解</a></p><p>要使用sklearnKNN算法进行分类，我们需要先了解sklearnKNN算法的一些基本参数，那么这节就先介绍这些内容吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">KNeighborsClassifier</span>(<span class="params">n_neighbors = <span class="number">5</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       weights=<span class="string">&#x27;uniform&#x27;</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       algorithm = <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       leaf_size = <span class="string">&#x27;30&#x27;</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       p = <span class="number">2</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       metric = <span class="string">&#x27;minkowski&#x27;</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       metric_params = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                       n_jobs = None</span></span></span><br><span class="line"><span class="function"><span class="params">                       </span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">- <span class="title">n_neighbors</span>：这个值就是指 <span class="title">KNN</span> 中的 “<span class="title">K</span>”了。前面说到过，通过调整 <span class="title">K</span> 值，算法会有不同的效果。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">- <span class="title">weights</span>（权重）：最普遍的 <span class="title">KNN</span> 算法无论距离如何，权重都一样，但有时候我们想搞点特殊化，比如距离更近的点让它更加重要。这时候就需要 <span class="title">weight</span> 这个参数了，这个参数有三个可选参数的值，决定了如何分配权重。参数选项如下：</span></span><br><span class="line"><span class="function">        • &#x27;<span class="title">uniform</span>&#x27;：不管远近权重都一样，就是最普通的 <span class="title">KNN</span> 算法的形式。</span></span><br><span class="line"><span class="function">        • &#x27;<span class="title">distance</span>&#x27;：权重和距离成反比，距离预测目标越近具有越高的权重。</span></span><br><span class="line"><span class="function">        • 自定义函数：自定义一个函数，根据输入的坐标值返回对应的权重，达到自定义权重的目的。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">- <span class="title">algorithm</span>：在 <span class="title">sklearn</span> 中，要构建 <span class="title">KNN</span> 模型有三种构建方式:</span></span><br><span class="line">    <span class="number">1.</span> 暴力法，就是直接计算距离存储比较的那种放松。</span><br><span class="line">    <span class="number">2.</span> 使用 kd 树构建 KNN 模型 </span><br><span class="line">    <span class="number">3.</span> 使用球树构建。 其中暴力法适合数据较小的方式，否则效率会比较低。如果数据量比较大一般会选择用 KD 树构建 KNN 模型，而当 KD 树也比较慢的时候，则可以试试球树来构建 KNN。参数选项如下：</span><br><span class="line">• <span class="string">&#x27;brute&#x27;</span> ：蛮力实现</span><br><span class="line">• <span class="string">&#x27;kd_tree&#x27;</span>：KD 树实现 KNN</span><br><span class="line">• <span class="string">&#x27;ball_tree&#x27;</span>：球树实现 KNN </span><br><span class="line">• <span class="string">&#x27;auto&#x27;</span>： 默认参数，自动选择合适的方法构建模型</span><br><span class="line">不过当数据较小或比较稀疏时，无论选择哪个最后都会使用 <span class="string">&#x27;brute&#x27;</span></span><br><span class="line"></span><br><span class="line">- leaf_size：如果是选择蛮力实现，那么这个值是可以忽略的，当使用KD树或球树，它就是是停止建子树的叶子节点数量的阈值。默认<span class="number">30</span>，但如果数据量增多这个参数需要增大，否则速度过慢不说，还容易过拟合。</span><br><span class="line"></span><br><span class="line">- p：和metric结合使用的，当metric参数是<span class="string">&quot;minkowski&quot;</span>的时候，p=<span class="number">1</span>为曼哈顿距离， p=<span class="number">2</span>为欧式距离。默认为p=<span class="number">2</span>。</span><br><span class="line"></span><br><span class="line">- metric：指定距离度量方法，一般都是使用欧式距离。</span><br><span class="line">• <span class="string">&#x27;euclidean&#x27;</span> ：欧式距离</span><br><span class="line">• <span class="string">&#x27;manhattan&#x27;</span>：曼哈顿距离</span><br><span class="line">• <span class="string">&#x27;chebyshev&#x27;</span>：切比雪夫距离</span><br><span class="line">• <span class="string">&#x27;minkowski&#x27;</span>： 闵可夫斯基距离，默认参数</span><br><span class="line">        </span><br><span class="line">- n_jobs：指定多少个CPU进行运算，默认是<span class="number">-1</span>，也就是全部都算。</span><br><span class="line"></span><br><span class="line">返回值为：</span><br><span class="line">X_train划分出的训练集数据（返回值）</span><br><span class="line">X_test划分出的测试集数据（返回值）</span><br><span class="line">y_train划分出的训练集标签（返回值）</span><br><span class="line">y_test划分出的测试集标签（返回值）</span><br><span class="line">knn为分类算法，所以一个数据有其数据值和数据所属的分类即标签</span><br><span class="line">x_train即训练数据集合，y_train即训练数据集合所属的标签</span><br><span class="line">x_test即测试数据集合，y_test即测试数据集合所属的标签</span><br><span class="line"></span><br><span class="line">利用训练数据得出不同的分类标准，即不同的参数，拟合出不同的分类器。</span><br><span class="line">利用测试集数据进行测试，得出测试集数据的预测，然后和测试集体的标签进行比较，得出拟合度最高的分类器。</span><br></pre></td></tr></table></figure><h1 id="二-knn代码实例"><a class="markdownIt-Anchor" href="#二-knn代码实例"></a> 二. KNN代码实例</h1><p>KNN算法算是机器学习里面最简单的算法之一了，我们来sklearn官方给出的例子，来看看KNN应该怎样使用吧：</p><p>数据集使用的是著名的鸢尾花数据集，用KNN来对它做分类。我们先看看鸢尾花长的啥样。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/DV7RsLv1qjnu9KN.png" alt="image.png" /></p><p>上面这个就是鸢尾花了，这个鸢尾花数据集主要包含了鸢尾花的花萼长度，花萼宽度，花瓣长度，花瓣宽度4个属性（特征），以及鸢尾花卉属于『Setosa，Versicolour，Virginica』三个种类中的哪一类（这三种都长什么样我也不知道）。</p><p>在使用KNN算法之前，我们要先决定K的值是多少，要选出最优的K值，可以使用sklearn中的交叉验证方法，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection  <span class="keyword">import</span> cross_val_score</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取鸢尾花数据集</span></span><br><span class="line">iris = load_iris()</span><br><span class="line">x = iris.data</span><br><span class="line">y = iris.target</span><br><span class="line">k_range = range(<span class="number">1</span>, <span class="number">31</span>)</span><br><span class="line">k_error = []</span><br><span class="line"><span class="comment">#循环，取k=1到k=31，查看误差效果</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> k_range:</span><br><span class="line">    knn = KNeighborsClassifier(n_neighbors=k)</span><br><span class="line">    <span class="comment">#cv参数决定数据集划分比例，这里是按照5:1划分训练集和测试集</span></span><br><span class="line">    scores = cross_val_score(knn, x, y, cv=<span class="number">6</span>, scoring=<span class="string">&#x27;accuracy&#x27;</span>)</span><br><span class="line">    k_error.append(<span class="number">1</span> - scores.mean())</span><br><span class="line"></span><br><span class="line"><span class="comment">#画图，x轴为k值，y值为误差值</span></span><br><span class="line">plt.plot(k_range, k_error)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Value of K for KNN&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Error&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>运行后，我们可以得到下面这样的图：<br /><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/12/2c3tSinaXPLTflv.png" alt="image.png" /><br />有了这张图，我们就能明显看出K值取多少的时候误差最小，这里明显是K=11最好。当然在实际问题中，如果数据集比较大，那为减少训练时间，K的取值范围可以缩小。</p><p>有了K值我们就能运行KNN算法了，具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> matplotlib.colors <span class="keyword">import</span> ListedColormap</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> neighbors, datasets</span><br><span class="line"></span><br><span class="line">n_neighbors = <span class="number">11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入一些要玩的数据</span></span><br><span class="line">iris = datasets.load_iris()</span><br><span class="line">x = iris.data[:, :<span class="number">2</span>]  <span class="comment"># 我们只采用前两个feature,方便画图在二维平面显示</span></span><br><span class="line">y = iris.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">h = <span class="number">.02</span>  <span class="comment"># 网格中的步长</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建彩色的图</span></span><br><span class="line">cmap_light = ListedColormap([<span class="string">&#x27;#FFAAAA&#x27;</span>, <span class="string">&#x27;#AAFFAA&#x27;</span>, <span class="string">&#x27;#AAAAFF&#x27;</span>])</span><br><span class="line">cmap_bold = ListedColormap([<span class="string">&#x27;#FF0000&#x27;</span>, <span class="string">&#x27;#00FF00&#x27;</span>, <span class="string">&#x27;#0000FF&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#weights是KNN模型中的一个参数，上述参数介绍中有介绍，这里绘制两种权重参数下KNN的效果图</span></span><br><span class="line"><span class="keyword">for</span> weights <span class="keyword">in</span> [<span class="string">&#x27;uniform&#x27;</span>, <span class="string">&#x27;distance&#x27;</span>]:</span><br><span class="line">    <span class="comment"># 创建了一个knn分类器的实例，并拟合数据。</span></span><br><span class="line">    clf = neighbors.KNeighborsClassifier(n_neighbors, weights=weights)</span><br><span class="line">    clf.fit(x, y)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制决策边界。为此，我们将为每个分配一个颜色</span></span><br><span class="line">    <span class="comment"># 来绘制网格中的点 [x_min, x_max]x[y_min, y_max].</span></span><br><span class="line">    x_min, x_max = x[:, <span class="number">0</span>].min() - <span class="number">1</span>, x[:, <span class="number">0</span>].max() + <span class="number">1</span></span><br><span class="line">    y_min, y_max = x[:, <span class="number">1</span>].min() - <span class="number">1</span>, x[:, <span class="number">1</span>].max() + <span class="number">1</span></span><br><span class="line">    xx, yy = np.meshgrid(np.arange(x_min, x_max, h),</span><br><span class="line">                         np.arange(y_min, y_max, h))</span><br><span class="line">    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将结果放入一个彩色图中</span></span><br><span class="line">    Z = Z.reshape(xx.shape)</span><br><span class="line">    plt.figure()</span><br><span class="line">    plt.pcolormesh(xx, yy, Z, cmap=cmap_light)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制训练点</span></span><br><span class="line">    plt.scatter(x[:, <span class="number">0</span>], x[:, <span class="number">1</span>], c=y, cmap=cmap_bold)</span><br><span class="line">    plt.xlim(xx.min(), xx.max())</span><br><span class="line">    plt.ylim(yy.min(), yy.max())</span><br><span class="line">    plt.title(<span class="string">&quot;3-Class classification (k = %i, weights = &#x27;%s&#x27;)&quot;</span></span><br><span class="line">              % (n_neighbors, weights))</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="knn和kmeans"><a class="markdownIt-Anchor" href="#knn和kmeans"></a> KNN和Kmeans</h2><p>前面说到过，KNN和Kmeans听起来有些像，但本质是有区别的，这里我们就顺便说一下两者的异同吧。</p><p>相同：</p><ol><li>K值都是重点</li><li>都需要计算平面中点的距离</li></ol><p>相异：<br />Knn和Kmeans的核心都是通过计算空间中点的距离来实现目的，只是他们的目的是不同的。KNN的最终目的是分类，而Kmeans的目的是给所有距离相近的点分配一个类别，也就是聚类。</p><p>简单说，就是画一个圈，KNN是让进来圈子里的人变成自己人，Kmeans是让原本在圈内的人归成一类人。</p><p>以上</p><h1 id="上课knn代码"><a class="markdownIt-Anchor" href="#上课knn代码"></a> 上课knn代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line">iris = load_iris()</span><br><span class="line">iris.data</span><br><span class="line"><span class="comment"># 能参与运算的单纯的数据的数据</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.data.shape</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.target <span class="comment">#分类的个数</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.target.shape <span class="comment">#150个</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line">X_train,X_test,y_train,y_test= train_test_split(iris.data,iris.target,test_size=<span class="number">0.25</span>,random_state=<span class="number">33</span>)</span><br><span class="line"><span class="comment">#第一个参数放的是存粹的能参与运算的数据，即待划分的数据</span></span><br><span class="line"><span class="comment">#第二个参数是已经分类好的带标签的数据</span></span><br><span class="line"><span class="comment">#第三个参数为样本占比，如果是整数的话就是样本数量,即测试集占比25%</span></span><br><span class="line"><span class="comment">#第四个参数为随机数的种子，保证每次都是同一个随机数。若为0或不填，则每次得到数据都不一样</span></span><br></pre></td></tr></table></figure><blockquote><p>train_test_split()函数是用来随机划分样本数据为训练集和测试集的，当然也可以人为的切片划分。函数返回值为划分好的训练集测试集样本和训练集测试集标签。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line">ss = StandardScaler()</span><br><span class="line">X_train = ss.fit_transform(X_train)</span><br><span class="line">X_test = ss.transform(X_test)</span><br></pre></td></tr></table></figure><blockquote><p>注意这是数据预处理中的方法：</p><ul><li><strong>Fit():</strong> Method calculates the parameters μ and σ and saves them as internal objects.</li></ul><p>解释：简单来说，就是求得训练集X的均值啊，方差啊，最大值啊，最小值啊这些训练集X固有的属性。可以理解为一个训练过程</p><ul><li><strong>Transform():</strong> Method using these calculated parameters apply the transformation to a particular dataset.</li></ul><p>解释：在Fit的基础上，进行标准化，降维，归一化等操作（看具体用的是哪个工具，如PCA，StandardScaler等）。</p><ul><li><strong>Fit_transform():</strong> joins the fit() and transform() method for transformation of dataset.</li></ul><p>解释：fit_transform是fit和transform的组合，既包括了训练又包含了转换。</p><p>transform()和fit_transform()二者的功能都是对数据进行某种统一处理（比如标准化~N(0,1)，将数据缩放(映射)到某个固定区间，归一化，正则化等）</p><p>fit_transform(trainData)对部分数据先拟合fit，找到该part的整体指标，如均值、方差、最大值最小值等等（根据具体转换的目的），然后对该trainData进行转换transform，从而实现数据的标准化、归一化等等。</p><p>根据对之前部分trainData进行fit的整体指标，对剩余的数据（testData）使用同样的均值、方差、最大最小值等指标进行转换transform(testData)，**从而保证train、test处理方式相同。**所以，一般都是这么用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line">sc = StandardScaler()</span><br><span class="line">sc.fit_tranform(X_train)</span><br><span class="line">sc.tranform(X_test)</span><br></pre></td></tr></table></figure><h2 id="note"><a class="markdownIt-Anchor" href="#note"></a> <strong>Note:</strong></h2><ul><li>必须先用fit_transform(trainData)，之后再transform(testData)</li><li>如果直接transform(testData)，程序会报错</li><li>如果fit_transfrom(trainData)后，使用fit_transform(testData)而不transform(testData)，虽然也能归一化，但是两个结果不是在同一个“标准”下的，具有明显差异。(<strong>一定要避免这种情况</strong>)</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#knn方法的使用，K值范围为3~10，超过了10严重影响了算法执行的效率</span></span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"></span><br><span class="line">knc = KNeighborsClassifier()</span><br><span class="line">knc.fit(X_train,y_train)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">y_predict = knc.predict(X_test)</span><br><span class="line">print(<span class="string">&#x27;THe accuracy of K-Nearest Neighbor Classifier is&#x27;</span>,knc.score(X_test,y_test))</span><br><span class="line"><span class="comment"># 使用模型自带的评估函数进行准确性测评。</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report</span><br><span class="line">print(classification_report(y_test,y_predict,target_names=iris.target_names))</span><br></pre></td></tr></table></figure><blockquote><p><strong>sklearn.metrics.classification_report(y_true, y_pred, labels=None, target_names=None, sample_weight=None, digits=2, output_dict=False)</strong></p><ul><li><code>y_true</code>：1 维数组，真实数据的分类标签</li><li><code>y_pred</code>：1 维数组，模型预测的分类标签</li><li><code>labels</code>：列表，需要评估的标签名称</li><li><code>target_names</code>：列表，指定标签名称</li><li><code>sample_weight</code>：1 维数组，不同数据点在评估结果中所占的权重</li><li><code>digits</code>：评估报告中小数点的保留位数，如果 <code>output_dict=True</code>，此参数不起作用，返回的数值不作处理</li><li><code>output_dict</code>：若真，评估结果以字典形式返回</li></ul><h5 id="返回"><a class="markdownIt-Anchor" href="#返回"></a> 返回</h5><p>字符串或字典。</p><p>每个分类标签的精确度，召回率和 F1-score。</p><ul><li><strong>精确度：precision</strong>，正确预测为正的，占全部预测为正的比例，TP / (TP+FP)</li><li><strong>召回率：recall</strong>，正确预测为正的，占全部实际为正的比例，TP / (TP+FN)</li><li><strong>F1-score</strong>：精确率和召回率的调和平均数，2 * precision*recall / (precision+recall)</li></ul><p>同时还会给出总体的微平均值，宏平均值和加权平均值。</p><ul><li>微平均值：micro average，所有数据结果的平均值</li><li>宏平均值：macro average，所有标签结果的平均值</li><li>加权平均值：weighted average，所有标签结果的加权平均值</li></ul><p>在二分类场景中，正标签的召回率称为<strong>敏感度（sensitivity）</strong>，负标签的召回率称为<strong>特异性（specificity）</strong>。</p></blockquote><h1 id="上课knn代码-2"><a class="markdownIt-Anchor" href="#上课knn代码-2"></a> 上课knn代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_data</span>():</span></span><br><span class="line">    features = np.array( [[<span class="number">2.88</span>, <span class="number">3.05</span>], [<span class="number">3.1</span>, <span class="number">2.45</span>], [<span class="number">3.05</span>, <span class="number">2.8</span>], [<span class="number">2.9</span>, <span class="number">2.7</span>], [<span class="number">2.75</span>, <span class="number">3.4</span>],</span><br><span class="line">         [<span class="number">3.23</span>, <span class="number">2.9</span>], [<span class="number">3.2</span>, <span class="number">3.75</span>], [<span class="number">3.5</span>, <span class="number">2.9</span>], [<span class="number">3.65</span>, <span class="number">3.6</span>], [<span class="number">3.35</span>, <span class="number">3.3</span>]])</span><br><span class="line">    labels = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;B&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> features, labels</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">features, labels = create_data()</span><br><span class="line">print(<span class="string">&#x27;features: \n&#x27;</span>, features)</span><br><span class="line">print(<span class="string">&#x27;labels:\n&#x27;</span>, labels)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">plt.xlim((<span class="number">2.4</span>, <span class="number">3.8</span>))</span><br><span class="line">plt.ylim((<span class="number">2.4</span>, <span class="number">3.8</span>))</span><br><span class="line"></span><br><span class="line">x_features = list(map(<span class="keyword">lambda</span> x: x[<span class="number">0</span>], features))</span><br><span class="line">y_features = list(map(<span class="keyword">lambda</span> y: y[<span class="number">1</span>], features))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.scatter(x_features[:<span class="number">5</span>], y_features[:<span class="number">5</span>], c=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">plt.scatter(x_features[<span class="number">5</span>:], y_features[<span class="number">5</span>:], c=<span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">plt.scatter([<span class="number">3.18</span>], [<span class="number">3.15</span>], c=<span class="string">&#x27;r&#x27;</span>, marker=<span class="string">&#x27;x&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">d_man</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    d = np.sum(np.abs(x - y))</span><br><span class="line">    <span class="keyword">return</span> d</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = np.array([<span class="number">3.1</span>,<span class="number">3.2</span>])</span><br><span class="line"></span><br><span class="line">y = np.array([<span class="number">2.5</span>, <span class="number">2.8</span>])</span><br><span class="line"></span><br><span class="line">d_man = d_man(x, y)</span><br><span class="line">print(d_man)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">d_euc</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    d = np.sqrt(np.sum(np.square(x-y)))</span><br><span class="line">    <span class="keyword">return</span> d</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = np.random.random(<span class="number">10</span>)</span><br><span class="line">print(<span class="string">&quot;x:&quot;</span>, x)</span><br><span class="line"></span><br><span class="line">y = np.random.random(<span class="number">10</span>)</span><br><span class="line">print(<span class="string">&quot;y:&quot;</span>, y)</span><br><span class="line"></span><br><span class="line">distance_euc = d_euc(x, y)</span><br><span class="line">print(distance_euc)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">marority_voting</span>(<span class="params">class_count</span>):</span></span><br><span class="line">    sorted_class_count = sorted(</span><br><span class="line">        class_count.items(), key=operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> sorted_class_count</span><br><span class="line"></span><br><span class="line">arr = &#123;<span class="string">&#x27;A&#x27;</span>:<span class="number">3</span>, <span class="string">&#x27;B&#x27;</span>:<span class="number">2</span>, <span class="string">&quot;c&quot;</span>:<span class="number">6</span>, <span class="string">&quot;D&quot;</span>:<span class="number">5</span>&#125;</span><br><span class="line">marority_voting(arr)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实现自己的knn算法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">knn_classify</span>(<span class="params">test_data, train_data, labels, k</span>):</span></span><br><span class="line">    distances = np.array([])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> each_data <span class="keyword">in</span> train_data:</span><br><span class="line">        d = d_euc(test_data, each_data)</span><br><span class="line">        distances = np.append(distances, d)</span><br><span class="line">    </span><br><span class="line">    sorted_distance_index = distances.argsort()</span><br><span class="line">    sorted_distance = np.sort(distances)</span><br><span class="line">    r = (sorted_distance[k]+sorted_distance[k<span class="number">-1</span>])/<span class="number">2</span></span><br><span class="line">    </span><br><span class="line">    class_count = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        vote_label = labels[sorted_distance_index[i]]</span><br><span class="line">        class_count[vote_label] = class_count.get(vote_label, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    final_label = marority_voting(class_count)</span><br><span class="line">    <span class="keyword">return</span> final_label, r</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test_data = np.array([<span class="number">3.18</span>, <span class="number">3.15</span>])</span><br><span class="line">final_label, r = knn_classify(test_data, features, labels, <span class="number">5</span>)</span><br><span class="line">final_label</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">circle</span>(<span class="params">r, a, b</span>):</span></span><br><span class="line">    theta = np.arange(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">0.01</span>)</span><br><span class="line">    x = a+r *np.cos(theta)</span><br><span class="line">    y = b+r*np.sin(theta)</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">k_circle_x, k_circle_y = circle(r, <span class="number">3.18</span>, <span class="number">3.15</span>)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">plt.xlim((<span class="number">2.4</span>, <span class="number">3.8</span>))</span><br><span class="line">plt.ylim((<span class="number">2.4</span>, <span class="number">3.8</span>))</span><br><span class="line"></span><br><span class="line">x_features = list(map(<span class="keyword">lambda</span> x: x[<span class="number">0</span>], features))</span><br><span class="line">y_features = list(map(<span class="keyword">lambda</span> y: y[<span class="number">1</span>], features))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.scatter(x_features[:<span class="number">5</span>], y_features[:<span class="number">5</span>], c=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">plt.scatter(x_features[<span class="number">5</span>:], y_features[<span class="number">5</span>:], c=<span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">plt.scatter([<span class="number">3.18</span>], [<span class="number">3.15</span>], c=<span class="string">&#x27;r&#x27;</span>, marker=<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(k_circle_x, k_circle_y)</span><br></pre></td></tr></table></figure><h1 id="朴素贝叶斯"><a class="markdownIt-Anchor" href="#朴素贝叶斯"></a> 朴素贝叶斯</h1><p><a href="https://www.kaggle.com/uciml/pima-indians-diabetes-database">作业</a></p><h1 id="决策树"><a class="markdownIt-Anchor" href="#决策树"></a> 决策树</h1>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> ai算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网实验</title>
      <link href="/2020/10/14/%E8%AE%A1%E7%BD%91%E5%AE%9E%E9%AA%8C/"/>
      <url>/2020/10/14/%E8%AE%A1%E7%BD%91%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="补笔记"><a class="markdownIt-Anchor" href="#补笔记"></a> <a href="https://baike.baidu.com/item/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/5446046?fr=aladdin">补笔记</a></h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/10/14/HLDXFz67tTgqVhC.png" alt="拓扑图" /></p><h1 id="ipv4地址和子网掩码"><a class="markdownIt-Anchor" href="#ipv4地址和子网掩码"></a> IPV4地址和子网掩码</h1><ul><li>由 <strong>网络地址</strong> 和 <strong>主机地址</strong> 组成</li><li>子网掩码指示出网络地址位数和主机地址位数</li></ul><h1 id="子网划分"><a class="markdownIt-Anchor" href="#子网划分"></a> 子网划分</h1><ul><li><p>借用IPV4地址中主机地址的位数来充当网络地址</p></li><li><p>节约IPV4地址</p><blockquote><p>一个网络中如果接入的主机数目固定，如果分给这个网络的网络地址所能容纳的主机数很多，就造成了浪费，所以可以进行子网划分，使地址得到合理使用。</p></blockquote></li></ul><h1 id="千兆交换机接口"><a class="markdownIt-Anchor" href="#千兆交换机接口"></a> 千兆交换机接口</h1><p>2、其他类似55/39系列交换机：Ethernet0/0/23（或在系统中缩写为E0/0/23），<br />第一个0为交换机的ID，按照交换机堆叠后的顺序依次类推0、1、2，如果没有堆叠，此处为0；<br />第二个0为本交换机的插槽位，按照3926s为例，前24个口为0，第一个模块插槽为1，第二个为2；<br />第三个位置的23表明是第23口。举例说明：如果是一台3926s的第一个插槽的光纤口，</p><h1 id="设置路由器接口报文认证"><a class="markdownIt-Anchor" href="#设置路由器接口报文认证"></a> 设置路由器接口报文认证</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[HuaWei-GE0&#x2F;0&#x2F;0]rip authentication-mode simple password</span><br><span class="line">&#x2F;&#x2F;这个password是自己设置的密码</span><br><span class="line">&#x2F;&#x2F;simple将在报文中采用明码进行存储密码</span><br><span class="line">&#x2F;&#x2F;或者</span><br><span class="line">[HuaWei-GE0&#x2F;0&#x2F;0]rip authentication-mode md5 usual key-string</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;取消接口报文认证</span><br><span class="line">[HuaWei-GE0&#x2F;0&#x2F;0]undo rip authentication-mode</span><br></pre></td></tr></table></figure><blockquote><p>设置了报文认证的路由器接口只接收相同认证方式相同密码的接口发过来的路由更新信息</p><p>同样的没有设置报文认证的路由器接口不接收设置了报文认证路由器接口发来的路由更新信息</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLServerStudy</title>
      <link href="/2020/10/12/SQLServerStudy/"/>
      <url>/2020/10/12/SQLServerStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="t-sql简介"><a class="markdownIt-Anchor" href="#t-sql简介"></a> T-SQL简介</h1><ul><li><p><strong>SQL Server</strong> 用于操作数据库的编程语言为<strong>Transaction-SQL</strong> ，简称 <strong>T-SQL</strong></p></li><li><p>SQL和T-SQL的区别</p><p><strong>SQL</strong> 作为结构化查询语言，是标准的关系型数据库通用的标准语言；<strong>T-SQL</strong>是在 <strong>SQL</strong> 基础上扩展了延伸的函数、系统预存程序以及<strong>程序设计</strong> 结构的 <strong>SQL Server</strong> 中使用的语言</p></li></ul><h1 id="sqlserver中修改列表属性的语句"><a class="markdownIt-Anchor" href="#sqlserver中修改列表属性的语句"></a> SQLServer中修改列表属性的语句</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">alter</span> <span class="keyword">column</span> columnname newtype;</span><br><span class="line"><span class="comment">--修改数据类型的时候要保障改属性不是主键，否则要先删除主键</span></span><br></pre></td></tr></table></figure><blockquote><p>SQLServer中没有Modify关键字，用alter column关键字</p></blockquote><h1 id="sqlserver中修改列表属性从空设置为不空或反之"><a class="markdownIt-Anchor" href="#sqlserver中修改列表属性从空设置为不空或反之"></a> SQLServer中修改列表属性从空设置为不空，或反之</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--相当于重新设置数据类型，只是数据类型相同，后面跟了not null或null</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">alter</span> <span class="keyword">column</span> columnname newtype <span class="keyword">not</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h1 id="sqlserver中删除主键"><a class="markdownIt-Anchor" href="#sqlserver中删除主键"></a> SQLServer中删除主键</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">drop</span> <span class="keyword">constraint</span> 主键名称;</span><br><span class="line"><span class="comment">--主键名称在表中查看，或者执行sp_help tablename;命令查询。</span></span><br></pre></td></tr></table></figure><blockquote><p>注意SQL Server中的主键名字中是<strong>两个下划线连着的</strong>。</p></blockquote><h1 id="sqlserver添加一列"><a class="markdownIt-Anchor" href="#sqlserver添加一列"></a> SQLServer添加一列</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">add</span> newcolumn <span class="keyword">type</span>;</span><br><span class="line"><span class="comment">--注意不能加column</span></span><br></pre></td></tr></table></figure><blockquote><p>不管原表中是否有该列的数据，新加后统一位NULL</p></blockquote><h1 id="sql-check约束"><a class="markdownIt-Anchor" href="#sql-check约束"></a> SQL check约束</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--在创建表的过程中添加约束</span></span><br><span class="line">creat table tablename</span><br><span class="line">(</span><br><span class="line">   num int,</span><br><span class="line">    <span class="keyword">check</span>(<span class="keyword">num</span>&gt;<span class="number">0</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>若已经创建了num属性，而是要添加约束则</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">check</span>(<span class="keyword">num</span>&gt;<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">unique</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> <span class="keyword">name</span> <span class="keyword">unique</span>();<span class="comment">--设置约束名字</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename</span><br><span class="line"><span class="keyword">add</span> primary <span class="keyword">key</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> <span class="keyword">name</span> primary <span class="keyword">key</span>();<span class="comment">--设置主键名字</span></span><br></pre></td></tr></table></figure><h1 id="sql-设置约束名称"><a class="markdownIt-Anchor" href="#sql-设置约束名称"></a> SQL 设置约束名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">num</span> <span class="built_in">int</span> <span class="keyword">constraint</span> PK_num primary <span class="keyword">key</span> </span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="sql-server中的索引"><a class="markdownIt-Anchor" href="#sql-server中的索引"></a> SQL Server中的索引</h1><p>还没学</p><h1 id="transact-sql插入数据"><a class="markdownIt-Anchor" href="#transact-sql插入数据"></a> transact-SQL插入数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tablename(attribute1,attribute2,attribute3,attribute4)</span><br><span class="line"><span class="keyword">values</span>(data1,data2,data3,data4);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tablename</span><br><span class="line"><span class="keyword">values</span>(data1,data2,data3,...);</span><br><span class="line"><span class="comment">--插入的是表中的全部数据时才能直接用这个。</span></span><br></pre></td></tr></table></figure><h1 id="sql外键"><a class="markdownIt-Anchor" href="#sql外键"></a> SQL外键</h1><blockquote><p>外键用于与另一张表的关联。是能确定另一张表记录的字段，数据库强制你保持数据的一致性。</p></blockquote><ul><li><p>外键的作用</p><p>我们先建有外键关联的两张表</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/10/21/pghWeO9jMt4P5UJ.png" alt="image.png" /></p><p>​然后在course表中插入一条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_course (StuId, CourseName, Score) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;java基础&#x27;</span>, <span class="number">80</span>);</span><br></pre></td></tr></table></figure><p>​然后报错了</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/10/21/KeWmHut1M4BhnCr.png" alt="image.png" /></p><p>​原因就是Student表中并没有主键Id为1的这条记录，那么就不能在Course表中插入这叫记录。</p><p>​接下来我们在Student表中插入一条记录，并且主键的Id为1</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/10/21/cv2EfGosqQM8yu7.png" alt="image.png" /></p><p>​然后我们接着执行这条sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_course (StuId, CourseName, Score) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;java基础&#x27;</span>, <span class="number">80</span>);</span><br></pre></td></tr></table></figure><p>​就可以执行成功</p><ul><li><p>同样地，修改删除操作也是如此，不能破坏表中的关系，简单地说，就是不能给Student表中不存在的学生成绩。<br />而且删除的时候得先删除外键表再删除主键表<br />例如：如果我把Student表中数据删除了，那么Course表中StuId = 1的这个学生就不存在了，所以数据库不会让你删。</p></li><li><p>外键的设置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">Id_O <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">OrderNo <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">Id_P <span class="built_in">int</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (Id_O),</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (Id_P) <span class="keyword">REFERENCES</span> Persons(Id_P)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (Id_P)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(Id_P)</span><br></pre></td></tr></table></figure></li></ul><h1 id="select-attribute1"><a class="markdownIt-Anchor" href="#select-attribute1"></a> select attribute1</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">all</span> attribute1         <span class="comment">--默认是select all</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> attribute1    <span class="comment">--去重复是select distinct</span></span><br></pre></td></tr></table></figure><h1 id="sql-中确定数据范围"><a class="markdownIt-Anchor" href="#sql-中确定数据范围"></a> SQL 中确定数据范围</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> attribute1</span><br><span class="line"><span class="keyword">from</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">where</span> attribute1 <span class="keyword">between</span> <span class="number">20</span> <span class="keyword">and</span> <span class="number">23</span>; </span><br><span class="line"><span class="comment">--在20-23中的</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> attribute1</span><br><span class="line"><span class="keyword">from</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">where</span> attribute1 <span class="keyword">not</span> <span class="keyword">between</span> <span class="number">20</span> <span class="keyword">and</span> <span class="number">23</span>;</span><br><span class="line"><span class="comment">--不在20到23中的</span></span><br></pre></td></tr></table></figure><h1 id="查询中属性一升序属性二降序"><a class="markdownIt-Anchor" href="#查询中属性一升序属性二降序"></a> 查询中属性一升序，属性二降序</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> attribute1 <span class="keyword">ASC</span>,<span class="keyword">attribute</span> <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h1 id="group-by-和-group-by-all"><a class="markdownIt-Anchor" href="#group-by-和-group-by-all"></a> group by 和 group by all</h1><ul><li>只有在有where语句时，这个才有意义</li><li>group by 只显示符合where条件的分组</li><li>group by all显示全部的分组，不符合where条件的分组，对应的属性值为null</li></ul><h1 id="group-by-后面多个字段"><a class="markdownIt-Anchor" href="#group-by-后面多个字段"></a> group by 后面多个字段</h1><ul><li><p>group by后面多个字段的意思就是，这几个字段联合起来进行分组</p></li><li><p>但是分组是有先后顺序的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">group by attribute1,attribute2;</span><br></pre></td></tr></table></figure><blockquote><p>分组的顺序是先attribute2，再attribute1</p><p>即先按照attribute2进行分组，分好之后再在分组中按照attribute1进行分组</p></blockquote></li></ul><h1 id="datetime录入时要加引号"><a class="markdownIt-Anchor" href="#datetime录入时要加引号"></a> datetime录入时要加引号</h1><h1 id="查询问题"><a class="markdownIt-Anchor" href="#查询问题"></a> 查询问题</h1><ul><li><p><strong>查询选修了全部课程的学生姓名</strong></p><ul><li><p>方法一：集合的交、并、差</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname</span><br><span class="line"><span class="keyword">from</span> student s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">select</span> cno</span><br><span class="line">        <span class="keyword">from</span> course</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">except</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">select</span> cno</span><br><span class="line">        <span class="keyword">from</span> student_course</span><br><span class="line">        <span class="keyword">where</span> sno = s1.sno</span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>方法二：谓词的转换(双重否定等于肯定)</p><blockquote><p>选修了全部课程</p><p>==&gt;</p><p>不存在课程他没选</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s1.sname</span><br><span class="line"><span class="keyword">from</span> student s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">select</span> cno</span><br><span class="line">    <span class="keyword">from</span> course c1</span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">select</span> cno</span><br><span class="line">        <span class="keyword">where</span> sno = s1.sno <span class="keyword">and</span> cno = c1.cno</span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>至少选修了学生201215122选修的全部课程的学生号码</p><ul><li><p>方法一：集合的交、并、差</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s1.sno</span><br><span class="line"><span class="keyword">from</span> student s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">select</span> cno</span><br><span class="line">        <span class="keyword">from</span> student_course</span><br><span class="line">        <span class="keyword">where</span> sno = s1.sno </span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">union</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">select</span> cno</span><br><span class="line">        <span class="keyword">from</span> stduent_course</span><br><span class="line">        <span class="keyword">where</span> sno = <span class="string">&#x27;201215122&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">except</span></span><br><span class="line">    (</span><br><span class="line">        <span class="keyword">select</span> cno</span><br><span class="line">        <span class="keyword">from</span> </span><br><span class="line">    )</span><br><span class="line">) <span class="keyword">and</span> sno &lt;&gt; <span class="string">&#x27;201215122&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>方法二：谓词的转换(双重否定等于肯定)</p><blockquote><p>至少选修了学生201215122选修的全部课程</p><p>==&gt;</p><p>不存在201215122选修的课程该学生没选</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s1.sno</span><br><span class="line"><span class="keyword">from</span> student s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">select</span> cno</span><br><span class="line">    <span class="keyword">from</span> </span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">select</span> cno</span><br><span class="line">        <span class="keyword">from</span> student_course</span><br><span class="line">        <span class="keyword">where</span> sno = <span class="string">&#x27;201215122&#x27;</span></span><br><span class="line">    )<span class="keyword">new</span></span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">select</span> cno</span><br><span class="line">        <span class="keyword">from</span> student_course sc1</span><br><span class="line">        <span class="keyword">where</span> sc1.sno = s1.sno <span class="keyword">and</span> sc1.cno = new.cno</span><br><span class="line">    )</span><br><span class="line">) <span class="keyword">and</span> sno &lt;&gt; <span class="string">&#x27;201215122&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="集合的除运算"><a class="markdownIt-Anchor" href="#集合的除运算"></a> 集合的除运算</h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/02/1X8kEVZcdGLNPuI.png" alt="image.png" /></p><blockquote><p>包含(b1,c2),(b2,c1),(b2,c3)的集合R中的只有a1，则R÷S的结果就为a1</p></blockquote><h1 id="视图的修改"><a class="markdownIt-Anchor" href="#视图的修改"></a> 视图的修改</h1><ul><li><p>视图或表的重命名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">to</span> newtbname; <span class="comment">--改表名</span></span><br><span class="line"><span class="comment">--这是sql中的语句，sql server中没有rename关键字</span></span><br><span class="line">EXEC sp_rename &#x27;原表名&#x27;,&#x27;新表名&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>视图或表的属性重命名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">column</span> bir birthday datetime; <span class="comment">--修改属性名，类型必须要加，可以认为这里的修改就是删除原来的属性而添加一个新的属性，约束也可以改变。  </span></span><br><span class="line"><span class="comment">--上面是sql中的修改列名</span></span><br><span class="line"><span class="comment">--sql server中为</span></span><br><span class="line">修改列名：EXEC sp_rename ‘表名.[原有列名]’, ‘新列名&#x27; , &#x27;COLUMN&#x27;;</span><br><span class="line">EXEC sp_rename &#x27;ASYR_Dispatch.[OrderId]&#x27;, &#x27;Order_Id&#x27; , &#x27;COLUMN</span><br></pre></td></tr></table></figure></li></ul><h1 id="sql-server中的视图"><a class="markdownIt-Anchor" href="#sql-server中的视图"></a> SQL SERVER中的视图</h1><ul><li><p>虚拟视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> viewname[(attribute1,attribute2...)]</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> attribute1,attribute2...</span><br><span class="line"><span class="keyword">from</span> tablename</span><br><span class="line"><span class="keyword">where</span> condition;</span><br></pre></td></tr></table></figure><blockquote><p>可以指定及给子查询结果列的重命名，不指定则根据结果列名进行填充</p></blockquote></li><li><p>物化视图(索引视图)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V_Computer[(attribute1,attribute2...)]</span><br><span class="line"><span class="keyword">with</span> schemabinding</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> attribute1,attribute2...</span><br><span class="line"><span class="keyword">from</span> tablename</span><br><span class="line"><span class="keyword">where</span> condition;</span><br></pre></td></tr></table></figure></li><li><p>两者区别</p><blockquote><p>虚拟视图进行查询和修改的时候DBM会将我们的语句转换成对基本表的语句。</p><p>因为虚拟视图不是设计存储在数据库中</p><p>而</p><p>物化视图则是实际存储在数据库中的一个视图，所以查询时不用进行语句转换</p><p>但是更改的时候还是要在基本表中进行插入，删除等等</p></blockquote></li></ul><h1 id="sql-server中的索引-2"><a class="markdownIt-Anchor" href="#sql-server中的索引-2"></a> SQL SERVER中的索引</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [ <span class="keyword">UNIQUE</span> ] [ CLUSTERED | NONCLUSTERED ] <span class="keyword">INDEX</span> index_name   </span><br><span class="line">    <span class="keyword">ON</span> &lt;<span class="keyword">object</span>&gt; ( column_name [ <span class="keyword">ASC</span> | <span class="keyword">DESC</span> ] [ ,...n ] )   </span><br><span class="line">    [ <span class="keyword">WITH</span> &lt;backward_compatible_index_option&gt; [ ,...n ] ]  </span><br><span class="line">    [ <span class="keyword">ON</span> &#123; filegroup_name | <span class="string">&quot;default&quot;</span> &#125; ]  </span><br><span class="line"><span class="comment">--unique参数：为表或视图创建唯一索引。唯一索引不允许两行具有相同的索引键值。视图索引必须唯一。如果要建唯一索引的列有重复值，必须先删除重复值。</span></span><br><span class="line"><span class="comment">--clustered参数：表示指定创建的索引为聚集索引。创建索引时，键值的逻辑顺序决定表中对应行的物理顺序。聚集索引的底层(或称叶级别)包含该表的实际数据行。</span></span><br><span class="line"><span class="comment">--nonclustered：表示指定创建的索引为非聚集索引。创建一个指定表的逻辑排序的索引。对于非聚集索引，数据行的物理排序独立于索引排序。</span></span><br><span class="line"><span class="comment">--[ ASC | DESC]参数：表示指定特定索引列的升序或降序排序方向。 默认值为 ASC。</span></span><br><span class="line">&lt;<span class="keyword">object</span>&gt; ::=  </span><br><span class="line">&#123;  </span><br><span class="line">    [ database_name. [ owner_name ] . | owner_name. ]   </span><br><span class="line">    table_or_view_name  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">&lt;backward_compatible_index_option&gt; ::=  </span><br><span class="line">&#123;   </span><br><span class="line">    PAD_INDEX  </span><br><span class="line">  | FILLFACTOR = fillfactor  </span><br><span class="line">  | SORT_IN_TEMPDB  </span><br><span class="line">  | IGNORE_DUP_KEY  </span><br><span class="line">  | STATISTICS_NORECOMPUTE   </span><br><span class="line">  | DROP_EXISTING   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>创建索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> ind_sname <span class="keyword">on</span> student(sname <span class="keyword">DESC</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> ind_cname <span class="keyword">on</span> course(cname);</span><br><span class="line"><span class="comment">--因为创建表时，创建主键自动创建聚集索引，所以在其它列上创建聚集索引，要先把主键删除掉</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student_course</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">constraint</span> PK__student___63D81FA334066AB2;</span><br><span class="line"><span class="comment">--只要是更改表，都要指出是哪个表</span></span><br><span class="line"><span class="comment">--表的属性的修改都是</span></span><br><span class="line"><span class="comment">--alter table tablename</span></span><br><span class="line"><span class="comment">--表的列的值修改都是</span></span><br><span class="line"><span class="comment">--update tablename</span></span><br><span class="line"><span class="comment">--这个删除表的索引</span></span><br><span class="line"><span class="comment">--drop index indexname on tablename;</span></span><br><span class="line"><span class="comment">--删除表，删除视图，则知名数据库就可,use dbname</span></span><br><span class="line"><span class="keyword">create</span> clustered <span class="keyword">index</span> ind_sno <span class="keyword">on</span> student_course(sno);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student_course</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> PK_snotcid primary <span class="keyword">key</span>(sno,tcid);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> ind_snotcidscore <span class="keyword">on</span> student_course(sno <span class="keyword">ASC</span>,tcid <span class="keyword">ASC</span>,score <span class="keyword">DESC</span>);</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> ind_sno <span class="keyword">on</span> student_course;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"></span><br><span class="line"># SQL SERVER中的架构</span><br><span class="line"></span><br><span class="line">* 类似于C++中的namespace</span><br><span class="line">* 如果不指定登录用户的话，默认的是dbo即database owner</span><br><span class="line">* 我们创建的表、视图等等都会在架构中，所以如果一些语句不指定架构，则dbm不知到该去找哪个表。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># T-SQL常量</span><br><span class="line"></span><br><span class="line">* 字符串常量</span><br><span class="line"></span><br><span class="line">  &#96;&#96;&#96;sql</span><br><span class="line">  &#39;sql&#39;,&#39;数据库&#39;</span><br></pre></td></tr></table></figure><ul><li><p>时间值常量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;2020-11-09&#x27;</span><br></pre></td></tr></table></figure></li><li><p>货币常量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$124.5</span><br></pre></td></tr></table></figure></li><li><p>数值型常量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123,1.2,3</span><br></pre></td></tr></table></figure></li></ul><h1 id="t-sql变量"><a class="markdownIt-Anchor" href="#t-sql变量"></a> T-SQL变量</h1><ul><li><p>局部变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@var</span><br></pre></td></tr></table></figure></li><li><p>全局变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@@var</span><br></pre></td></tr></table></figure></li><li><p>T-SQL内置全局变量</p><ul><li><p>@@ERROR</p><p><strong>返回最后执行的</strong>Transact-SQL语句的错误代码。没有错误则为零</p></li><li><p>@@ROWCOUNT</p><p>返回受上一语句影响的行数，任何不返回行的语句将这一变量设置为0</p></li><li><p>@@SERVERNAME</p><p>返回本地服务器的名称</p></li><li><p>@@VERSION</p><p>返回SQL Server当前安装的日期、版本和处理器类型</p></li></ul></li><li><p>打印输出变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print @@VERSION;</span><br><span class="line"><span class="keyword">select</span> @@SERVERNAME;</span><br></pre></td></tr></table></figure></li><li><p>变量的声明</p><p>变量在使用前必须先声明才能使用</p><ul><li><p>声明局部变量的语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> @varname datatype;</span><br><span class="line"><span class="comment">--例如</span></span><br><span class="line"><span class="keyword">declare</span> @A <span class="built_in">INT</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>变量的赋值</p><ul><li><p>局部变量有两种方式赋值</p><ul><li><p>set</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @varname = <span class="keyword">value</span></span><br><span class="line"><span class="comment">--例如</span></span><br><span class="line"><span class="keyword">set</span> @A = <span class="number">3</span></span><br></pre></td></tr></table></figure></li><li><p>select</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @varname1 = value1,@varname2 = value2</span><br><span class="line"><span class="comment">--例如</span></span><br><span class="line"><span class="keyword">set</span> @A = attribute1,@B = attribute2</span><br><span class="line"><span class="keyword">from</span> tablename;</span><br></pre></td></tr></table></figure></li><li><p>区别</p><p>set只能给一个变量进行赋值，select可以给多个变量赋值</p></li></ul></li></ul></li></ul><h1 id="if-else语句"><a class="markdownIt-Anchor" href="#if-else语句"></a> if-else语句</h1><ul><li><p>语法格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if(condition)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>begin…end</strong>相当于<strong>c</strong>语言中的大括号，有多条语句才使用<strong>begin…end</strong>，相当于<strong>begin…end</strong>之间的语句就是一个语句块</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--判断是否是闰年</span></span><br><span class="line"><span class="keyword">declare</span> @<span class="keyword">year</span> <span class="built_in">int</span>;</span><br><span class="line"><span class="keyword">set</span> @<span class="keyword">year</span>=<span class="number">1900</span>;</span><br><span class="line">if(@year%4 = 0 and @year%100 &lt;&gt;0 or @year%400 = 0)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"> print(<span class="keyword">cast</span>(@<span class="keyword">year</span> <span class="keyword">as</span> <span class="built_in">varchar</span>)+<span class="string">&#x27;是闰年&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">print(<span class="keyword">cast</span>(@<span class="keyword">year</span> <span class="keyword">as</span> <span class="built_in">varchar</span>)+<span class="string">&#x27;不是闰年&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="case-end多分支语句"><a class="markdownIt-Anchor" href="#case-end多分支语句"></a> case-end多分支语句</h1><ul><li><p>语法格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">case</span><br><span class="line">when 条件1 then 结果1</span><br><span class="line">when 条件2 then 结果2</span><br><span class="line">else 其它结果</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> stuNo,成绩= <span class="keyword">case</span></span><br><span class="line">         <span class="keyword">when</span> writtenExam&lt;<span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;E&#x27;</span></span><br><span class="line">         <span class="keyword">when</span> writtenExam <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">69</span> <span class="keyword">then</span> <span class="string">&#x27;D&#x27;</span></span><br><span class="line">         <span class="keyword">when</span> writtenExam <span class="keyword">between</span> <span class="number">70</span> <span class="keyword">and</span> <span class="number">79</span> <span class="keyword">then</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line">         <span class="keyword">when</span> writtenExam <span class="keyword">between</span> <span class="number">80</span> <span class="keyword">and</span> <span class="number">89</span> <span class="keyword">then</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line">         <span class="keyword">else</span>  <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="keyword">end</span>    <span class="comment">--或者end 成绩 如下：</span></span><br><span class="line"><span class="keyword">from</span> stuMarks;</span><br><span class="line"><span class="keyword">select</span> stuNo,<span class="keyword">case</span></span><br><span class="line">         <span class="keyword">when</span> writtenExam&lt;<span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;E&#x27;</span></span><br><span class="line">         <span class="keyword">when</span> writtenExam <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">69</span> <span class="keyword">then</span> <span class="string">&#x27;D&#x27;</span></span><br><span class="line">         <span class="keyword">when</span> writtenExam <span class="keyword">between</span> <span class="number">70</span> <span class="keyword">and</span> <span class="number">79</span> <span class="keyword">then</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line">         <span class="keyword">when</span> writtenExam <span class="keyword">between</span> <span class="number">80</span> <span class="keyword">and</span> <span class="number">89</span> <span class="keyword">then</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line">         <span class="keyword">else</span>  <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="keyword">end</span> <span class="string">&#x27;成绩&#x27;</span></span><br><span class="line"><span class="keyword">from</span> stuMarks;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>,publisher,author,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">cost</span>&gt;<span class="number">50</span> <span class="keyword">then</span> <span class="string">&#x27;定价太高，不适合作教材&#x27;</span></span><br><span class="line"><span class="keyword">else</span> <span class="string">&#x27;定价&#x27;</span>+<span class="keyword">cast</span>(<span class="keyword">cost</span> <span class="keyword">as</span> <span class="built_in">varchar</span>(<span class="number">10</span>))+<span class="string">&#x27;，可以作教材&#x27;</span></span><br><span class="line"><span class="keyword">end</span> <span class="string">&#x27;是否可以作为教材&#x27;</span></span><br><span class="line"><span class="keyword">from</span> books b1;</span><br><span class="line"><span class="comment">--或者</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>,publisher,author,<span class="string">&#x27;是否可以作为教材&#x27;</span>= <span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">cost</span>&gt;<span class="number">50</span> <span class="keyword">then</span> <span class="string">&#x27;定价太高，不适合作教材&#x27;</span></span><br><span class="line"><span class="keyword">else</span> <span class="string">&#x27;定价&#x27;</span>+<span class="keyword">cast</span>(<span class="keyword">cost</span> <span class="keyword">as</span> <span class="built_in">varchar</span>(<span class="number">10</span>))+<span class="string">&#x27;，可以作教材&#x27;</span></span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"><span class="keyword">from</span> books b1;</span><br></pre></td></tr></table></figure><blockquote><p>相当于使用case定义了一列属性</p></blockquote></li></ul><h1 id="循环结构while"><a class="markdownIt-Anchor" href="#循环结构while"></a> 循环结构while</h1><ul><li><p>语法格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while(conditon)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">语句或语句块</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>continue,break,return关键字</p><ul><li>continue</li><li>break</li><li>return</li></ul></li><li><p>例如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> @<span class="keyword">sum</span> <span class="built_in">int</span>,@i <span class="built_in">int</span>;</span><br><span class="line"><span class="keyword">select</span> @i=<span class="number">1</span>,@<span class="keyword">sum</span>=<span class="number">0</span>;</span><br><span class="line">while @i &lt;= 100</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> @<span class="keyword">sum</span> = @<span class="keyword">sum</span> + @i;</span><br><span class="line"><span class="keyword">select</span> @i = @i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">print <span class="string">&#x27;1...100的和为：&#x27;</span>+<span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">4</span>),@<span class="keyword">sum</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @jie <span class="built_in">int</span>,@i2 <span class="built_in">int</span>;</span><br><span class="line"><span class="keyword">select</span> @jie=<span class="number">1</span>,@i2=<span class="number">1</span>;</span><br><span class="line">while @i2 &lt;= 10</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> @jie = @jie*@i2;</span><br><span class="line"><span class="keyword">select</span> @i2 = @i2+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">print <span class="string">&#x27;10的阶乘为：&#x27;</span>+<span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">10</span>),@jie);</span><br><span class="line"></span><br><span class="line"><span class="comment">--筛选素数</span></span><br><span class="line"><span class="keyword">declare</span> @i3 <span class="built_in">int</span>,@i4 <span class="built_in">int</span>,@flag <span class="built_in">int</span>;</span><br><span class="line"><span class="keyword">select</span> @i3 = <span class="number">2</span>,@i4 = <span class="number">2</span>,@flag=<span class="number">0</span>;</span><br><span class="line">while @i3 &lt;= 100</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> @i4 = <span class="number">2</span>;</span><br><span class="line">while(@i4&lt;@i3)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> @flag=<span class="number">0</span>;</span><br><span class="line">if(@i3%@i4=0)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> @flag=<span class="number">1</span>;</span><br><span class="line">break;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">select</span> @i4 = @i4 + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span>(@flag=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">print @i3;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">select</span> @i3 = @i3 + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="t-sql类型转换函数"><a class="markdownIt-Anchor" href="#t-sql类型转换函数"></a> T-SQL类型转换函数</h1><ul><li><p>cast函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cast(expression as date_type[(length)])</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">cast</span>(@price1 <span class="keyword">as</span> <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">cast</span>(定价 <span class="keyword">as</span> <span class="built_in">varchar</span>(<span class="number">5</span>))</span><br></pre></td></tr></table></figure></li><li><p>convert函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">convert(data_type[(length)],expresion[,style])</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">int</span>,@price1)</span><br><span class="line">print <span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">4</span>),@<span class="keyword">SUM</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">varchar</span>(<span class="number">100</span>),<span class="keyword">getdate</span>(),<span class="number">1</span>);</span><br></pre></td></tr></table></figure></li><li><blockquote><p>输出变量+字符串时，要先把变量转换为字符串</p></blockquote></li></ul><h1 id="t-sql日期函数"><a class="markdownIt-Anchor" href="#t-sql日期函数"></a> T-SQL日期函数</h1><ul><li><p>返回相应字段的整数值</p><ul><li>方式1</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">day(date_expression)</span><br><span class="line">month(date_expression)</span><br><span class="line">year(date_expression)</span><br><span class="line"><span class="comment">--返回日期常量中的相应字段的整数值</span></span><br></pre></td></tr></table></figure><ul><li>方式2</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">datepart(&lt;datepart&gt;,&lt;date&gt;)</span><br><span class="line">datepart(dd,date)<span class="comment">--等同于day(date)</span></span><br><span class="line">datepart(mm,date)<span class="comment">--等同于month(date)</span></span><br><span class="line">datepart(yy,date)<span class="comment">--等同于year(date)</span></span><br></pre></td></tr></table></figure><blockquote><p>注意方式一和方式二的返回值都为整数值</p></blockquote></li><li><p>返回相应字符的字符串形式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">datename(&lt;datepart&gt;,&lt;date&gt;)</span><br><span class="line"><span class="comment">--形式和datepart一样</span></span><br></pre></td></tr></table></figure></li><li><p>返回当前的日期和时间</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getdate()</span><br></pre></td></tr></table></figure></li><li><p>通过加减日期和时间间隔来计算并显示日期和时间</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dateadd(datepart,number,datecolumnname)</span><br><span class="line"><span class="comment">--datepart计算的单位，为day,month,year还是其它</span></span><br><span class="line"><span class="comment">--number相应值</span></span><br><span class="line"><span class="comment">--datecolumnname就是基准时间</span></span><br><span class="line"><span class="comment">--例如</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">dateadd</span>(<span class="keyword">day</span>,<span class="number">10</span>,<span class="keyword">getdate</span>());</span><br><span class="line"><span class="comment">--返回当前日期时间后10天的日期和时间</span></span><br></pre></td></tr></table></figure></li><li><p>返回两个指定时间之间的间隔，返回值为一个带正负号的整数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">datediff(datepart,startdate,enddate);</span><br><span class="line"><span class="comment">--例如</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">datediff</span>(<span class="keyword">year</span>,<span class="string">&#x27;2015&#x27;</span>,<span class="keyword">getdate</span>());</span><br></pre></td></tr></table></figure></li></ul><h1 id="t-sql存储过程stored-procedure"><a class="markdownIt-Anchor" href="#t-sql存储过程stored-procedure"></a> T-SQL存储过程(Stored Procedure)</h1><ul><li>存储过程是一组为了完成特定功能的SQL语句集，经编译后存储在数据库中。</li><li>用户通过指定存储过程的名字并给出参数(如果该存储过程带有参数)来执行它。</li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Transact SQL(sql在microsoft sql server上的加强版本) -SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpStudy</title>
      <link href="/2020/09/22/phpStudy/"/>
      <url>/2020/09/22/phpStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="参考手册"><a class="markdownIt-Anchor" href="#参考手册"></a> <a href="https://www.w3school.com.cn/php/php_intro.asp">参考手册</a></h1><h1 id="php文件放入xampp中htdoc目录下"><a class="markdownIt-Anchor" href="#php文件放入xampp中htdoc目录下"></a> php文件放入xampp中htdoc目录下</h1><h1 id="使用输出时间"><a class="markdownIt-Anchor" href="#使用输出时间"></a> 使用，输出时间</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;今天是 &quot;</span>;</span><br><span class="line">date_default_timezone_set(<span class="string">&quot;PRC&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">&quot;Y年m月d日H:i:s D&quot;</span>);<span class="comment">//小写d几号，大写D周几</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="php注释为单行注释多行注释"><a class="markdownIt-Anchor" href="#php注释为单行注释多行注释"></a> php注释为//单行注释，/**/多行注释</h1><h1 id="echo-print-print_r-var_dump"><a class="markdownIt-Anchor" href="#echo-print-print_r-var_dump"></a> echo、print、print_r、var_dump</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;内容&lt;/h2&gt;&quot;</span>;</span><br><span class="line">    <span class="comment">//将内容传送到html服务端进行解释</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;i&quot;</span>,<span class="string">&quot;am&quot;</span>,<span class="string">&quot;liwei&quot;</span>;</span><br><span class="line"><span class="comment">//可以一次输出多个字符串,以&quot;,&quot;连接</span></span><br><span class="line">    <span class="keyword">echo</span> (<span class="string">&quot;内容&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> ($b);</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;i&quot;</span>.<span class="string">&quot;am&quot;</span>.<span class="string">&quot;liwei&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;var=&quot;</span>.$var.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//使用()输出多个字符串，中间用.进行连接，&quot;.&quot;为字符串连接符</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;内容&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>print和echo的区别</p><p>print使用方法与echo相同，不同的地方是print有返回值，返回值始终为1。</p><p>所以使用过程中echo比print稍快，因为没有返回值</p></li><li><p>print_r和var_dump的区别</p><p>print_r输出数组</p><p>var_dump输出数据类型和变量的值</p></li><li><p>echo 和 print 打印不出boolean的&quot;true&quot;和&quot;false&quot;</p><p>true会打印出1,false会被认为是空</p></li></ul><h1 id="大小写问题"><a class="markdownIt-Anchor" href="#大小写问题"></a> 大小写问题</h1><ul><li><p>对自定义的变量名称大小写是敏感的</p></li><li><p>$+变量名，首次赋值的时候就会被创建( <strong>是紧跟，不加空格</strong> )</p><p>$a = 123;</p></li><li><p>对关键字大小写不敏感</p></li></ul><h1 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h1><ul><li>标量类型<ul><li>boolean</li><li>integer</li><li>float/double</li><li>string<ul><li>$first = “hello”;</li><li>$first = ‘hello’;</li><li>$first = “hell”.“o”;</li></ul></li></ul></li><li>复合型<ul><li>array</li><li>object</li></ul></li><li>特殊类型<ul><li>resource</li><li>NULL</li></ul></li></ul><h1 id="string-三种引号的使用"><a class="markdownIt-Anchor" href="#string-三种引号的使用"></a> string 三种引号的使用</h1><ul><li><h4 id="单引号括起来就是字符串"><a class="markdownIt-Anchor" href="#单引号括起来就是字符串"></a> 单引号括起来就是字符串</h4><ul><li>含有单引号的话，就只是被认为是字符串</li></ul></li><li><h4 id="双引号括起来"><a class="markdownIt-Anchor" href="#双引号括起来"></a> 双引号括起来</h4><ul><li>表示字符串</li><li>特殊字符转义序列，&quot;\n&quot;</li><li>含有变量，则会显示变量的值</li></ul></li><li><p>打印单引号，使用双引号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;i&#x27;m liwei&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><p>打印双引号，使用单引号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&quot;它&quot;是啥&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>打印双引号，使用双引号</p><ul><li>使用转义字符</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;hello \&quot; 哈哈哈&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><h4 id="反引号"><a class="markdownIt-Anchor" href="#反引号"></a> 反引号</h4><p>使用反引号括起来可以运行系统命令。</p></li></ul><h1 id="类型转换"><a class="markdownIt-Anchor" href="#类型转换"></a> 类型转换</h1><ul><li><h4 id="自动类型转换"><a class="markdownIt-Anchor" href="#自动类型转换"></a> 自动类型转换</h4><ul><li>赋值转换</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">1</span>;</span><br><span class="line">$a = <span class="string">&quot;string&quot;</span>;</span><br><span class="line"><span class="comment">//尽量一个变量存放的数据类型是固定的</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>表达式转换(临时转换，不改变原先变量数据类型)</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&quot;100&quot;</span>;</span><br><span class="line">$b = $a*<span class="number">2</span>;</span><br><span class="line"><span class="comment">//自动把a变量转换称integer</span></span><br><span class="line"><span class="keyword">echo</span> ($b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>强制类型转换<ul><li>(int),(integer)</li><li>(bool),(boolean)</li><li>(float),(double),(real)</li><li>(string)</li><li>(array)</li><li>(object)</li></ul></li></ul></li></ul><h1 id="变量的作用域"><a class="markdownIt-Anchor" href="#变量的作用域"></a> 变量的作用域</h1><ul><li><p>声明局部变量</p><p>在函数内部声明变量</p></li><li><p>声明全局变量</p><p>在函数外部声明变量为全局变量</p><ul><li><p>若要在函数内部使用全局变量</p><p>要先在函数内部声明该变量为全局变量，global + $ + 变量名;</p></li></ul></li><li><p>声明静态变量</p><p>static $var = value;</p><p>在函数外部任然存在，不会被销毁</p></li></ul><h1 id="声明可变变量名"><a class="markdownIt-Anchor" href="#声明可变变量名"></a> 声明可变变量名</h1><p>用变量值作为变量名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$var_name = <span class="string">&quot;myvar&quot;</span>;</span><br><span class="line">$$var_name = <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h1 id="常量"><a class="markdownIt-Anchor" href="#常量"></a> 常量</h1><ul><li><p>自定义常量</p><p>define(“constname”,“value”);</p></li><li><p>系统常量</p><ul><li>__FILE__( <strong>两个下划线</strong> )输出文件名，总是包含绝对路径</li><li>__LINE__( <strong>两个下划线</strong> )输出文件行数<ul><li>魔术常量，值随着代码中的位置改变而改变</li></ul></li></ul></li></ul><h1 id="运算符"><a class="markdownIt-Anchor" href="#运算符"></a> 运算符</h1><ul><li><p>算数运算符</p><p>就是学过的</p></li><li><p>逻辑运算符</p><ul><li>&amp;&amp; /and</li><li>|| / or</li><li>xor</li></ul></li><li><p>比较运算符</p><ul><li>==，值相等就返回true,数据类型可以不同</li><li>===，值相同且数据类型也相同</li><li>!=，值不等</li><li>!==，值不等或数据类型不等</li></ul></li><li><p>其他运算符</p><ul><li>.</li><li>$</li><li>@，错误控制运算符<ul><li>在表达式之前加上@，则不会提示该句引起的错误</li><li>自定义错误输出</li></ul></li><li>$a&gt;$b?$a++:$a–; 三重运算符</li></ul></li></ul><h1 id="if-while-for-dowhile"><a class="markdownIt-Anchor" href="#if-while-for-dowhile"></a> if、while、for、do…while</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">td&#123;</span><br><span class="line">border : <span class="number">1</span>px solid <span class="comment">#ccc;</span></span><br><span class="line">padding : <span class="number">3</span>px;</span><br><span class="line">text-align : right;</span><br><span class="line">&#125;</span><br><span class="line">th&#123;</span><br><span class="line">background : <span class="comment">#ccc;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;th&gt;</span><br><span class="line">distance</span><br><span class="line">&lt;/th&gt;</span><br><span class="line">&lt;th&gt;</span><br><span class="line">price</span><br><span class="line">&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$distance = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">while</span>($distance &lt;= <span class="number">300</span>)</span><br><span class="line">&#123;</span><br><span class="line">$price = $distance/<span class="number">10</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.$distance.<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.$price.<span class="string">&quot;&lt;/td&gt;&lt;/tr&gt;&quot;</span>;</span><br><span class="line">$distance = $distance + <span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="以html文件为主然后再写入php代码"><a class="markdownIt-Anchor" href="#以html文件为主然后再写入php代码"></a> 以html文件为主，然后再写入php代码</h1><blockquote><p>当php周围代码很复杂的时候，可以这样写</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;tithle&gt;&lt;&#x2F;tithle&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;table&gt;</span><br><span class="line">            &lt;tr&gt;&lt;th&gt;Distance&lt;&#x2F;th&gt;&lt;th&gt;Cost&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;</span><br><span class="line">            &lt;?php</span><br><span class="line">$distance &#x3D; 50;</span><br><span class="line">while($distance &lt;&#x3D; 250)</span><br><span class="line">&#123;                &#x2F;&#x2F;没有结束大括号，继续向后执行  </span><br><span class="line">?&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;&lt;?php echo ($distance) ?&gt;&lt;&#x2F;td&gt;</span><br><span class="line">                &lt;td&gt;&lt;?php echo ($distance&#x2F;10) ?&gt;&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;&#x2F;tr&gt;</span><br><span class="line">            &lt;?php</span><br><span class="line">$distance +&#x3D; 50;</span><br><span class="line">                &#125;</span><br><span class="line">?&gt;</span><br><span class="line">        &lt;&#x2F;table&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="数组-array"><a class="markdownIt-Anchor" href="#数组-array"></a> 数组 array()</h1><ul><li><p>array()定义数组</p></li><li><p>赋值</p><ul><li>$arr = array(“111”,“222”,…“nnn”);</li><li>$arr[0] = “111”;…</li></ul></li><li><p>获得数组长度</p><ul><li>$length = count($arr);</li></ul></li><li><p>自动添加到尾部(即最后一个元素的下标加一 )</p><ul><li>$arr[] = “string”;</li></ul></li><li><p>直接往数组中插入一个元素且指定下标元素</p><ul><li>但是中间没有赋值的元素无法输出</li><li>这样的话就不能用for循环进行遍历，因为下标变化是连续的</li><li>这时使用foreach</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>($arrname <span class="keyword">as</span> $key =&gt; $value)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//as后面 key存储下标 value存储对应的值</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;$value&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>php中的数组下标可以为其他类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$b = <span class="keyword">array</span>(<span class="string">&quot;name&quot;</span>=&gt;<span class="string">&quot;jessie&quot;</span>,<span class="string">&quot;city&quot;</span>=&gt;<span class="string">&quot;lanzhou&quot;</span>,<span class="string">&quot;age&quot;</span>=&gt;<span class="string">&quot;10&quot;</span>);</span><br><span class="line">$b[<span class="string">&quot;sex&quot;</span>] = <span class="string">&quot;famale&quot;</span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二维数组"><a class="markdownIt-Anchor" href="#二维数组"></a> 二维数组</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$b = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;地支&quot;</span> =&gt; <span class="keyword">array</span>(<span class="string">&quot;子&quot;</span>,<span class="string">&quot;丑&quot;</span>,<span class="string">&quot;鄚&quot;</span>),</span><br><span class="line">    <span class="string">&quot;天干&quot;</span> =&gt; <span class="keyword">array</span>()</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>输出二维数组</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>($b <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;$key: &quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span>($value <span class="keyword">as</span> $key1 =&gt; $value1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;$key1 is $value1 &amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出二维数组元素中的问题"><a class="markdownIt-Anchor" href="#输出二维数组元素中的问题"></a> 输出二维数组元素中的问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$a &#x3D; &quot;地支&quot;;</span><br><span class="line">$c &#x3D; 0;</span><br><span class="line">echo &quot;$b[$a][$c]&quot;;&#x2F;&#x2F;不能得到我们想要的结果</span><br></pre></td></tr></table></figure><blockquote><p>这里的解决方法就和下面这个数组下标问题一样</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$a &#x3D; &#39;地支&#39;; &#x2F;&#x2F;这里**为单引号**</span><br><span class="line">$c &#x3D; 0;</span><br><span class="line">echo &quot;&#123;$b[$a][$c]&#125;&quot;;</span><br><span class="line">echo $b[$a][$c];</span><br><span class="line"></span><br><span class="line">$a &#x3D; 地支;</span><br><span class="line">$c &#x3D; 0;</span><br><span class="line">echo &quot;&#123;$b[$a][$c]&#125;&quot;;&#x2F;&#x2F;地支被解析为常量，若没有定义这个常量则会报错</span><br><span class="line">echo $b[$a][$c];&#x2F;&#x2F;地支被当作常量来处理，若没有定义这个常量则当作字符串处理</span><br></pre></td></tr></table></figure><blockquote><p>注意二维数组不能直接通过<code>echo &quot;$b[name][name2]&quot;;</code> 输出的。</p><p>会报错，而一维数组可以</p></blockquote><h1 id="数组下标问题"><a class="markdownIt-Anchor" href="#数组下标问题"></a> 数组下标问题</h1><ul><li><p>数组的下标是不加引号、还是使用单引号、还是使用双引号</p><ul><li>不加引号：如果是数字下标就可，如果是字符串下标则还需要类型转换，影响效率</li><li>加单引号：就是字符串</li><li>加双引号：还要判断有无变量以及特殊字符转义，比单引号效率低一些</li></ul><h2 id="在双引号中有数组元素的访问时"><a class="markdownIt-Anchor" href="#在双引号中有数组元素的访问时"></a> 在双引号中有数组元素的访问时</h2><ul><li><p><a href="https://blog.csdn.net/u012143455/article/details/50516965">参考</a></p></li><li><p>当在双引号中有数组元素的访问的时候，如下的写法是 <strong>错误</strong> 的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$_GET[&#39;name&#39;]&quot;;</span><br><span class="line">echo &quot;$myarr[&#39;one&#39;]&quot;;</span><br></pre></td></tr></table></figure></li><li><p><strong>正确做法</strong> 如下，有三种：</p><ul><li><p>第一种：索引字符串不加引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$_GET[name]&quot;;</span><br></pre></td></tr></table></figure></li><li><p>第二种：索引字符串不加引号，且数组元素用花括号括起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">define (&#39;name&#39;,&#39;age&#39;);</span><br><span class="line">echo &quot;&#123;$_GET[name]&#125;&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>此时用花括号括起来的数组元素中的name就会被当作字符常量来处理，所以实际输出的相当于echo “$_GET[age]”;</p><p>如果没有定义该常量，则会 <strong>报错</strong></p></blockquote></li><li><p>第三种：索引字符串加单引号，且数组元素用花括号括起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&#123;$_GET(&#39;name&#39;)&#125;&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>效果和第一种方法相同</p></blockquote></li></ul></li></ul><h2 id="数组元素下标是否加单引号未使用双引号"><a class="markdownIt-Anchor" href="#数组元素下标是否加单引号未使用双引号"></a> 数组元素下标是否加单引号(未使用双引号)</h2><ul><li><p>加单引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $_GET[&#39;name&#39;]; &#x3D;&#x3D;&gt;echo $_GET[&quot;name&quot;];</span><br></pre></td></tr></table></figure><blockquote><p>即输出该输出的内容，name当作字符串处理</p></blockquote></li><li><p>未加单引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $_GET[name];</span><br></pre></td></tr></table></figure><blockquote><p>此时name被当作常量处理，如果没有定义常量name则当作字符串处理。即name不是常量时就和echo $_GET[‘name’]效果相同。</p></blockquote></li></ul><h2 id="数组元素下标是否加单引号和花括号使用双引号"><a class="markdownIt-Anchor" href="#数组元素下标是否加单引号和花括号使用双引号"></a> 数组元素下标是否加单引号和花括号(使用双引号)</h2><ul><li><p>不加单引号，不加花括号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$_GET[name]&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>name被当作字符串处理，即输出我们想要的内容</p></blockquote></li><li><p>加花括号，不加单引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&#123;$_GET[name]&#125;&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>name被当作字符常量处理，如果没有定义该常量，则会 <strong>报错</strong> 。</p></blockquote></li><li><p>加花括号，加单引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&#123;$_GET[&#39;name&#39;]&#125;&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>name被当作字符串处理</p></blockquote></li></ul><h2 id="数组下标被当作常量的情况"><a class="markdownIt-Anchor" href="#数组下标被当作常量的情况"></a> 数组下标被当作常量的情况</h2><ul><li><pre class="highlight"><code class="php+HTML">echo &quot;&#123;$myarr[name]&#125;&quot;;&lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;gt; 若常量不存在则会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &amp;#96;&amp;#96;&amp;#96;php+HTML&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  echo $myarr[name];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;&gt; 若常量不存在则会将name解析成字符串</code></pre></li></ul><h2 id="双引号中使用单引号"><a class="markdownIt-Anchor" href="#双引号中使用单引号"></a> 双引号中使用单引号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&#39;$myarr[name]&#39;&quot;;</span><br><span class="line">相当于echo &quot;&#39;&quot;.&quot;$myarr[name]&quot;.&quot;&#39;&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>但是</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">二维数组中就不能这样用</span><br></pre></td></tr></table></figure></li></ul><h1 id="数组排序函数"><a class="markdownIt-Anchor" href="#数组排序函数"></a> 数组排序函数</h1><ul><li>sort()：以升序对数组排序</li><li>rsort()：以降序对数组排序</li></ul><blockquote><p>用sort()和rsort()进行的排序，输出下表时会只输出0，1，2，…不会输出自定义的下标</p><p>本函数会为排序的数组中的单元赋予新的键名，这将删除原有的键名而不仅是重新排序。</p><p>如果要输出自定义的下标，要使用下面的这四个排序函数</p></blockquote><ul><li><p>asort()：根据值，以升序对关联数组进行排序</p></li><li><p>ksort()：根据键，以升序对关联数组进行排序</p></li><li><p>arsort()：根据值，以降序对关联数组进行排序</p></li><li><p>krsort()：根据键，以降序对关联数组进行排序</p></li><li><h4 id="sort-ksort-asort-rsort的异同点"><a class="markdownIt-Anchor" href="#sort-ksort-asort-rsort的异同点"></a> sort()、ksort()、asort()、rsort()的异同点</h4></li></ul><blockquote><p>相同点：sort、ksort、asort都能对数组进行升序排序</p><p>不同点：sort排序在输出的时候会重新给键赋值为0~n-1，而原来的键值对没有变还能继续赋值等等，而ksort、asort在输出时都会输出原来的键值对。</p><p>rsort是降序排序，与sort类似</p><p>都由第二个参数sortingtype指定排序类型，ksort默认把键值转换为int型来排序，asort默认把值转换为字符串类型来排序。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$arr &#x3D; array(&quot;bill&quot;&#x3D;&gt;&quot;a&quot;,&quot;steve&quot;&#x3D;&gt;&quot;b&quot;,&quot;elon&quot;&#x3D;&gt;&quot;c&quot;);</span><br><span class="line">asort($arr);</span><br><span class="line">echo &quot;根据值进行升序排序&lt;br &#x2F;&gt;&quot;;</span><br><span class="line">foreach($arr as $key &#x3D;&gt; $value)</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;key: &quot;.$key.&quot; value:&quot;.$value.&quot;&lt;br &#x2F;&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">ksort($arr);</span><br><span class="line">echo &quot;&lt;br &#x2F;&gt;根据键进行升序排序&lt;br &#x2F;&gt;&quot;;</span><br><span class="line">foreach($arr as $key &#x3D;&gt; $value)</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;key: &quot;.$key.&quot; value:&quot;.$value.&quot;&lt;br &#x2F;&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="php实现随机显示7张图片中的三张图"><a class="markdownIt-Anchor" href="#php实现随机显示7张图片中的三张图"></a> php实现随机显示7张图片中的三张图</h1><ul><li>shuffle();函数，将数组 <strong>随机排序</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">#pics img&#123;</span><br><span class="line">width : 200px;</span><br><span class="line">&#125;</span><br><span class="line">#pics div&#123;</span><br><span class="line">float : left;</span><br><span class="line">margin : 10px;</span><br><span class="line">padding : 5px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id &#x3D; &quot;pics&quot;&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$arr &#x3D; array(&quot;1.jpg&quot;,&quot;2.png&quot;,&quot;3.png&quot;,&quot;4.png&quot;,&quot;5.png&quot;,&quot;6.jpg&quot;,&quot;7.jpg&quot;);</span><br><span class="line">shuffle($arr);</span><br><span class="line">for($i &#x3D; 0;$i &lt; 3;$i ++)</span><br><span class="line">&#123;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;div&gt;&lt;img src &#x3D; &quot;myimages&#x2F;&lt;?php echo &quot;$arr[$i]&quot;; ?&gt;&quot;kj&#x2F;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>图片放在本地的myimages目录下</p></blockquote><h1 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h1><p>与其他语言类似。</p><h1 id="引用文件require和include"><a class="markdownIt-Anchor" href="#引用文件require和include"></a> 引用文件–require()和include()</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;prepend.php&#x27;</span>;</span><br><span class="line"><span class="keyword">require</span> $somefile;</span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>两个函数对于错误处理( <strong>主要区别</strong> )<ul><li>require会生成致命错误并停止脚本，用@屏蔽错误提示后，后面一片空白，上面的内容还能解释。</li><li>include只会生成一个警告，后面的内容还会解释。</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;style type &#x3D; &quot;text&#x2F;css&quot;&gt;</span><br><span class="line">#footer&#123;</span><br><span class="line">width : 100%;</span><br><span class="line">height : 30px;</span><br><span class="line">background : #25506b;</span><br><span class="line">text-align : center;</span><br><span class="line">font-size : 12px;</span><br><span class="line">padding : 8px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;</span><br><span class="line">        这是一个示例</span><br><span class="line">    &lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">include &quot;shangke.php&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><ul><li>shangke.php文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id &#x3D; &quot;footer&quot;&gt;</span><br><span class="line">&lt;p&gt;Copyright &amp;copy; 2005-2020 兰州大学 All Rights Reserved&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="超全局变量"><a class="markdownIt-Anchor" href="#超全局变量"></a> 超全局变量</h1><ul><li><p>_SERVER数组</p><ul><li>里面存放了很多服务器和用户信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$_SERVER[&quot;NAME&quot;] &#x3D; &quot;兰州大学&quot;;&#x2F;&#x2F;只会在当前进程中的所有数组插入该键值对，包括对引入文件中的该数据也起作用</span><br><span class="line">echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">print_r($_SERVER);</span><br><span class="line">echo &quot;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">echo &quot;您来自于&quot;.$_SERVER[&quot;REMOTE_ADDR&quot;];</span><br><span class="line">    include &quot;shangke.php&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><ul><li>shangke.php中的内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">print_r($_SERVER);</span><br><span class="line">echo &quot;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li><li><p>_GET数组</p><ul><li><p>通过URL里面的参数来传递数据</p></li><li><blockquote><p><strong>通过表单传递的参数是放在url(放在报文头)中，会覆盖原来url中的参数</strong></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">$_GET[&#39;id&#39;]和$_GET[&#39;name&#39;]访问GET数据</span><br><span class="line">&#x2F;&#x2F;注意中文乱码问题，使用urlencode编码</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;study.html文件</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href &#x3D; &quot;study.php?id&#x3D;3&quot;&gt;information&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;shangke.php文件</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">include &quot;study.html&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;study.php文件</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;style type &#x3D; &quot;text&#x2F;css&quot;&gt;</span><br><span class="line">#footer&#123;</span><br><span class="line">width : 100%;</span><br><span class="line">height : 30px;</span><br><span class="line">background : #25506b;</span><br><span class="line">text-align : center;</span><br><span class="line">font-size : 12px;</span><br><span class="line">padding : 8px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$_SERVER[&quot;NAME&quot;] &#x3D; &quot;兰州大学&quot;;</span><br><span class="line">echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">print_r($_SERVER);</span><br><span class="line">echo &quot;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">echo &quot;您来自于&quot;.$_SERVER[&quot;REMOTE_ADDR&quot;];</span><br><span class="line">include &quot;shangke.php&quot;;</span><br><span class="line">echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">print_r($_GET);</span><br><span class="line">echo &quot;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><ul><li>判断是否为空</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(empty($_GET))</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;no information&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;防止其他用于直接访问该网页，而url中没有参数而出现错误</span><br></pre></td></tr></table></figure><ul><li>get不适用表单传递，因为敏感信息会出现在地址栏中</li><li>get适合于收藏夹情况，因为把具体的参数都保存了，不然每次都是去首页</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;study.html</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href &#x3D; &quot;study.php?id&#x3D;3&quot;&gt;information&lt;&#x2F;a&gt;</span><br><span class="line">&lt;form action &#x3D; &quot;study.php&quot; method &#x3D; &quot;get&quot;&gt;</span><br><span class="line">用户: &lt;input type &#x3D; &quot;text&quot; name &#x3D; &quot;username&quot;&#x2F;&gt;</span><br><span class="line">&lt;br &#x2F;&gt;</span><br><span class="line">密码: &lt;input type &#x3D; &quot;password&quot; name &#x3D; &quot;password&quot;&#x2F;&gt;</span><br><span class="line">&lt;br &#x2F;&gt;</span><br><span class="line">&lt;input type &#x3D; &quot;submit&quot; name &#x3D; &quot;sub&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;shangke.php</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">include &quot;study.html&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;study.php</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">print_r($_GET);</span><br><span class="line">echo &quot;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">    echo ($_GET[&quot;username&quot;]);</span><br><span class="line">    &#x2F;&#x2F;或者  &quot;$_GET[username]&quot;</span><br><span class="line">   &#x2F;&#x2F;或者  $_GET[username] $_GET[&quot;username&quot;]</span><br><span class="line">    &#x2F;&#x2F;或者  &quot;&#123;$_GET[&#39;username&#39;]&#125;&quot; </span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>这里有个小问题，就是但就取get数组的值的时候，就是$_GET[“username”]。</p><p>但是再后面的数据库插入$_POST数组的值的时候就是</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$is = $conn-&gt;query(<span class="string">&quot;INSERT INTO `user`(`username`, `pwd`, `age`, `Gender`, `email`) VALUES (&#x27;$_POST[username]&#x27;,&#x27;$_POST[pawd]&#x27;,&#x27;$_POST[age]&#x27;,&#x27;$_POST[sex]&#x27;,&#x27;$_POST[email]&#x27;)&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>php双引号中的单引号会被当作单纯的单引号，所以会吧变量转化为对应的值，此时转化完之后这些值都被单引号括起来，成为了sql中的字符串。</p></blockquote></li><li><p>表单传递用_POST数组，信息不会出现在地址栏中</p><blockquote><p>表单的信息不会出现在地址栏(放在报文体中)中，所以不会覆盖url中原来的参数</p><p>所以可以在method=post中在url中加参数，统一也就get数组中传递了参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;study.html</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href &#x3D; &quot;study.php?id&#x3D;3&quot;&gt;information&lt;&#x2F;a&gt;</span><br><span class="line">&lt;form action &#x3D; &quot;study.php&quot; method &#x3D; &quot;post&quot;&gt;</span><br><span class="line">用户: &lt;input type &#x3D; &quot;text&quot; name &#x3D; &quot;username&quot;&#x2F;&gt;</span><br><span class="line">&lt;br &#x2F;&gt;</span><br><span class="line">密码: &lt;input type &#x3D; &quot;password&quot; name &#x3D; &quot;password&quot;&#x2F;&gt;</span><br><span class="line">&lt;br &#x2F;&gt;</span><br><span class="line">&lt;input type &#x3D; &quot;submit&quot; name &#x3D; &quot;sub&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;shangke.php</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">include &quot;study.html&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;study.php</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">print_r($_POST);</span><br><span class="line">echo &quot;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="get方法传递参数post方法传递参数get和post方法一起传递参数"><a class="markdownIt-Anchor" href="#get方法传递参数post方法传递参数get和post方法一起传递参数"></a> get方法传递参数，post方法传递参数，get和post方法一起传递参数</h1><ul><li>get方法传递的表单的参数会放在url中(放在报文头中)，且表单的参数会覆盖原来的参数</li><li>post方法传递的表单的参数不再url中(在报文体中)，且原来url中的参数不会被覆盖</li><li>所以可以在post方法中在url中加上参数，也通过get数组传递了参数。</li></ul><h1 id="post传递复选框的内容"><a class="markdownIt-Anchor" href="#post传递复选框的内容"></a> post传递复选框的内容</h1><ul><li>要给复选框的name取名位name[]，才能正确传递。</li></ul><h1 id="从_post数组中输出复选框内容"><a class="markdownIt-Anchor" href="#从_post数组中输出复选框内容"></a> 从_POST数组中，输出复选框内容</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;最不满意的食品 : &quot;;</span><br><span class="line">foreach ($_POST[&quot;food2&quot;] as $key =&gt; $value) &#123;</span><br><span class="line">echo &quot;$value &quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;&lt;br /&gt;&quot;;</span><br></pre></td></tr></table></figure><h1 id="判断表单中内容"><a class="markdownIt-Anchor" href="#判断表单中内容"></a> 判断表单中内容</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function <span class="keyword">check</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tellsome.value == <span class="string">&quot;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">tellsome.value = <span class="string">&quot;无建议&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">推荐使用document.getElementById();</span><br></pre></td></tr></table></figure><h1 id="_request数组不建议初学者使用"><a class="markdownIt-Anchor" href="#_request数组不建议初学者使用"></a> _request数组(不建议初学者使用)</h1><ul><li>既可以接受post数据，也可以接受get数据</li><li>即可以在action加上参数，也可以接受表单提交的数据(method = “post”)</li><li>且容易被别人利用漏洞攻击，所以实际中根据实际情况使用get和post</li></ul><h1 id="web数据库工作原理"><a class="markdownIt-Anchor" href="#web数据库工作原理"></a> web数据库工作原理</h1><ul><li>用户web浏览器发出http请求</li><li>web服务器接受请求，读取文件并发送给php引擎处理(对接数据库的操作是在php中进行的)</li><li>php引擎解析脚本</li><li>mysql数据库接受并执行数据库指令、返回结果给php引擎</li><li>php执行脚本结束，格式化查询结果，发送html至web服务器</li><li>web服务器将html返回给浏览器</li></ul><h1 id="php的mysql数据库函数"><a class="markdownIt-Anchor" href="#php的mysql数据库函数"></a> php的mysql数据库函数</h1><ul><li>实现连接数据库、执行sql语句、返回查询结果</li><li>即下面这些</li></ul><h1 id="php_mysql扩展库"><a class="markdownIt-Anchor" href="#php_mysql扩展库"></a> php_mysql扩展库</h1><ul><li>mysql扩展库已经停用，因为不能满足最新要求</li><li>先使用php_mysqli.dll,php_pdo_mysql等</li></ul><h1 id="mysqli增强版扩展库"><a class="markdownIt-Anchor" href="#mysqli增强版扩展库"></a> mysqli(增强版扩展库)</h1><ul><li>面向对象接口</li><li>面向过程接口</li></ul><blockquote><p>为了面向不同的使用习惯</p></blockquote><ul><li><p>连接数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$mysqli &#x3D; new mysqli(&#39;localhost&#39;,&#39;my_user&#39;,&#39;my_password&#39;,&#39;my_db&#39;);</span><br><span class="line">$mysqli &#x3D; new mysqli(数据库地址，用户名，密码，数据库名);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head &gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$host &#x3D; &quot;localhost&quot;;</span><br><span class="line">$username &#x3D; &quot;root&quot;;</span><br><span class="line">$password &#x3D; &quot;li33092728li&quot;;</span><br><span class="line">$database &#x3D; &quot;test&quot;;</span><br><span class="line">    $port &#x3D; &quot;13140&quot;;&#x2F;&#x2F;尤其是更换过默认端口的需要自己指定端口</span><br><span class="line">$conn &#x3D; @new </span><br><span class="line">        mysqli($host,$username,$password,$database,$port);</span><br><span class="line">    &#x2F;&#x2F;@符号位忽略报错信息</span><br><span class="line">if($conn-&gt;connect_errno)&#123;</span><br><span class="line">die(&quot;数据库连接错误&quot;.$conn-&gt;connect_error);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &quot;数据库连接成功&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三码合一数据库-页面-php代码"><a class="markdownIt-Anchor" href="#三码合一数据库-页面-php代码"></a> 三码合一:数据库、页面、PHP代码</h1><ul><li>存储的编码问题</li><li>通信的编码问题（可能默认情况下不是utf-8编码）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head &gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot; &#x2F;&gt; --客户端的编码方式</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">        &lt;?php</span><br><span class="line">        header(&quot;Content-type: text&#x2F;html;charset &#x3D; utf-8&quot;);</span><br><span class="line">        &#x2F;&#x2F;设置页面内容为html，变法方式为utf-8</span><br><span class="line">        $host &#x3D; &quot;localhost&quot;;</span><br><span class="line">            $username &#x3D; &quot;root&quot;;</span><br><span class="line">            $password &#x3D; &quot;li33092728li&quot;;</span><br><span class="line">            $database &#x3D; &quot;test&quot;;</span><br><span class="line">            $port &#x3D; &quot;13140&quot;;&#x2F;&#x2F;尤其是更换过默认端口的需要自己指定端口</span><br><span class="line">            $conn &#x3D; @new </span><br><span class="line">            mysqli($host,$username,$password,$database,$port);</span><br><span class="line">        &#x2F;&#x2F;@符号位忽略报错信息</span><br><span class="line">            if($conn-&gt;connect_errno)&#123;</span><br><span class="line">                die(&quot;数据库连接错误&quot;.$conn-&gt;connect_error);</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                echo &quot;数据库连接成功&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        $conn-&gt;query(&quot;set names utf8&quot;);&#x2F;&#x2F;注意这里是utf8，不是utf-8</span><br><span class="line">        &#x2F;&#x2F;而且这个编码的设置针对写库的操作的，所以要放在插入数据语句的前面</span><br><span class="line">       &#x2F;&#x2F;相当于</span><br><span class="line">        &#x2F;&#x2F;set character_set_client &#x3D; &#39;utf8&#39;</span><br><span class="line">        &#x2F;&#x2F;set character_set_connection &#x3D; &#39;utf8&#39;</span><br><span class="line">        &#x2F;&#x2F;set character_set_results &#x3D; &#39;utf8&#39;</span><br><span class="line">        ?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="php向数据库插入数据"><a class="markdownIt-Anchor" href="#php向数据库插入数据"></a> php向数据库插入数据</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head &gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type: text&#x2F;html;charset &#x3D; utf-8&quot;);</span><br><span class="line">$host &#x3D; &quot;localhost&quot;;</span><br><span class="line">$username &#x3D; &quot;root&quot;;</span><br><span class="line">$password &#x3D; &quot;li33092728li&quot;;</span><br><span class="line">$database &#x3D; &quot;test&quot;;</span><br><span class="line">$port &#x3D; &quot;13140&quot;;</span><br><span class="line">$conn &#x3D; @new mysqli($host,$username,$password,$database,$port);</span><br><span class="line">if($conn-&gt;connect_errno)&#123;</span><br><span class="line">die(&quot;数据库连接错误&quot;.$conn-&gt;connect_error);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">alert(&quot;数据库连接成功&quot;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">&#125;</span><br><span class="line">$conn-&gt;query(&quot;set names utf8&quot;);</span><br><span class="line">$is &#x3D; $conn-&gt;query(&quot;INSERT INTO &#96;user&#96;(&#96;ID&#96;, &#96;username&#96;, &#96;pwd&#96;, &#96;age&#96;, &#96;Gender&#96;, &#96;email&#96;) VALUES (&#39;1&#39;,&#39;liwei&#39;,&#39;111&#39;,12,&#39;男&#39;,&#39;20113@qq.com&#39;)&quot;);</span><br><span class="line">    if($is)</span><br><span class="line">        &#123;</span><br><span class="line">            ?&gt;</span><br><span class="line">    &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    alert(&quot;插入数据成功&quot;);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">        &#125;else</span><br><span class="line">        &#123;</span><br><span class="line">        ?&gt;</span><br><span class="line">    &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    alert(&quot;插入数据失败&quot;);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">        &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>数据表用反引号，字段名用反引号括起来</p></blockquote><h1 id="向数据库中插入表单中收集的信息"><a class="markdownIt-Anchor" href="#向数据库中插入表单中收集的信息"></a> 向数据库中插入表单中收集的信息</h1><ul><li>表单内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot; &#x2F;&gt;</span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">div&#123;</span><br><span class="line">margin :0 auto;</span><br><span class="line">text-align : center;</span><br><span class="line">border : 1px solid;</span><br><span class="line">width : 700px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;script type &#x3D; &quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">function judge()</span><br><span class="line">&#123;</span><br><span class="line">var v1 &#x3D; document.getElementById(&quot;2&quot;);</span><br><span class="line">var v2 &#x3D; document.getElementById(&quot;3&quot;);</span><br><span class="line">if(v1.value !&#x3D; v2.value)</span><br><span class="line">&#123;</span><br><span class="line">window.alert(&quot;两次密码不一致&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">function rese()</span><br><span class="line">&#123;</span><br><span class="line">alert(&quot;输入的数据将被清空，你确定吗？&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div style&#x3D;&quot;white-space:pre&quot;; id &#x3D; &quot;main&quot;&gt;</span><br><span class="line">&lt;h2&gt;用户注册&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;form action &#x3D; &quot;study.php&quot; method &#x3D; &quot;post&quot;&gt;</span><br><span class="line">用  户  名：&lt;input type &#x3D; &quot;text&quot; name &#x3D; &quot;username&quot; required&#x3D;&quot;required&quot; placeholder&#x3D;&quot;请输入用户名&quot; &#x2F;&gt;</span><br><span class="line">&lt;br&#x2F;&gt;</span><br><span class="line">密       码：&lt;input type &#x3D; &quot;password&quot; id &#x3D; &quot;2&quot; name &#x3D; &quot;pawd&quot; required&#x3D;&quot;required&quot;&#x2F;&gt;</span><br><span class="line">&lt;br&#x2F;&gt;</span><br><span class="line">确认密码：&lt;input type &#x3D; &quot;password&quot; id &#x3D; &quot;3&quot; name &#x3D; &quot;pawd&quot; required&#x3D;&quot;required&quot;&#x2F;&gt;</span><br><span class="line">&lt;br&#x2F;&gt;</span><br><span class="line">性       别：&lt;select name &#x3D; &quot;sex&quot;&gt;</span><br><span class="line">&lt;option&gt;男&lt;&#x2F;option&gt;</span><br><span class="line">&lt;option&gt;女&lt;&#x2F;option&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br><span class="line">&lt;br &#x2F;&gt;</span><br><span class="line">年       龄：       &lt;input type &#x3D; &quot;number&quot; name &#x3D; &quot;age&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;bt &#x2F;&gt;</span><br><span class="line">邮       件：       &lt;input type &#x3D; &quot;email&quot; name &#x3D; &quot;email&quot; required&#x3D;&quot;required&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type &#x3D; &quot;submit&quot;  onclick &#x3D; &quot;judge()&quot; value &#x3D; &quot;注册&quot;&#x2F;&gt;                                        &lt;input type &#x3D; &quot;reset&quot;  onclick &#x3D; &quot;rese()&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><ul><li>连接数据库进行插入操作</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot; &#x2F;&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">div&#123;</span><br><span class="line">margin :0 auto;</span><br><span class="line">text-align : center;</span><br><span class="line">border : 1px solid;</span><br><span class="line">width : 700px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type: text&#x2F;html;charset &#x3D; utf-8&quot;);</span><br><span class="line">if(empty($_POST))</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;NoInformation&quot;;</span><br><span class="line">&#125;else</span><br><span class="line">&#123;</span><br><span class="line">header(&quot;Content-type: text&#x2F;html;charset &#x3D; utf-8&quot;);</span><br><span class="line">$host &#x3D; &quot;localhost&quot;;</span><br><span class="line">$username &#x3D; &quot;root&quot;;</span><br><span class="line">$password &#x3D; &quot;li33092728li&quot;;</span><br><span class="line">$database &#x3D; &quot;test&quot;;</span><br><span class="line">$port &#x3D; &quot;13140&quot;;</span><br><span class="line">$conn &#x3D; @new mysqli($host,$username,$password,$database,$port);</span><br><span class="line">&#125;</span><br><span class="line">if($conn-&gt;connect_errno)&#123;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">alert(&quot;数据库连接错误&quot;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">die($conn-&gt;connect_error);</span><br><span class="line">&#125;</span><br><span class="line">$conn-&gt;query(&quot;set names utf8&quot;);</span><br><span class="line">$is &#x3D; $conn-&gt;query(&quot;INSERT INTO &#96;user&#96;(&#96;username&#96;, &#96;pwd&#96;, &#96;age&#96;, &#96;Gender&#96;, &#96;email&#96;) VALUES (&#39;$_POST[username]&#39;,&#39;$_POST[pawd]&#39;,&#39;$_POST[age]&#39;,&#39;$_POST[sex]&#39;,&#39;$_POST[email]&#39;)&quot;);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if($is)</span><br><span class="line">&#123;</span><br><span class="line">echo(&quot;&lt;h2&gt;注册成功!&lt;&#x2F;h2&gt;&lt;br&#x2F;&gt;注册的数据如下：&lt;br &#x2F;&gt;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line"></span><br><span class="line">echo(&quot;username:&quot;.$_POST[&quot;username&quot;].&quot;&lt;br &#x2F;&gt;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line"></span><br><span class="line">echo(&quot;age:&quot;.$_POST[&quot;age&quot;].&quot;&lt;br &#x2F;&gt;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line"></span><br><span class="line">echo(&quot;sex:&quot;.$_POST[&quot;sex&quot;].&quot;&lt;br &#x2F;&gt;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line"></span><br><span class="line">echo(&quot;email:&quot;.$_POST[&quot;email&quot;].&quot;&lt;br &#x2F;&gt;&lt;br &#x2F;&gt;&quot;);</span><br><span class="line"></span><br><span class="line">$id &#x3D; $conn-&gt;query(&quot;select last_insert_id()&quot;);</span><br><span class="line"></span><br><span class="line">$row &#x3D; $id-&gt;fetch_row();</span><br><span class="line">echo(&quot;您的ID号为：&quot;.$row[0].&quot;&lt;br &#x2F;&gt;&lt;br &#x2F;&gt;请记住此ID号，以便下次登录&quot;);</span><br><span class="line">&#125;else</span><br><span class="line">&#123;</span><br><span class="line">echo(&quot;&lt;br&#x2F;&gt;注册失败&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="php获得数据源中的数据条数返回int型"><a class="markdownIt-Anchor" href="#php获得数据源中的数据条数返回int型"></a> php获得数据源中的数据条数，返回int型</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqli_num_rows(数据资源);&#x2F;&#x2F;面向过程写法</span><br><span class="line">mysqli-&gt;num_rows()&#x2F;&#x2F;面向对象写法</span><br></pre></td></tr></table></figure><h1 id="php关闭数据库"><a class="markdownIt-Anchor" href="#php关闭数据库"></a> php关闭数据库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_close(数据资源);</span><br></pre></td></tr></table></figure><h1 id="php删除数据库内容"><a class="markdownIt-Anchor" href="#php删除数据库内容"></a> php删除数据库内容</h1><ul><li>再query()语句中执行delete语句即可</li></ul><h1 id="php查询数据库内容"><a class="markdownIt-Anchor" href="#php查询数据库内容"></a> php查询数据库内容</h1><ul><li>返回值为资源类型的结果集</li><li>处理有效资源类型数据，返回数组类型<ul><li>fetch_row() //获取结果集中的一行记录，返回索引数组(下标为1,2,3,4…)，取到一行后下标增一,即可以用一个循环输出所有行</li><li>fetch_array()//返回索引和关联数组，即返回下标(0,1,2,…)也返回数据库字段为下标</li><li>fetch_assoc()//直接返回以数据库字段为下标的数组</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$mysqli &#x3D; new mysqli(&#39;localhost&#39;,&#39;my_user&#39;,&#39;my_password&#39;,&#39;my_db&#39;);</span><br><span class="line">$mysqli &#x3D; new mysqli(数据库地址，用户名，密码，数据库名);</span><br><span class="line">    $sql &#x3D; &quot;select * from &#96;user&#96;&quot;;</span><br><span class="line">    $result &#x3D; $conn-&gt;query($sql);</span><br><span class="line">    $row &#x3D; $result -&gt; fetch_row();</span><br><span class="line">    var_dump($row);</span><br><span class="line">    echo &quot;id:&quot;.$row[0];</span><br><span class="line">    while($row &#x3D; $result-&gt;fetch_row())&#123;</span><br><span class="line">            echo &quot;id:&quot;.row[0]; &#x2F;&#x2F;显示所有行</span><br><span class="line">        &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="php返回刚刚自增创建的id"><a class="markdownIt-Anchor" href="#php返回刚刚自增创建的id"></a> php返回刚刚自增创建的id</h1><ul><li><p>三种方法</p></li><li><p>用以下语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$id &#x3D; $conn-&gt;query(&quot;select max(id) from user&quot;);</span><br></pre></td></tr></table></figure><blockquote><p>但是这种方法不适合多线程</p></blockquote></li><li><p>用以下函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$id &#x3D; mysql_insert_id();</span><br></pre></td></tr></table></figure><blockquote><p>当系统执行完INSERT后，再执行SELECT时，可能已经被分发到了不同的后端服务器，如果你使用的编程语言是PHP的话，此时应该通过 mysql_insert_id()来得到最新插入的id，每次INSERT结束后，其实对应的autoincrement值就已经计算好返回给PHP 了，你无需再发出一次独立的查询，直接用mysql_insert_id()就可以了这个函数很好用 当我们插入一条语句时 它自动返回了 最后的id值并且此函数 仅对当前链接有用 也就是说 它是多用户安全型的所以我们经常用此函数；</p><p>但此函数有一个问题 就是 当id 为bigint 型时 就不在起作用了 所以 现在 正在用此函数的请小心了不过 我们平时很少遇到这样的问题，所以可以不用管它。</p><p>但是我的用不了，字符集有问题</p></blockquote></li><li><p>用以下查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$result &#x3D; $conn-&gt;query(&quot;select last_insert_id()&quot;);</span><br><span class="line">$id &#x3D; $result-&gt;fetch_row();</span><br><span class="line">echo($id[0]);</span><br></pre></td></tr></table></figure><blockquote><p>这个查询等同于第二种方法，而且解决了bigint的问题</p><p>这个我这里可以使用，没有字符集的问题</p></blockquote></li></ul><h1 id="sql语句中value中变量应该加"><a class="markdownIt-Anchor" href="#sql语句中value中变量应该加"></a> sql语句中value中变量应该加’ ’</h1><ul><li>双引号中使用单引号</li></ul><h1 id="headerlocatoinxxxphp"><a class="markdownIt-Anchor" href="#headerlocatoinxxxphp"></a> header(locatoin:xxx.php)</h1><ul><li>执行跳转</li></ul><h1 id="实例实现评论功能可以修改删除"><a class="markdownIt-Anchor" href="#实例实现评论功能可以修改删除"></a> 实例:实现评论功能，可以修改，删除。</h1><h1 id="die语句"><a class="markdownIt-Anchor" href="#die语句"></a> die语句</h1><ul><li>停止后面的语句运行并输出语句</li></ul><h1 id="fetch_row-fetch_assoc"><a class="markdownIt-Anchor" href="#fetch_row-fetch_assoc"></a> fetch_row() fetch_assoc()</h1><ul><li><p><code>$result = $conn-&gt;query($sql)</code> 返回值为一个资源型结果集</p></li><li><p><code>$row = $result-&gt;fetch_row()</code> 将结果集中的下标对应的行取出来给$row</p><p>没取出一个下标加一，所以可以用一个循环取出结果集中的所有行</p></li><li><p><code>$row = $result-&gt;fetch_assoc()</code>  一样的只是取出来的下标不同，区别如下：</p><ul><li>fetch_row() //获取结果集中的一行记录，返回索引数组(下标为0,1,2,3,4…)，取到一行后下标增一,即可以用一个循环输出所有行</li><li>fetch_array()//返回索引和关联数组，即返回下标(0,1,2,…)也返回数据库字段为下标</li><li>fetch_assoc()//直接返回以数据库字段为下标的数组</li></ul></li></ul><h1 id="分页技术"><a class="markdownIt-Anchor" href="#分页技术"></a> 分页技术</h1><ul><li><p>首页   上一页   下一页   尾页</p></li><li><p>首页:show.php?page=1</p></li><li><p>上一页:show.php?page =n-1(当前页为n)</p></li><li><p>下一页:show.php?page=n+1</p></li><li><p>尾页:show.php?page= 总页数</p></li><li><p>总页数=ceil(总记录条数/每页显示记录)</p></li><li><p>ceil()函数：小数点舍掉并加一</p></li><li><p>从指定位置开始查询指定条数的记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> message <span class="keyword">limit</span> sart,<span class="keyword">rows</span></span><br><span class="line"><span class="comment">--start:起始位置(默认值为0)</span></span><br><span class="line"><span class="comment">--rows:每次取几条记录</span></span><br><span class="line">第一页:<span class="keyword">select</span> * <span class="keyword">from</span> message <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">3</span></span><br><span class="line">第二页:<span class="keyword">select</span> * <span class="keyword">from</span> message <span class="keyword">limit</span> <span class="number">3</span>,<span class="number">3</span></span><br><span class="line">第三页:<span class="keyword">select</span> * <span class="keyword">from</span> message <span class="keyword">limit</span> <span class="number">6</span>,<span class="number">3</span></span><br><span class="line">...</span><br><span class="line">第n页:<span class="keyword">select</span> * <span class="keyword">from</span> message <span class="keyword">limit</span> <span class="number">3</span>*(n<span class="number">-1</span>),<span class="number">3</span></span><br><span class="line"></span><br><span class="line">每页显示条数:$pagesize</span><br><span class="line">总页数:$totalPage = <span class="keyword">ceil</span>(总记录条数/$pagesize)</span><br><span class="line">当前页码:$page</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> message <span class="keyword">limit</span> ($page<span class="number">-1</span>)*$pagesize,$pagesize</span><br></pre></td></tr></table></figure></li></ul><h1 id="一个php文件中的多个php代码块"><a class="markdownIt-Anchor" href="#一个php文件中的多个php代码块"></a> 一个php文件中的多个php代码块</h1><ul><li>相当于一个代码块，然后代码进行合并</li></ul><h1 id="php实现评论功能"><a class="markdownIt-Anchor" href="#php实现评论功能"></a> php实现评论功能</h1><ul><li><p>conn.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type: text&#x2F;html;charset &#x3D; utf-8&quot;);</span><br><span class="line">$ip &#x3D; &#39;localhost&#39;;</span><br><span class="line">$user &#x3D; &#39;root&#39;;</span><br><span class="line">$password &#x3D; &#39;li33092728li&#39;;</span><br><span class="line">$database &#x3D; &#39;test&#39;;</span><br><span class="line">$port &#x3D; &#39;13140&#39;;</span><br><span class="line">$conn &#x3D; @new mysqli($ip,$user,$password,$database,$port);</span><br><span class="line">if($conn-&gt;connect_errno)</span><br><span class="line">&#123;</span><br><span class="line">die(&quot;数据库连接错误&quot;.$conn-&gt;connect_error);</span><br><span class="line">&#125;</span><br><span class="line">$conn-&gt;query(&quot;set names utf8&quot;); </span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li><li><p>show.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset &#x3D; &quot;utf-8&quot; &#x2F;&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">a&#123;</span><br><span class="line">text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line">.mya&#123;</span><br><span class="line">text-decoration:underline;</span><br><span class="line">&#125;</span><br><span class="line">textarea&#123;</span><br><span class="line">resize:none;</span><br><span class="line">border:0;</span><br><span class="line">border-radius:18px;</span><br><span class="line">background-color:rgba(241,241,241,.98);</span><br><span class="line">width: 355px;</span><br><span class="line">height: 100px;</span><br><span class="line">padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">function judge()</span><br><span class="line">&#123;</span><br><span class="line">var name &#x3D; document.getElementById(&quot;name2&quot;);</span><br><span class="line">var title &#x3D; document.getElementById(&quot;title2&quot;);</span><br><span class="line">if(name.value &#x3D;&#x3D; &quot;&quot;)</span><br><span class="line">&#123;</span><br><span class="line">name.value &#x3D; &quot;匿名用户&quot;;</span><br><span class="line">&#125;</span><br><span class="line">if(title.value &#x3D;&#x3D; &quot;&quot;)</span><br><span class="line">&#123;</span><br><span class="line">title.value &#x3D; &quot;无标题&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">function do_del(id)</span><br><span class="line">&#123;</span><br><span class="line">if(window.confirm(&#39;确定要删除吗&#39;))</span><br><span class="line">&#123;</span><br><span class="line">window.location.href &#x3D; &quot;delete.php?id&#x3D;&quot;+id;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form style &#x3D; &quot;white-space:pre&quot; action &#x3D; &quot;show.php&quot; method &#x3D; &quot;post&quot;&gt;</span><br><span class="line">昵称:&lt;input type &#x3D; &quot;text&quot; placeholder &#x3D; &quot;请输入你的昵称&quot; name &#x3D; &quot;name1&quot; id &#x3D; &quot;name2&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">标题:&lt;input type &#x3D; &quot;text&quot; placeholder &#x3D; &quot;请输入标题&quot; name &#x3D; &quot;title1&quot; id &#x3D; &quot;title2&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;textarea name &#x3D; &quot;content&quot; placeholder &#x3D; &quot;留下些什么，证明你来过&quot; required&#x3D;&quot;required&quot; &gt;&lt;&#x2F;textarea&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type &#x3D; &quot;submit&quot; name &#x3D; &quot;sub&quot; onclick&#x3D;&quot;judge()&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type: text&#x2F;html;charset &#x3D; utf-8&quot;);</span><br><span class="line">if(!empty($_POST))</span><br><span class="line">&#123;</span><br><span class="line">require &quot;conn.php&quot;;</span><br><span class="line">$sql &#x3D; &quot;INSERT INTO &#96;message&#96;(&#96;ID&#96;,&#96;Title&#96;, &#96;Author&#96;, &#96;Content&#96;, &#96;IP&#96;, &#96;Ptime&#96;) VALUES (null,&#39;$_POST[title1]&#39;,&#39;$_POST[name1]&#39;,&#39;$_POST[content]&#39;,&#39;$_SERVER[REMOTE_ADDR]&#39;,now())&quot;;</span><br><span class="line">$is &#x3D; $conn-&gt;query($sql);</span><br><span class="line">if(!$is)</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;插入失败&quot;;</span><br><span class="line">&#125;</span><br><span class="line">header(&quot;location:show.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form method&#x3D;&quot;get&quot; action&#x3D;&quot;&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;key&quot; &#x2F;&gt;&lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;sub&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">require &quot;conn.php&quot;;</span><br><span class="line">if(!empty($_GET[&#39;key&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">$key &#x3D; $_GET[&#39;key&#39;];</span><br><span class="line">$k &#x3D; &quot;&#96;Title&#96; like &#39;%$key%&#39;&quot;;</span><br><span class="line">&#125;else</span><br><span class="line">&#123;</span><br><span class="line">$k &#x3D; &quot;1&quot;;</span><br><span class="line">$key &#x3D; &quot;&quot;;&#x2F;&#x2F;不加这句如果url参数中没有key则没有这个变量，会出错</span><br><span class="line">&#125;</span><br><span class="line">$pagesize &#x3D; 3;</span><br><span class="line">$sql &#x3D; &quot;select * from message where $k&quot;;</span><br><span class="line">$result &#x3D; $conn-&gt;query($sql);</span><br><span class="line">$rows &#x3D; $result-&gt;num_rows;&#x2F;&#x2F;取出记录的总条数</span><br><span class="line">&#x2F;&#x2F;num_rows是结果集的属性，所以不加括号</span><br><span class="line">$totalpage &#x3D; ceil($rows&#x2F;$pagesize);</span><br><span class="line">if(!empty($_GET[&#39;page&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">$page &#x3D; $_GET[&#39;page&#39;];</span><br><span class="line">&#125;else</span><br><span class="line">&#123;</span><br><span class="line">$page &#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line">$start&#x3D;($page-1)*$pagesize;</span><br><span class="line">$sql &#x3D; &quot;select * from &#96;message&#96; where $k order by &#96;Ptime&#96; DESC limit $start,$pagesize&quot;;</span><br><span class="line">$result &#x3D; $conn-&gt;query($sql);</span><br><span class="line">while($row &#x3D; $result-&gt;fetch_assoc())</span><br><span class="line">&#123;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;hr &#x2F;&gt;</span><br><span class="line">&lt;h3&gt;标题：&lt;?php echo $row[&#39;Title&#39;]; ?&gt;&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;p&gt;昵称：&lt;?php echo $row[&#39;Author&#39;]; ?&gt; | from: &lt;?php echo $row[&#39;IP&#39;]; ?&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;留言内容(&lt;?php echo $row[&#39;Ptime&#39;]; ?&gt;)：&lt;br &#x2F;&gt;</span><br><span class="line">&lt;?php echo $row[&#39;Content&#39;]; ?&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;a href &#x3D; edit.php?id&#x3D;&lt;?php echo $row[&#39;ID&#39;]; ?&gt;&gt;编辑&lt;&#x2F;a&gt; | &lt;a href &#x3D; &quot;javascript:do_del(&lt;?php echo $row[&#39;ID&#39;]; ?&gt;)&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;p&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if($page&gt;1)</span><br><span class="line">&#123;</span><br><span class="line">echo &#39;&lt;a href &#x3D; &quot;show.php?page&#x3D;1&amp;key&#x3D;&#39;.$key.&#39;&quot;&gt;首页&lt;&#x2F;a&gt; &#39;;</span><br><span class="line">echo &#39;&lt;a href &#x3D; &quot;show.php?page&#x3D;&#39;.($page-1).&#39;&amp;key&#x3D;&#39;.$key.&#39;&quot;&gt;上一页&lt;&#x2F;a&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">for($i &#x3D; 1;$i &lt;&#x3D; $totalpage;$i ++)</span><br><span class="line">&#123;</span><br><span class="line">if($page!&#x3D;$i)</span><br><span class="line">&#123;</span><br><span class="line">echo &#39;&lt;a class&#x3D;&quot;mya&quot; href&#x3D;&quot;show.php?page&#x3D;&#39;.$i.&#39;&amp;key&#x3D;&#39;.$key.&#39;&quot; &gt;&#39;.$i.&quot;&lt;&#x2F;a&gt;|&quot;;</span><br><span class="line">&#125;else</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;$i|&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if($page&lt;$totalpage)</span><br><span class="line">&#123;</span><br><span class="line">echo &#39;&lt;a href &#x3D; &quot;show.php?page&#x3D;&#39;.($page+1).&#39;&amp;key&#x3D;&#39;.$key.&#39;&quot;&gt;下一页&lt;&#x2F;a&gt; &#39;;</span><br><span class="line">echo &#39;&lt;a href &#x3D; &quot;show.php?page&#x3D;&#39;.$totalpage.&#39;&amp;key&#x3D;&#39;.$key.&#39;&quot;&gt;尾页&lt;&#x2F;a&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li><li><p>edit.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset &#x3D; &quot;utf8&quot; &#x2F;&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">function judge()</span><br><span class="line">&#123;</span><br><span class="line">var name &#x3D; document.getElementById(&quot;name2&quot;);</span><br><span class="line">var title &#x3D; document.getElementById(&quot;title2&quot;);</span><br><span class="line">if(name.value &#x3D;&#x3D; &quot;&quot;)</span><br><span class="line">&#123;</span><br><span class="line">name.value &#x3D; &quot;匿名用户&quot;;</span><br><span class="line">&#125;</span><br><span class="line">if(title.value &#x3D;&#x3D; &quot;&quot;)</span><br><span class="line">&#123;</span><br><span class="line">title.value &#x3D; &quot;无标题&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">textarea&#123;</span><br><span class="line">resize:none;</span><br><span class="line">border:0;</span><br><span class="line">border-radius:18px;</span><br><span class="line">background-color:rgba(241,241,241,.98);</span><br><span class="line">width: 355px;</span><br><span class="line">height: 100px;</span><br><span class="line">padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">if(!empty($_GET))</span><br><span class="line">&#123;</span><br><span class="line">require &quot;conn.php&quot;;</span><br><span class="line">$id &#x3D; $_GET[&#39;id&#39;];</span><br><span class="line">$sql &#x3D; &quot;select * from &#96;message&#96; where &#96;ID&#96; &#x3D; $id&quot;;</span><br><span class="line">$result &#x3D; $conn-&gt;query($sql);</span><br><span class="line">$row &#x3D; $result-&gt;fetch_assoc();</span><br><span class="line">$title &#x3D; $row[&#39;Title&#39;];</span><br><span class="line">$name &#x3D; $row[&#39;Author&#39;];</span><br><span class="line">$content &#x3D; $row[&#39;Content&#39;];</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form style &#x3D; &quot;white-space:pre&quot; action &#x3D; &quot;edit.php&quot; method &#x3D; &quot;post&quot;&gt;</span><br><span class="line">昵称:&lt;input type &#x3D; &quot;text&quot; placeholder &#x3D; &quot;请输入你的昵称&quot; name &#x3D; &quot;name1&quot; id &#x3D; &quot;name2&quot; value &#x3D; &lt;?php echo &#39;&quot;&#39;.$name.&#39;&quot;&#39;; ?&gt; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">标题:&lt;input type &#x3D; &quot;text&quot; placeholder &#x3D; &quot;请输入标题&quot; name &#x3D; &quot;title1&quot; id &#x3D; &quot;title2&quot; value &#x3D; &lt;?php echo &#39;&quot;&#39;.$title.&#39;&quot;&#39;; ?&gt; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;textarea name &#x3D; &quot;content&quot; placeholder &#x3D; &quot;留下些什么，证明你来过&quot; required&#x3D;&quot;required&quot; &gt;&lt;?php echo $content; ?&gt; &lt;&#x2F;textarea&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type &#x3D; &quot;hidden&quot; name &#x3D; &quot;id&quot; value &#x3D; &lt;?php echo $id; ?&gt; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type &#x3D; &quot;submit&quot; name &#x3D; &quot;sub&quot; onclick&#x3D;&quot;judge()&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type: text&#x2F;html;charset &#x3D; utf-8&quot;);</span><br><span class="line">if(!empty($_POST))</span><br><span class="line">&#123;</span><br><span class="line">require &quot;conn.php&quot;;</span><br><span class="line">$sql &#x3D; &quot;UPDATE &#96;message&#96; SET &#96;Title&#96;&#x3D;&#39;$_POST[title1]&#39;,&#96;Author&#96;&#x3D;&#39;$_POST[name1]&#39;,&#96;Content&#96;&#x3D;&#39;$_POST[content]&#39;,&#96;Ptime&#96;&#x3D;now() WHERE &#96;ID&#96; &#x3D; $_POST[id]&quot;;</span><br><span class="line">$conn-&gt;query($sql);</span><br><span class="line">header(&quot;location:show.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li><li><p>delete.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">if(!empty($_GET))</span><br><span class="line">&#123;</span><br><span class="line">require &quot;conn.php&quot;;</span><br><span class="line">$id &#x3D; $_GET[&#39;id&#39;];</span><br><span class="line">$sql &#x3D; &quot;delete from &#96;message&#96; where &#96;ID&#96; &#x3D; $id&quot;;</span><br><span class="line">$is &#x3D; $conn-&gt;query($sql);</span><br><span class="line">&#125;</span><br><span class="line">header(&quot;location:show.php&quot;);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="php会话控制cookiesession"><a class="markdownIt-Anchor" href="#php会话控制cookiesession"></a> php会话控制(cookie&amp;session)</h1><ul><li><p>会话控制是为了解决什么问题</p><p>http为无状态协议，为了让服务器跟踪同一个客户端发出的连续请求，而使用会话控制</p></li><li><p>绘画控制用到哪两种技术</p><ul><li>将用户状态信息，存放在客户端上，cookie<ul><li>cookie是一种由服务器发送给客户端的片段信息，存储在客户端浏览器的内存或者硬盘上。</li><li>常用于保存用户名，密码，个性化设置，个人偏好记录等</li><li>当用户访问服务器时，服务器可以设置和访问cookie的信息</li><li>cookie存放的位置取决于浏览器</li></ul></li><li>将用户状态信息，存放再服务器中，session<br />*</li></ul></li><li><p>这两种技术有什么特点</p></li></ul><h1 id="cookie"><a class="markdownIt-Anchor" href="#cookie"></a> cookie</h1><ul><li><p>设置cookie</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;sky&quot;</span>,time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line"><span class="comment">//向客户端发送一个Cookie，将变量username值为sky，保存一周时间</span></span><br><span class="line"><span class="comment">//直接写数字，以秒为单位，不行</span></span><br><span class="line"><span class="comment">//以time()为基准</span></span><br><span class="line"><span class="comment">//不设置存在时间，则只会存放在客户端内存中，当关闭会话后，不会存储在客户端上</span></span><br></pre></td></tr></table></figure></li><li><p>访问$_COOKIE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">setcookie(&quot;testcookie&quot;,&quot;My first cookie&quot;,time()+24*60*60*30);</span><br><span class="line">setcookie(&quot;username&quot;,&quot;admin111&quot;,time()+60*60*24*7);</span><br><span class="line">print_r($_COOKIE);</span><br><span class="line">if(isset($_COOKIE[&#39;username&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;欢迎回家&quot;;</span><br><span class="line">echo $_COOKIE[&#39;username&#39;].&quot;来访&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">&#125;else</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;欢迎你首次访问本网站&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li><li><p>修改username的值时，第一次刷新不改变，第二次刷新才改变</p><p>因为第一次刷新的时候，执行setcookie语句，将设置内容发送给服务器，但是我们本地还没有被服务器写入，后面访问本地cookie时还是原来的值，第二次刷新的时候服务器写入了，所以本地cookie也更新了。</p></li><li><p>删除cookie</p><ul><li><p>忽略setcookie参数，只指定第一个参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;username&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>设置已经过期</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;&quot;</span>,time()<span class="number">-1</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="session"><a class="markdownIt-Anchor" href="#session"></a> session</h1><ul><li><p>session把cookie存放在服务器信息上</p></li><li><p>客户端上只需要一个唯一的session id，session id往往以cookie的形式存放在客户端上</p></li><li><p>如果客户端禁止cookie，则可以通过attach在url上的方式</p></li><li><p>使用方式</p><ul><li><pre class="highlight"><code class="php">session_start();<span class="hljs-comment">//一般写在最前面</span>&lt;!--hexoPostRenderEscape:&lt;figure <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">highlight</span> <span class="hljs-title">plain</span>"&gt;&lt;<span class="hljs-title">table</span>&gt;&lt;<span class="hljs-title">tr</span>&gt;&lt;<span class="hljs-title">td</span> <span class="hljs-title">class</span>="<span class="hljs-title">gutter</span>"&gt;&lt;<span class="hljs-title">pre</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;1&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;2&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;3&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;4&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;5&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;6&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;7&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;8&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;/<span class="hljs-title">pre</span>&gt;&lt;/<span class="hljs-title">td</span>&gt;&lt;<span class="hljs-title">td</span> <span class="hljs-title">class</span>="<span class="hljs-title">code</span>"&gt;&lt;<span class="hljs-title">pre</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;* 直接以数组的方式使用&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;* &amp;#96;&amp;#96;&amp;#96;<span class="hljs-title">php</span>&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;  <span class="hljs-title">unset</span>($<span class="hljs-title">_SESSION</span>[&amp;#39;<span class="hljs-title">key</span>&amp;#39;]);&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;  &amp;#<span class="hljs-title">x2F</span>;&amp;#<span class="hljs-title">x2F</span>;删除某个<span class="hljs-title">key</span>值对&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;  <span class="hljs-title">session_destory</span>();&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">class</span>="<span class="hljs-title">line</span>"&gt;  &amp;#<span class="hljs-title">x2F</span>;&amp;#<span class="hljs-title">x2F</span>;销毁整个<span class="hljs-title">session</span>&lt;/<span class="hljs-title">span</span>&gt;&lt;<span class="hljs-title">br</span>&gt;&lt;/<span class="hljs-title">pre</span>&gt;&lt;/<span class="hljs-title">td</span>&gt;&lt;/<span class="hljs-title">tr</span>&gt;&lt;/<span class="hljs-title">table</span>&gt;&lt;/<span class="hljs-title">figure</span>&gt;:<span class="hljs-title">hexoPostRenderEscape</span>--&gt;</span></code></pre></li><li></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSStudy</title>
      <link href="/2020/09/20/JSStudy/"/>
      <url>/2020/09/20/JSStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="参考手册"><a class="markdownIt-Anchor" href="#参考手册"></a> <a href="https://www.w3school.com.cn/js/js_examples.asp">参考手册</a></h1><h1 id="什么是javascript-script脚本"><a class="markdownIt-Anchor" href="#什么是javascript-script脚本"></a> 什么是JavaScript Script(脚本)</h1><ul><li><p>JavaScript是一种基于对象的解释型脚本语言</p></li><li><p>可用于创建客户端脚本和服务器端脚本</p></li><li><p>核心: ECMAScriptS</p><p>文档对象模型:DOM Document Object Model</p><p>浏览器对象模型:BOM Browser Object Model</p></li></ul><h1 id="javascript使用方式"><a class="markdownIt-Anchor" href="#javascript使用方式"></a> JavaScript使用方式</h1><ul><li><p>使用独立的JavaScrip解释器</p></li><li><p>使用浏览器内核中内嵌的JavaScript解释器</p><ul><li><p>直接在console中输入脚本并执行</p></li><li><p>将js代码内嵌到html文件中</p></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type = <span class="string">&quot;text/javascript&quot;</span>&gt;    </span><br><span class="line"><span class="built_in">window</span>.alert(<span class="string">&quot;hello!&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="将js代码嵌入到html文件中"><a class="markdownIt-Anchor" href="#将js代码嵌入到html文件中"></a> 将JS代码嵌入到html文件中</h1><ul><li>html文件中内嵌&lt;script&gt;…&lt;/script&gt;</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span> = <span class="string">&quot;JavaScript&quot;</span>&gt;</span></span><br><span class="line">&lt;!--对较早浏览器隐藏脚本</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;欢迎使用JavaScript&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//脚本隐藏结束</span></span></span><br><span class="line">--&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>祝学有所成<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>外部导入&lt;script src = “xxx.js”&gt;/&lt;/script&gt;</p><p>html文件中</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;xxx.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">P</span>&gt;</span></span><br><span class="line">            祝学有所成!</span><br><span class="line">        <span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><pre><code>js文件中</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;嗨！你好吗？&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>在事件处理程序中使用javascript</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript示例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">value</span> = <span class="string">&quot;你好&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">onClick</span> = <span class="string">&#x27;alert(&quot;你好!!&quot;);&#x27;</span>&gt;</span> <span class="comment">&lt;!--这里是单引号,单双引号作用都一样，只是为了区分，所以也可以写成onClick = &quot;alert(&#x27;你好!!&#x27;);&quot;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="写出的代码利用浏览器解释器进行检查"><a class="markdownIt-Anchor" href="#写出的代码利用浏览器解释器进行检查"></a> 写出的代码利用浏览器解释器进行检查</h1><ul><li>写出的代码不能正确执行，可以在浏览器检查的console中查看错误信息。</li></ul><h1 id="常用事件"><a class="markdownIt-Anchor" href="#常用事件"></a> 常用事件</h1><ul><li><h4 id="onclick"><a class="markdownIt-Anchor" href="#onclick"></a> onclick</h4></li><li><h4 id="onmouseover-onmouseout"><a class="markdownIt-Anchor" href="#onmouseover-onmouseout"></a> onmouseover、onmouseout</h4></li><li><h4 id="onload"><a class="markdownIt-Anchor" href="#onload"></a> onload</h4></li></ul><h1 id="使用alertconfirmwrite方法"><a class="markdownIt-Anchor" href="#使用alertconfirmwrite方法"></a> 使用Alert/Confirm/Write方法</h1><ul><li>使用窗口的Alert方法，可以生成一个对话框</li><li>使用窗口的Confirm方法，可以生成一个确认对话框</li><li>使用document的Write方法可以创建页面内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span> = <span class="string">&quot;JavaScript&quot;</span>&gt;</span></span><br><span class="line">        &lt;!--</span><br><span class="line"><span class="javascript">            alert(<span class="string">&quot;确定&quot;</span>);<span class="comment">//window.alert(&quot;确定&quot;);</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;谢谢!&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(confirm(<span class="string">&quot;是否要关闭当前窗口?&quot;</span>))&#123;<span class="built_in">window</span>.close();&#125;</span></span><br><span class="line">            --&gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h1><ul><li>区分大小写</li><li>每句语句以分号结尾</li><li>JavaScript注释单行为//，注释多行为/* */</li></ul><h1 id="样例1"><a class="markdownIt-Anchor" href="#样例1"></a> 样例1</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span> = <span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#ts</span>&#123;</span></span><br><span class="line">width : 200px;</span><br><span class="line"><span class="css"><span class="selector-tag">background</span> : <span class="selector-id">#ff9900</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span> : <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">font-size : 12px;</span><br><span class="line">padding : 5px;</span><br><span class="line">display : none;</span><br><span class="line">//display决定对象的显示方式block显示,none隐藏</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#example</span>&#123;</span></span><br><span class="line">width : 450px;</span><br><span class="line"><span class="css"><span class="selector-tag">background</span> : <span class="selector-id">#ff9900</span>;</span></span><br><span class="line">font-size : 18px;</span><br><span class="line">line-height : 28p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;example&quot;</span>&gt;</span></span><br><span class="line">例1：鼠标移入显示提示文本框<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">1.实现网页布局<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">2.给对象设计样式，把对象的display样式为none<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">3.使用js来操纵样式<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">当鼠标移入的时候onmouseover,使对象显示<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">更改对象的display样式为block<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">ts.style.display = &quot;block&quot;;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">当鼠标移出的时候onmouseout,使对象隐藏<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">更改对象的display样式为none<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">ts.style.display = &quot;none&quot;;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">username:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">password:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;checkbox&quot;</span> <span class="attr">onmouseover</span> = <span class="string">&quot;ts.style.display = &#x27;block&#x27;&quot;</span>; <span class="attr">onmouseout</span> = <span class="string">&quot;ts.style.display = &#x27;none&#x27;&quot;</span>;&gt;</span>记住我的登录信息</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;ts&quot;</span>&gt;</span></span><br><span class="line">如果是公用电脑，请勿选择此选项</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">value</span> = <span class="string">&quot;上交&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;reset&quot;</span> <span class="attr">value</span> = <span class="string">&quot;重来&quot;</span> <span class="attr">onclick</span> = <span class="string">&quot;window.confirm(&#x27;你的输入将被清空&#x27;)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>html设计结构</p><p>css控制表现</p><p>js控制行动</p></blockquote><h1 id="javascrip中函数的使用"><a class="markdownIt-Anchor" href="#javascrip中函数的使用"></a> JavaScrip中函数的使用</h1><ul><li><p>函数的作用</p><ul><li>简化代码</li><li>提高重用性</li><li>减少工作量</li><li>制作复杂代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">funcname</span>(<span class="params"></span>)</span></span></span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">onmouseover</span> = <span class="string">&quot;funcname()&quot;</span>;&gt;</span></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="javascript中变量的使用"><a class="markdownIt-Anchor" href="#javascript中变量的使用"></a> JavaScript中变量的使用</h1><p>使用变量使得代码简洁且提高重用性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>方块变化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#ts</span>&#123;</span></span><br><span class="line">border-style : solid;</span><br><span class="line">border-width : 5px;</span><br><span class="line">border-color : blue;</span><br><span class="line">width : 200px;</span><br><span class="line">height : 200px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">change1</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oTs= <span class="built_in">document</span>.getElementById(<span class="string">&quot;ts&quot;</span>);</span></span><br><span class="line"><span class="javascript">oTs.style.width = <span class="string">&quot;300px&quot;</span>;</span></span><br><span class="line"><span class="javascript">oTs.style.height = <span class="string">&quot;300px&quot;</span>;</span></span><br><span class="line"><span class="javascript">oTs.style.border = <span class="string">&quot;red 5px solid&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">change2</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oTs= <span class="built_in">document</span>.getElementById(<span class="string">&quot;ts&quot;</span>);</span></span><br><span class="line"><span class="javascript">oTs.style.width = <span class="string">&quot;200px&quot;</span>;</span></span><br><span class="line"><span class="javascript">oTs.style.height =<span class="string">&quot;200px&quot;</span>;</span></span><br><span class="line"><span class="javascript">oTs.style.border = <span class="string">&quot;blue 5px solid&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;ts&quot;</span> <span class="attr">onmouseover</span> = <span class="string">&quot;change1()&quot;</span>; <span class="attr">onmouseout</span> = <span class="string">&quot;change2()&quot;</span>;&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>也可以直接用id进行设置，但是上网查阅后由于兼容性问题和合法性问题，最好使用getElementById();</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>方块变化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#ts</span>&#123;</span></span><br><span class="line">border-style : solid;</span><br><span class="line">border-width : 5px;</span><br><span class="line">border-color : blue;</span><br><span class="line">width : 200px;</span><br><span class="line">height : 200px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">change1</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//var oTs= document.getElementById(&quot;ts&quot;);</span></span></span><br><span class="line"><span class="javascript">ts.style.width = <span class="string">&quot;300px&quot;</span>;</span></span><br><span class="line"><span class="javascript">ts.style.height = <span class="string">&quot;300px&quot;</span>;</span></span><br><span class="line"><span class="javascript">ts.style.border = <span class="string">&quot;red 5px solid&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">change2</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//var oTs= document.getElementById(&quot;ts&quot;);</span></span></span><br><span class="line"><span class="javascript">ts.style.width = <span class="string">&quot;200px&quot;</span>;</span></span><br><span class="line"><span class="javascript">ts.style.height =<span class="string">&quot;200px&quot;</span>;</span></span><br><span class="line"><span class="javascript">ts.style.border = <span class="string">&quot;blue 5px solid&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;ts&quot;</span> <span class="attr">onmouseover</span> = <span class="string">&quot;change1()&quot;</span>; <span class="attr">onmouseout</span> = <span class="string">&quot;change2()&quot;</span>;&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js作业，方块变化</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>方块变化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#ts</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span> : <span class="selector-id">#0cfeda</span>;</span></span><br><span class="line">width : 200px;</span><br><span class="line">height : 200px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">change1</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oTs= <span class="built_in">document</span>.getElementById(<span class="string">&quot;ts&quot;</span>);</span></span><br><span class="line"><span class="javascript">oTs.style.width = <span class="string">&quot;300px&quot;</span>;</span></span><br><span class="line"><span class="javascript">oTs.style.height = <span class="string">&quot;300px&quot;</span>;</span></span><br><span class="line"><span class="javascript">oTs.style.background = <span class="string">&quot;#00ff00&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">change2</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oTs= <span class="built_in">document</span>.getElementById(<span class="string">&quot;ts&quot;</span>);</span></span><br><span class="line"><span class="javascript">oTs.style.width = <span class="string">&quot;200px&quot;</span>;</span></span><br><span class="line"><span class="javascript">oTs.style.height =<span class="string">&quot;200px&quot;</span>;</span></span><br><span class="line"><span class="javascript">oTs.style.background = <span class="string">&quot;#0cfeda&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;ts&quot;</span> <span class="attr">onmouseover</span> = <span class="string">&quot;change1()&quot;</span>; <span class="attr">onmouseout</span> = <span class="string">&quot;change2()&quot;</span>;&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="我们可以利用javascript改变html文件中的任何一个元素"><a class="markdownIt-Anchor" href="#我们可以利用javascript改变html文件中的任何一个元素"></a> 我们可以利用JavaScript改变html文件中的任何一个元素</h1><h1 id="利用js实现日间夜间模式的切换"><a class="markdownIt-Anchor" href="#利用js实现日间夜间模式的切换"></a> 利用JS实现日间夜间模式的切换</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>方块变化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">id</span> = <span class="string">&quot;lk&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;day.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">night</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;lk&quot;</span>).href = <span class="string">&quot;night.css&quot;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa<span class="tag">&lt;<span class="name">br</span> /&gt;</span>aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa<span class="tag">&lt;<span class="name">br</span> /&gt;</span>aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa<span class="tag">&lt;<span class="name">br</span> /&gt;</span>aaaaaaaaaaaaaaaaaaa</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;javascript:&quot;</span> <span class="attr">onclick</span> = <span class="string">&quot;night()&quot;</span>;&gt;</span>夜间模式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;javascript:&quot;</span>&gt;</span>日间模式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*day.css*/</span></span><br><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">font-size </span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color </span>: <span class="number">#000000</span>; <span class="comment">/*字体颜色*/</span></span><br><span class="line">    <span class="attribute">background </span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*night.css*/</span></span><br><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">font-size </span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color </span>: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">background </span>: <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="变量命名法匈牙利命名法"><a class="markdownIt-Anchor" href="#变量命名法匈牙利命名法"></a> 变量命名法(匈牙利命名法)</h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/21/Zi1lQBIXH6URx4t.png" alt="" /></p><h1 id="javascript的数据类型"><a class="markdownIt-Anchor" href="#javascript的数据类型"></a> JavaScript的数据类型</h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/21/rCa7UzY9ZRPolvT.png" alt="" /></p><blockquote><p>JS的基本类型属于弱类型，在声明时并不确定它是什么类型，是根据赋值的具体情况来确定的，所以它存储的是什么类型的值，他就是什么类型的变量。</p></blockquote><ul><li><h4 id="typeof运算符"><a class="markdownIt-Anchor" href="#typeof运算符"></a> typeof运算符</h4><p>我们可以利用typeof运算符获取变量的数据类型，typeof(var);</p></li><li><h4 id="类型转换"><a class="markdownIt-Anchor" href="#类型转换"></a> 类型转换</h4><ul><li><p>强制类型转换</p></li><li><p>parseInt() //I大写</p></li><li><p>parseFloat()</p></li><li><p>隐式类型转换</p></li><li><p>==</p></li><li><p>减法</p></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--实现加法--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">compute</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> one = <span class="built_in">document</span>.getElementById(<span class="string">&quot;first&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> two = <span class="built_in">document</span>.getElementById(<span class="string">&quot;second&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ans = <span class="built_in">document</span>.getElementById(<span class="string">&quot;result&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oneint = <span class="built_in">parseInt</span>(one.value);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> twoint = <span class="built_in">parseInt</span>(two.value);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(<span class="built_in">isNaN</span>(oneint)||<span class="built_in">isNaN</span>(twoint))</span></span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;输入有误&quot;</span>);</span></span><br><span class="line"><span class="javascript">                &#125;<span class="keyword">else</span></span></span><br><span class="line">                    </span><br><span class="line">ans.value = oneint + twoint;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span> = <span class="string">&quot;first&quot;</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">+</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span> = <span class="string">&quot;second&quot;</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">value</span> = <span class="string">&quot;=&quot;</span> <span class="attr">onclick</span> = <span class="string">&quot;compute()&quot;</span>; /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span> = <span class="string">&quot;result&quot;</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>isNaN()函数判断是否为数字，用来规范用户输入</li></ul><h1 id="javascript中使用for语句"><a class="markdownIt-Anchor" href="#javascript中使用for语句"></a> JavaScript中使用for语句</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> j = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> i;</span></span><br><span class="line">for(i = 1; i &lt;= 100;i ++)</span><br><span class="line">&#123;</span><br><span class="line">if(i%2==0)</span><br><span class="line">&#123;</span><br><span class="line">j = j+i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(j);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="javascript中date对象及array使用"><a class="markdownIt-Anchor" href="#javascript中date对象及array使用"></a> JavaScript中Date()对象及Array使用</h1><ul><li><h4 id="date对象定义"><a class="markdownIt-Anchor" href="#date对象定义"></a> Date()对象定义</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var d = new Date();</span><br></pre></td></tr></table></figure></li><li><h4 id="date对象方法"><a class="markdownIt-Anchor" href="#date对象方法"></a> Date()对象方法</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/21/DuX8aSdtvjriVJG.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/21/2zje4NRcyadB7wi.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/21/xYEpsTnc2jwK8hF.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/21/lDcy3d2SiIGj6J7.png" alt="" /></p></li><li><h4 id="array定义及使用"><a class="markdownIt-Anchor" href="#array定义及使用"></a> Array()定义及使用</h4><ul><li>数组用于存储具有相同数据类型的一组值，使用下标来区分各个值。</li><li>在JavaScript中，数组的下标以开始。</li><li>JavaScript没有明确的数组数据类型，但却有内置的数组对象。要在程序中使用数组，必须使用数组对象及其相关联的方法。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var name = new Array([element0,element1,...,elementn]);</span><br></pre></td></tr></table></figure></li><li><h4 id="数组的初始化"><a class="markdownIt-Anchor" href="#数组的初始化"></a> 数组的初始化</h4><ul><li>将指定的值作为其元素</li><li>使用arrayName = new Array(N); 指定元素个数</li></ul><p>同一个数组中不同元素的类型可以不同。</p></li><li><h4 id="数组的length属性"><a class="markdownIt-Anchor" href="#数组的length属性"></a> 数组的length属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;first&quot;</span>,<span class="string">&quot;second&quot;</span>,<span class="string">&quot;third&quot;</span>);</span></span><br><span class="line"><span class="javascript">    a[<span class="number">48</span>] = <span class="string">&quot;12&quot;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(a.length);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//显示的结果是49</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="数组的遍历"><a class="markdownIt-Anchor" href="#数组的遍历"></a> 数组的遍历</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var a = new Array(&quot;first&quot;,&quot;second&quot;,&quot;third&quot;);</span><br><span class="line">for(var i = 0;i <span class="tag">&lt; <span class="attr">a.length</span>; <span class="attr">i</span>++)</span></span><br><span class="line"><span class="tag">&#123;</span></span><br><span class="line"><span class="tag">                    </span></span><br><span class="line"><span class="tag">&#125;</span></span><br><span class="line"><span class="tag">//<span class="attr">for</span> 循环</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr = new Array(&quot;fist&quot;,&quot;second&quot;,&quot;third&quot;);</span><br><span class="line">for(var item in arr)</span><br><span class="line">&#123;</span><br><span class="line">document.write(arr[item]+&#x27;,&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="数组添加删除元素"><a class="markdownIt-Anchor" href="#数组添加删除元素"></a> 数组添加删除元素</h4><ul><li>添加<ul><li>push()，从尾部添加</li><li>unshift()，从头部添加</li></ul></li><li>删除<ul><li>pop()，从尾部弹出</li><li>shift()，从头部弹出</li></ul></li></ul></li></ul><h1 id="利用date对象和innerhtml和settimeout实现动态时间显示"><a class="markdownIt-Anchor" href="#利用date对象和innerhtml和settimeout实现动态时间显示"></a> 利用Date()对象和InnerHTML()和setTimeout()实现动态时间显示</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">showtime</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> week = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;周日&quot;</span>,<span class="string">&quot;周一&quot;</span>,<span class="string">&quot;周二&quot;</span>,<span class="string">&quot;周三&quot;</span>,<span class="string">&quot;周四&quot;</span>,<span class="string">&quot;周五&quot;</span>,<span class="string">&quot;周六&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ye = d.getYear();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> mo = d.getMonth();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> da = d.getDate();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ho = d.getHours();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> mi = d.getMinutes();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> we = d.getDay();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> se = d.getSeconds();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> now = <span class="string">&quot;现在是&quot;</span>+(ye+<span class="number">1900</span>)+<span class="string">&quot;年&quot;</span>+(mo+<span class="number">1</span>)+<span class="string">&quot;月&quot;</span>+da+<span class="string">&quot;号&quot;</span>+<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span></span><br><span class="line">if(ho&lt;12)</span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"> now = now +<span class="string">&quot;早上&quot;</span>;</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ho&gt;=<span class="number">12</span>&amp;&amp;ho&lt;<span class="number">18</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">now = now +<span class="string">&quot;下午&quot;</span>;</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">now = now +<span class="string">&quot;晚上&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">now = now + +ho+<span class="string">&quot;时&quot;</span>+mi+<span class="string">&quot;分&quot;</span>+se+<span class="string">&quot;秒&quot;</span>+<span class="string">&quot;&lt;br /&gt;&quot;</span>+week[we];</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> t = <span class="built_in">document</span>.getElementById(<span class="string">&quot;time&quot;</span>);</span></span><br><span class="line">t.innerHTML = now;</span><br><span class="line"><span class="javascript"><span class="built_in">setTimeout</span>(<span class="string">&quot;showtime()&quot;</span>,<span class="number">1000</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span> = <span class="string">&quot;time&quot;</span> <span class="attr">onload</span> = <span class="string">&quot;showtime()&quot;</span>;&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span>  </span><br></pre></td></tr></table></figure><ul><li><h4 id="settimeoutfuncnamems"><a class="markdownIt-Anchor" href="#settimeoutfuncnamems"></a> setTimeout(“funcname”,ms)</h4><p>每隔多少毫秒执行那个函数，可在函数内递归调用</p></li><li><h4 id="innerhtml属性"><a class="markdownIt-Anchor" href="#innerhtml属性"></a> innerHTML属性</h4><ul><li>innerHTML属性可以设置或者返回指定元素的HTML内容</li><li>语法结构一</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">htmlContent = domObj.innerHTML;</span><br><span class="line"><span class="comment">//获取指定元素内的HTML内容</span></span><br></pre></td></tr></table></figure><ul><li>语法结构二</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">domObj.innerHTML = htmlContent</span><br><span class="line"><span class="comment">//为指定元素设置HTML内容</span></span><br></pre></td></tr></table></figure><ul><li>代码实例</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;http://www.softwhy.com/&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>蚂蚁部落<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span> </span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> odiv = <span class="built_in">document</span>.getElementById(<span class="string">&quot;ant&quot;</span>);</span></span><br><span class="line"><span class="javascript">  odiv.innerHTML = <span class="string">&quot;蚂蚁部落&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ant&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>运行效果即为在id位ant的div中加了&quot;蚂蚁部落&quot;这句话</p><p><strong>特别说明</strong>：innerHTML属性是重置元素HTML内容，而不是追加</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>蚂蚁部落<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span> </span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> odiv = <span class="built_in">document</span>.getElementById(<span class="string">&quot;ant&quot;</span>);</span></span><br><span class="line"><span class="javascript">  odiv.innerHTML=<span class="string">&quot;蚂蚁部落&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ant&quot;</span>&gt;</span>青岛市南区<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>青岛市南区被蚂蚁部落覆盖了</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;http://www.softwhy.com/&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>蚂蚁部落<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span> </span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> odiv = <span class="built_in">document</span>.getElementById(<span class="string">&quot;ant&quot;</span>);</span></span><br><span class="line"><span class="handlebars"><span class="xml">  odiv.innerHTML = &quot;<span class="tag">&lt;<span class="name">b</span>&gt;</span>蚂蚁部落<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&quot;;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ant&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>显示的是加粗的蚂蚁部落，所以赋值给innerHTML的字符串都会被当作HTML代码解析</p></blockquote><p>innerText属性可以返回指定元素内的文本内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;http://www.softwhy.com/&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>蚂蚁部落<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span> </span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> odiv = <span class="built_in">document</span>.getElementById(<span class="string">&quot;ant&quot;</span>);</span></span><br><span class="line">  alert(odiv.innerText);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ant&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>蚂蚁部落<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>返回的是蚂蚁部落，而没有包括html标签</p></blockquote></li></ul><h1 id="使用javascript实现一个算数计算器"><a class="markdownIt-Anchor" href="#使用javascript实现一个算数计算器"></a> 使用javascript实现一个算数计算器</h1><ul><li><h4 id="网上代码自己还没改完善"><a class="markdownIt-Anchor" href="#网上代码自己还没改完善"></a> 网上代码(自己还没改完善)</h4></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span> = <span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#main</span>&#123;</span></span><br><span class="line">width : 400px;</span><br><span class="line">height : 500px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span> : <span class="selector-id">#f2f2f2</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border</span> : 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#c2c3c6</span>; <span class="comment">/*边框为实线*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span> : <span class="selector-tag">auto</span>; <span class="comment">/*外边距自动设置*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#window</span>&#123;</span></span><br><span class="line">height : 70px;</span><br><span class="line">width : 335px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span> : <span class="selector-id">#323232</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border</span> : 1<span class="selector-tag">px</span> <span class="selector-tag">double</span> <span class="selector-id">#ffffff</span>;  <span class="comment">/*边框为双边框，厚度为1像素，颜色为白色*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span> : 25<span class="selector-tag">px</span> 25<span class="selector-tag">px</span> 25<span class="selector-tag">px</span> 25<span class="selector-tag">px</span>; <span class="comment">/*top right bottom left外边距*/</span></span></span><br><span class="line">font : 40px &quot;微软雅黑&quot;;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span> : <span class="selector-id">#ffffff</span>; <span class="comment">/*字体颜色为白色*/</span></span></span><br><span class="line">padding-right : 10px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#func</span>&#123;</span></span><br><span class="line">padding: 0 20px;</span><br><span class="line"><span class="css"><span class="selector-tag">position</span> : <span class="selector-tag">relative</span>;<span class="comment">/*设置定位方式为相对定位*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#func</span> <span class="selector-tag">input</span>&#123; <span class="comment">/*设置#func中的input样式*/</span></span></span><br><span class="line">height : 40px;</span><br><span class="line"><span class="css"><span class="selector-tag">width</span> <span class="selector-pseudo">:60px</span>;</span></span><br><span class="line">margin : 10px 10px;</span><br><span class="line"><span class="css"><span class="comment">/*font : ;*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#add</span>,<span class="selector-id">#sub</span>,<span class="selector-id">#mul</span>,<span class="selector-id">#div</span>,<span class="selector-id">#equal</span>,<span class="selector-id">#dele</span>&#123;</span></span><br><span class="line">position : absolute;</span><br><span class="line">right : 30px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#point</span>,<span class="selector-id">#three</span>,<span class="selector-id">#six</span>,<span class="selector-id">#nine</span>&#123;</span></span><br><span class="line">position : absolute;</span><br><span class="line">right : 120px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#zero2</span>,<span class="selector-id">#two</span>,<span class="selector-id">#five</span>,<span class="selector-id">#eight</span>&#123;</span></span><br><span class="line">position : absolute;</span><br><span class="line">right : 210px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#zero</span>,<span class="selector-id">#one</span>,<span class="selector-id">#four</span>,<span class="selector-id">#seven</span>,<span class="selector-id">#res</span>&#123;</span></span><br><span class="line">position : absolute;</span><br><span class="line">right : 300px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#add</span>,<span class="selector-id">#res</span>&#123;</span></span><br><span class="line">top : 60px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#sub</span>,<span class="selector-id">#nine</span>,<span class="selector-id">#eight</span>,<span class="selector-id">#seven</span>&#123;</span></span><br><span class="line">top : 120px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#mul</span>,<span class="selector-id">#six</span>,<span class="selector-id">#five</span>,<span class="selector-id">#four</span>&#123;</span></span><br><span class="line">top : 180px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#div</span>,<span class="selector-id">#three</span>,<span class="selector-id">#two</span>,<span class="selector-id">#one</span>&#123;</span></span><br><span class="line">top : 240px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#equal</span>,<span class="selector-id">#point</span>,<span class="selector-id">#zero2</span>,<span class="selector-id">#zero</span>&#123;</span></span><br><span class="line">top : 300px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 数据容器</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> left = <span class="number">0</span>;   <span class="comment">//被除数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> right = <span class="number">0</span>;  <span class="comment">//除数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> sum = <span class="number">0</span>;    <span class="comment">//和  </span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> numb = <span class="number">0</span>;   <span class="comment">//此变量用来限制点的输入     </span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 获取id并返回</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">id</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="comment">// 运算函数</span></span></span><br><span class="line"><span class="javascript">             <span class="function"><span class="keyword">function</span> <span class="title">operation</span>(<span class="params">id</span>)</span>&#123;            </span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>( get(<span class="string">&quot;window&quot;</span>).value != <span class="string">&quot;0&quot;</span>)&#123;</span></span><br><span class="line">                    if(left == 0)</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        get(<span class="string">&quot;window&quot;</span>).value = get(<span class="string">&quot;window&quot;</span>).value + get(id).value;</span></span><br><span class="line"><span class="javascript">                        left = <span class="built_in">parseFloat</span>(get(<span class="string">&quot;window&quot;</span>).value);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="comment">//numb 转为number类型 让点可以再输入一次</span></span></span><br><span class="line">                numb = 0;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 数字盘函数</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">figure</span>(<span class="params">id</span>)</span>&#123; </span></span><br><span class="line">            </span><br><span class="line"><span class="javascript">                <span class="comment">// 判断被除数是否有值</span></span></span><br><span class="line">                if(left == 0)</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    <span class="comment">// 改变value默认值</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (get(<span class="string">&quot;window&quot;</span>).value === <span class="string">&quot;0&quot;</span> ) &#123;</span></span><br><span class="line"><span class="javascript">                        get(<span class="string">&quot;window&quot;</span>).value = get(id).value; </span></span><br><span class="line"><span class="javascript">                    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                        get(<span class="string">&quot;window&quot;</span>).value = get(<span class="string">&quot;window&quot;</span>).value + get(id).value;    </span></span><br><span class="line">                    &#125;                                </span><br><span class="line"><span class="javascript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                    get(<span class="string">&quot;window&quot;</span>).value = get(<span class="string">&quot;window&quot;</span>).value + get(id).value;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> str = get(<span class="string">&quot;window&quot;</span>).value;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> num = <span class="string">&quot;&quot;</span>;                    </span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 获取第二次输入的数字</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 判断加减乘除</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span>(str[i]== <span class="string">&quot;+&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">for</span> (<span class="keyword">var</span> j = i + <span class="number">1</span>; j &lt; str.length; j++) &#123;</span></span><br><span class="line">                                num+=str[j];</span><br><span class="line">                                </span><br><span class="line">                            &#125;;</span><br><span class="line"><span class="javascript">                            right = <span class="built_in">parseFloat</span>(num);</span></span><br><span class="line"><span class="javascript">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[i]== <span class="string">&quot;-&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">for</span> (<span class="keyword">var</span> j = i + <span class="number">1</span>; j &lt; str.length; j++) &#123;</span></span><br><span class="line">                                num+=str[j];</span><br><span class="line">                                </span><br><span class="line">                            &#125;;</span><br><span class="line"><span class="javascript">                            right = <span class="built_in">parseFloat</span>(num);</span></span><br><span class="line">                        &#125;</span><br><span class="line"><span class="javascript">                        <span class="keyword">else</span> <span class="keyword">if</span>(str[i]== <span class="string">&quot;*&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">for</span> (<span class="keyword">var</span> j = i + <span class="number">1</span>; j &lt; str.length; j++) &#123;</span></span><br><span class="line">                                num+=str[j];</span><br><span class="line">                                </span><br><span class="line">                            &#125;;</span><br><span class="line"><span class="javascript">                            right = <span class="built_in">parseFloat</span>(num);</span></span><br><span class="line">                        &#125;</span><br><span class="line"><span class="javascript">                        <span class="keyword">else</span> <span class="keyword">if</span>(str[i]== <span class="string">&quot;/&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">for</span> (<span class="keyword">var</span> j = i + <span class="number">1</span>; j &lt; str.length; j++) &#123;</span></span><br><span class="line">                                num+=str[j];</span><br><span class="line">                                </span><br><span class="line">                            &#125;;</span><br><span class="line"><span class="javascript">                            right = <span class="built_in">parseFloat</span>(num);</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;;                    </span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="comment">// 清空所有数据  </span></span></span><br><span class="line">                if(sum != 0)&#123;</span><br><span class="line">                    left = 0;</span><br><span class="line">                    right = 0;</span><br><span class="line">                    sum = 0;</span><br><span class="line">                    numb = 0;</span><br><span class="line"><span class="javascript">                    get(<span class="string">&quot;window&quot;</span>).value = get(id).value;</span></span><br><span class="line">                &#125;</span><br><span class="line">            </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">　　　　　　　<span class="comment">// 数字键盘区----------------------------------------------------------开始</span></span></span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;one&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;one&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;two&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;two&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;three&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;three&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;four&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;four&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;five&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;five&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;six&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;six&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;seven&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;seven&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;eight&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;eight&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;nine&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;nine&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;zero&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">                figure(<span class="string">&quot;zero&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line"><span class="javascript">　　　　　　  <span class="comment">// 数字键盘区----------------------------------------------------------结束</span></span></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">　　　　　　　<span class="comment">//功能区-----------------------------------------------------------开始</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 加</span></span></span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;add&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;             </span></span><br><span class="line"><span class="javascript">                operation(<span class="string">&quot;add&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//减</span></span></span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;sub&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;             </span></span><br><span class="line"><span class="javascript">                operation(<span class="string">&quot;sub&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 乘</span></span></span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;mul&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                operation(<span class="string">&quot;mul&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line"><span class="javascript">            <span class="comment">// 除</span></span></span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;div&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                operation(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 点</span></span></span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;point&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 限制点的输入</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(numb === <span class="number">0</span> &amp;&amp; sum == <span class="number">0</span>)&#123; <span class="comment">//numb值等于0 类型等于number                        </span></span></span><br><span class="line"><span class="javascript">                    get(<span class="string">&quot;window&quot;</span>).value = get(<span class="string">&quot;window&quot;</span>).value + get(<span class="string">&quot;point&quot;</span>).value;</span></span><br><span class="line"><span class="javascript">                    numb = (get(<span class="string">&quot;window&quot;</span>).value); <span class="comment">//numb赋值为字符串</span></span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 清除</span></span></span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;res&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(get(<span class="string">&quot;window&quot;</span>).value != <span class="string">&quot;0&quot;</span>)</span></span><br><span class="line">                &#123;                        </span><br><span class="line">                    left = 0;</span><br><span class="line">                    right = 0;</span><br><span class="line">                    sum = 0;</span><br><span class="line">                    numb = 0;</span><br><span class="line"><span class="javascript">                    get(<span class="string">&quot;window&quot;</span>).value = <span class="string">&quot;0&quot;</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 求和</span></span></span><br><span class="line"><span class="javascript">            get(<span class="string">&quot;equal&quot;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> symbol = <span class="string">&quot;&quot;</span>;           </span></span><br><span class="line">                if(left != 0 &amp;&amp; right != 0)&#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; get(<span class="string">&quot;window&quot;</span>).value.length; i ++ ) &#123;</span></span><br><span class="line"><span class="javascript">                        symbol = get(<span class="string">&quot;window&quot;</span>).value[i];</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span>(symbol == <span class="string">&quot;+&quot;</span>)&#123;</span></span><br><span class="line">                            sum = left + right;</span><br><span class="line"><span class="javascript">                            get(<span class="string">&quot;window&quot;</span>).value = sum;</span></span><br><span class="line"><span class="javascript">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(symbol == <span class="string">&quot;-&quot;</span>)&#123;</span></span><br><span class="line">                            sum = left - right;</span><br><span class="line"><span class="javascript">                            get(<span class="string">&quot;window&quot;</span>).value = sum;</span></span><br><span class="line">                        &#125;</span><br><span class="line"><span class="javascript">                        <span class="keyword">else</span> <span class="keyword">if</span>(symbol == <span class="string">&quot;*&quot;</span>)&#123;</span></span><br><span class="line">                            sum = left * right;</span><br><span class="line"><span class="javascript">                            get(<span class="string">&quot;window&quot;</span>).value = sum;</span></span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"><span class="javascript">                        <span class="keyword">else</span> <span class="keyword">if</span>(symbol == <span class="string">&quot;/&quot;</span>)&#123;</span></span><br><span class="line">                            sum = left / right;</span><br><span class="line"><span class="javascript">                            get(<span class="string">&quot;window&quot;</span>).value = sum;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;                            </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">id</span> = <span class="string">&quot;window&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;disabled&quot;</span> <span class="attr">style</span> = <span class="string">&quot;text-align : right&quot;</span> <span class="attr">value</span> = <span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;func&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;reset&quot;</span> <span class="attr">id</span> = <span class="string">&quot;res&quot;</span> <span class="attr">value</span> = <span class="string">&quot;C&quot;</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;add&quot;</span> <span class="attr">value</span> = <span class="string">&quot;+&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;sub&quot;</span> <span class="attr">value</span> = <span class="string">&quot;-&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;mul&quot;</span> <span class="attr">value</span> = <span class="string">&quot;*&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;div&quot;</span> <span class="attr">value</span> = <span class="string">&quot;/&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;point&quot;</span> <span class="attr">value</span> = <span class="string">&quot;.&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;equal&quot;</span> <span class="attr">value</span> = <span class="string">&quot;=&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;zero&quot;</span> <span class="attr">value</span> = <span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;zero2&quot;</span> <span class="attr">value</span> = <span class="string">&quot;00&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;dele&quot;</span> <span class="attr">value</span> = <span class="string">&quot;del&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;numb&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;one&quot;</span> <span class="attr">value</span> = <span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;two&quot;</span> <span class="attr">value</span> = <span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;three&quot;</span> <span class="attr">value</span> = <span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;four&quot;</span> <span class="attr">value</span> = <span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;five&quot;</span> <span class="attr">value</span> = <span class="string">&quot;5&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;six&quot;</span> <span class="attr">value</span> = <span class="string">&quot;6&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;seven&quot;</span> <span class="attr">value</span> = <span class="string">&quot;7&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;eight&quot;</span> <span class="attr">value</span> = <span class="string">&quot;8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">id</span> = <span class="string">&quot;nine&quot;</span> <span class="attr">value</span> = <span class="string">&quot;9&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="简易实现代码"><a class="markdownIt-Anchor" href="#简易实现代码"></a> 简易实现代码</h4></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> &gt;</span>+<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>-<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>*<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>/<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;button&quot;</span> <span class="attr">value</span> = <span class="string">&quot;=&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="js伪协议的几种调用方法"><a class="markdownIt-Anchor" href="#js伪协议的几种调用方法"></a> js伪协议的几种调用方法</h1><ul><li><p><code>a href = &quot;javascript:js_method();&quot;</code></p><blockquote><p>这是最常用的方法，但是这种方法在传递this等参数的时候很容易出现问题，而且javascript:协议作为a的href属性的时候不仅会导致不必要的触发</p><p>w3c标准不推荐在href里面执行javascript语句</p></blockquote></li><li><p><code>a href = &quot;javascript:void(0);&quot; onclick = &quot;js_method()&quot;</code></p><blockquote><p>这种方法是很多网站最常用的方法，也是最周全的方法，onclick方法负责执行Js函数，而void是一个操作符，void(0)返回undefined，地址不发生跳转。而且这种方法不会像第一种方法一样直接将js方法暴露在浏览器的状态栏。</p></blockquote></li><li><p><code>a href = &quot;javascript:;&quot; onclick=&quot;js_method()&quot;</code></p><blockquote><p>这种方法和第二种类似，区别只是执行了一条空的js代码。</p></blockquote></li><li><p><code>a href = &quot;#&quot; onclick = &quot;js_method()&quot;</code></p><blockquote><p>这种方法也是网上很常见的代码，#是标签内置的一个方法，代表top的作用。所以用这种方法点击后网页返回到页面的最顶端。</p></blockquote></li><li><p><code>a href = &quot;#&quot; onclick = &quot;js_method(); return false;&quot;</code></p><blockquote><p>这种方法点击执行了js函数后return false，页面不发生跳转，执行后还是在页面的当前位置。</p></blockquote></li><li><p>推荐使用的方法为:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;javascript:void(0);&quot;</span> onclick=<span class="string">&quot;js_method()&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;javascript:;&quot;</span> onclick=<span class="string">&quot;js_method()&quot;</span>&gt;&lt;/a&gt; </span><br><span class="line">&lt;a href=<span class="string">&quot;#&quot;</span> onclick=<span class="string">&quot;js_method();return false;&quot;</span>&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="href-url的作用"><a class="markdownIt-Anchor" href="#href-url的作用"></a> href =&quot;URL&quot;的作用</h1><ul><li><p>URL为绝对URL</p><p>指向另一个站点，点击后就会直接跳转到这个链接的页面</p></li><li><p>URL为相对URL</p><p>指向站点内的某个文件，比如<code>href=&quot;/test.doc&quot;</code> 那么点击时就会直接下载文件</p></li><li><p>锚URL</p><p>此时指向页面中的锚，比如<code>href=&quot;#top&quot;</code> 那么点击时就会到当前页面中<code>id=&quot;ttip&quot;</code> 的这个锚点，实现当前页面的所谓跳转。用的最多的就是在可滚动页面中，添加菜单，可以直接回到页面中的某个部分的内容。</p><p><code>href=&quot;#&quot;</code> 的时候就是回到顶部</p></li></ul><h1 id="windosettimeout函数t要大写"><a class="markdownIt-Anchor" href="#windosettimeout函数t要大写"></a> windo.setTimeout()函数(T要大写)</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).style.animation=<span class="string">&quot;mymove2 2s 1&quot;</span>;</span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="string">&quot;next()&quot;</span>,<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.next=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).style.animation=<span class="string">&quot;mymove 2s infinite&quot;</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).style.left=<span class="string">&quot;-100px&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li><p>从如上代码看出在js函数中修改标签css属性的方法</p></li><li><p>在js中调用setTimeout()函数时最好的方式是：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; alert(<span class="string">&#x27;Hello world!&#x27;</span>) &#125;, <span class="number">60</span>);</span><br></pre></td></tr></table></figure></li><li><p>次之的方式是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.helloworld = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;Hello world!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="string">&quot;helloworld()&quot;</span>, <span class="number">60</span>);</span><br></pre></td></tr></table></figure></li><li><p>不推荐的方式是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">helloworld</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;Hello world!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="string">&quot;helloworld()&quot;</span>, <span class="number">60</span>);</span><br></pre></td></tr></table></figure></li></ul><h1 id="js实现点击利用css播放动画"><a class="markdownIt-Anchor" href="#js实现点击利用css播放动画"></a> js实现点击利用css播放动画</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).style.animation=<span class="string">&quot;mymove2 2s 1&quot;</span>;</span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="string">&quot;next()&quot;</span>,<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.next=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).style.animation=<span class="string">&quot;mymove 2s infinite&quot;</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).style.left=<span class="string">&quot;-100px&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="js实现随机图片"><a class="markdownIt-Anchor" href="#js实现随机图片"></a> js实现随机图片</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.change=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> index = <span class="built_in">Math</span>.floor((<span class="built_in">Math</span>.random()*imgarr.length));</span><br><span class="line"><span class="keyword">var</span> imgsrc = imgarr[index];</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;myimg&quot;</span>).setAttribute(<span class="string">&#x27;src&#x27;</span>,imgsrc);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="string">&quot;change()&quot;</span>,<span class="number">4000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//一直不断更换</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>920space</title>
      <link href="/2020/09/20/920space/"/>
      <url>/2020/09/20/920space/</url>
      
        <content type="html"><![CDATA[<h1 id="p1007"><a class="markdownIt-Anchor" href="#p1007"></a> P1007</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">100005</span>];</span><br><span class="line"><span class="keyword">int</span> cou[<span class="number">27</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">int</span> ma = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= t;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        ma = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(cou,<span class="number">0</span>,<span class="keyword">sizeof</span>(cou));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">        <span class="keyword">int</span> lenstr = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; lenstr;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            cou[str[j]<span class="number">-96</span>]++;</span><br><span class="line">            ma = max(ma,cou[str[j]<span class="number">-96</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case #%d: %d\n&quot;</span>,i,ma);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="p1003"><a class="markdownIt-Anchor" href="#p1003"></a> P1003</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 1000006</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> mail[M];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">int</span> n,m,k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= t;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;mail[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(mail+<span class="number">1</span>,mail+<span class="number">1</span>+m);</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        ans += <span class="built_in">abs</span>(k<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = m;j &gt;= <span class="number">1</span>;j --)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += <span class="built_in">abs</span>(mail[j]-k);</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">1</span> &amp;&amp; mail[j]&lt;k)</span><br><span class="line">            &#123;</span><br><span class="line">                ans += (mail[j]<span class="number">-1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans += <span class="built_in">abs</span>(mail[j] - k);</span><br><span class="line">                <span class="keyword">if</span>(j==<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans += k <span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ccpc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ccpc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XMLStudy</title>
      <link href="/2020/09/20/XMLStudy/"/>
      <url>/2020/09/20/XMLStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="xml-documents-start-the-document-with-a-declaration-surrounded-by-xml"><a class="markdownIt-Anchor" href="#xml-documents-start-the-document-with-a-declaration-surrounded-by-xml"></a> XML Documents start the document with a declaration, surrounded by &lt;?xml … ?&gt;</h1><p>&lt;?xml version = “1.0” encoding = “utf-8” ?&gt;</p><h1 id="xml区分大小写不同余html"><a class="markdownIt-Anchor" href="#xml区分大小写不同余html"></a> XML区分大小写，不同余html</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BARS</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BAR</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>joe&#x27;s bar<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">beer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>bud<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">price</span>&gt;</span>2.50<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">beer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">beer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>miller<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">price</span>&gt;</span>3.00<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">beer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BAR</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">BAR</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">BARS</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bars</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bar</span> <span class="attr">name</span> = <span class="string">&quot;joe&#x27;s bar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">beer</span> <span class="attr">name</span> = <span class="string">&quot;bud&quot;</span> <span class="attr">price</span> = <span class="string">2.50/</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">beer</span> <span class="attr">name</span> = <span class="string">&quot;miller&quot;</span> <span class="attr">price</span> = <span class="string">3.00/</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bar</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">bar</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bars</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> XML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLStudy</title>
      <link href="/2020/09/19/SQLStudy/"/>
      <url>/2020/09/19/SQLStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="sql不区分大小写"><a class="markdownIt-Anchor" href="#sql不区分大小写"></a> SQL不区分大小写</h1><blockquote><p>sql是大小写无关的，他把大写和小写字母看作相同的字母。举个例子，对于保留字FROM，无论写成FROM、From或者FrOm都是正确的。</p><p>关系名、属性名和别名都同样是大小写无关的。</p><p>只有引号里面的字符才是区分大小写的。</p></blockquote><h1 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h1><ul><li><h4 id="进入mysqldos窗口中"><a class="markdownIt-Anchor" href="#进入mysqldos窗口中"></a> 进入mysql(dos窗口中)</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -h localhost -u root -p password</span><br><span class="line">//-h 为ip地址,本机为localhost或者127.0.0.1</span><br><span class="line">//-u 为user用户名</span><br><span class="line">//-p 小写，后面为密码 或者 不输入，因为不做隐藏的</span><br><span class="line">//-P 为Port端口号</span><br></pre></td></tr></table></figure></li><li><h4 id="help命令"><a class="markdownIt-Anchor" href="#help命令"></a> help命令</h4><p>使用help查看一些命令，这些命令在使用的时候都不用加分号。</p></li><li><h4 id="数据库管理"><a class="markdownIt-Anchor" href="#数据库管理"></a> 数据库管理</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> dbname;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> dbname;</span><br></pre></td></tr></table></figure></li><li><h4 id="使用某一个数据库"><a class="markdownIt-Anchor" href="#使用某一个数据库"></a> 使用某一个数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="keyword">database</span> dbname;</span><br></pre></td></tr></table></figure></li><li><h4 id="数据表管理"><a class="markdownIt-Anchor" href="#数据表管理"></a> 数据表管理</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbname;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tbname;</span><br></pre></td></tr></table></figure></li><li><h4 id="sql数据类型"><a class="markdownIt-Anchor" href="#sql数据类型"></a> sql数据类型</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">tinyint         1byte</span><br><span class="line">smallint2byte</span><br><span class="line">mediumint3byte</span><br><span class="line">int/integer4byte</span><br><span class="line">bigint8byte</span><br><span class="line">float4byte</span><br><span class="line">double8byte</span><br><span class="line">decimal</span><br><span class="line"><span class="comment">-----------------------------</span></span><br><span class="line">date3byte 1000-01-01/9999-12-31</span><br><span class="line">time 3byte -839:59:59/839:59:59</span><br><span class="line">year1byte 1901/2155</span><br><span class="line">datetime 8byte 1000-01-01 00:00:00/9999-12-31 23:59:59</span><br><span class="line">timestamp4byte 0/2147483647(时间戳)</span><br><span class="line">//以字符串的形式&#x27;2020-01-01 15:30:02.5&#x27;</span><br><span class="line"><span class="comment">-----------------------------</span></span><br><span class="line">char定长字符 0-255byte</span><br><span class="line">varchar变长字符 0-65535byte</span><br><span class="line">tinyblob二进制字符串    0-255byte</span><br><span class="line">tinytext短文本字符串   0-255byte</span><br><span class="line">blob二进制形式长文本数据 0-65535byte</span><br><span class="line">text长文本数据 0-65535byte</span><br><span class="line">mediumblob二进制形式的中等长度文本数据  0-16777215byte</span><br><span class="line">mediumtext中等长度文本数据  0-16777215byte</span><br><span class="line">longblob二进制形式的极大文本数据   0-4294967295byte</span><br><span class="line">longtext极大文本数据   0-4294967295byte</span><br></pre></td></tr></table></figure></li><li><h4 id="约束类型"><a class="markdownIt-Anchor" href="#约束类型"></a> 约束类型</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">not null 用于限制该字段为必填项</span><br><span class="line">default 用于限制该字段没有显式插入值，则直接显示默认值</span><br><span class="line">primary key  用于限制该字段值不能重复，设置为主键列的字段默认不能为空，可以联合主键，但一个表只能有一个主键</span><br><span class="line">unique 用于限制该字段不能重复，字段可以为空，一个表可以有多个unique</span><br><span class="line"><span class="keyword">check</span>  用于限制该字段值必须满足指定条件</span><br><span class="line">       <span class="keyword">check</span>(age <span class="keyword">between</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">100</span>)</span><br><span class="line"><span class="keyword">foreign</span> <span class="keyword">key</span> 外键：用于限制两个表的关系，要求外键列的值必须来自主表的关联列</span><br><span class="line">要求：</span><br><span class="line">①主表的关联列和从表的关联列的类型必须一致，意思一样，名称无要求</span><br><span class="line">②主表的关联列要求必须是主键</span><br></pre></td></tr></table></figure></li><li><h4 id="创建数据表"><a class="markdownIt-Anchor" href="#创建数据表"></a> 创建数据表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbname(</span><br><span class="line">attribute1 <span class="built_in">varchar</span>(<span class="number">20</span>)/<span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">    attribute2 <span class="built_in">integer</span>/<span class="built_in">int</span>/<span class="built_in">smallint</span>,</span><br><span class="line">    attribute3 <span class="built_in">date</span>,</span><br><span class="line">    attribute4 <span class="built_in">time</span>,</span><br><span class="line">    attribute5 <span class="built_in">real</span>/<span class="built_in">float</span>,</span><br><span class="line">    attribute6 <span class="built_in">real</span>/<span class="built_in">float</span> <span class="keyword">default</span> <span class="number">0.1</span> //设置默认值为<span class="number">0.1</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbname(</span><br><span class="line">attribute1 <span class="built_in">varchar</span>(<span class="number">20</span>)/<span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    attribute2 <span class="built_in">integer</span> primary <span class="keyword">key</span>//主键 默认不能为空</span><br><span class="line">    //attribute2 <span class="built_in">integer</span> <span class="keyword">unique</span> //逐渐 可以为空</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbname(</span><br><span class="line">attribute1 <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    attribute2 <span class="built_in">real</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    primary <span class="keyword">key</span>(attribute1,attribute2)//联合主键 默认不能为空</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tbname(</span><br><span class="line">attribute1 <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    attribute2 <span class="built_in">float</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    <span class="keyword">unique</span>(attribute1,attribute2)//联合主键 默认可以为空</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><h4 id="unique约束和primary-key约束"><a class="markdownIt-Anchor" href="#unique约束和primary-key约束"></a> unique约束和primary key约束</h4><ul><li>在一个表中只能有一个primary key但是可以多个unique</li><li>primary key 和 unique 约束都能约束某个属性值不能重复，primary key 约束的属性值不能为空，unique 约束的属性可以为空。</li></ul></li><li><h4 id="插入数据"><a class="markdownIt-Anchor" href="#插入数据"></a> 插入数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbname //这里不能加<span class="keyword">table</span>，不然执行不了</span><br><span class="line">(attribute1,attribute2,attribute3...)</span><br><span class="line">valuses</span><br><span class="line">(value1,value2,value3...)</span><br></pre></td></tr></table></figure></li><li><h4 id="修改表最好在加入数据前修改表"><a class="markdownIt-Anchor" href="#修改表最好在加入数据前修改表"></a> 修改表(最好在加入数据前修改表)</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">add</span>|<span class="keyword">modify</span>|<span class="keyword">change</span>|<span class="keyword">drop</span> <span class="keyword">column</span> 字段名 字符类型 字段约束;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">to</span> newtbname; <span class="comment">--改表名</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">column</span> bir datetime <span class="keyword">not</span> <span class="literal">null</span>; <span class="comment">--添加属性</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">column</span> bir birthday datetime; <span class="comment">--修改属性名，类型必须要加，可以认为这里的修改就是删除原来的属性而添加一个新的属性，约束也可以改变。  </span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">modify</span> <span class="keyword">column</span> bir <span class="built_in">timestamp</span>; <span class="comment">--修改属性类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">modify</span> <span class="keyword">column</span> bir <span class="built_in">timestamp</span> <span class="keyword">not</span> <span class="literal">null</span>;</span><br><span class="line"><span class="comment">--可以修改属性从空变为不空，或反之，相当于重新设置了一个属性</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">column</span> bir; <span class="comment">--删除属性</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">drop</span> primary <span class="keyword">key</span>; <span class="comment">--删除主键</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">column</span> bir bir datetime <span class="keyword">unique</span>;<span class="comment">--添加约束</span></span><br><span class="line"><span class="keyword">change</span> <span class="keyword">column</span> bir bir datetime primary <span class="keyword">key</span>;<span class="comment">--如果此时该属性的值为not null则可以，否则应该先设置为not null,因为primary key默认not null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tbname</span><br><span class="line"><span class="keyword">modify</span> <span class="keyword">column</span> bir bir datetime primary <span class="keyword">key</span>; <span class="comment">--若非空则可以设置称主键</span></span><br></pre></td></tr></table></figure></li><li><h4 id="删除表"><a class="markdownIt-Anchor" href="#删除表"></a> 删除表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> tbname;</span><br></pre></td></tr></table></figure></li><li><h4 id="复制表"><a class="markdownIt-Anchor" href="#复制表"></a> 复制表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> newtable <span class="keyword">like</span> oldtable;</span><br><span class="line">//只是赋值表结构</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> newtable <span class="keyword">select</span> * <span class="keyword">from</span> oldtable;</span><br><span class="line">//复制本库另一个表的内容</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> newtable <span class="keyword">select</span> * <span class="keyword">from</span> girls.<span class="string">&#x27;beauty&#x27;</span>;</span><br><span class="line">//复制别的库里面的内容，girls库里面的beauty表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> newtable <span class="keyword">select</span> last_name,department_id <span class="keyword">from</span> myemployee.<span class="string">&#x27;employees&#x27;</span> <span class="keyword">where</span> <span class="number">1</span>=<span class="number">2</span>;</span><br><span class="line">//只复制myemployee库中的employees表中的last_name,department字段的结构，不包括具体数据</span><br></pre></td></tr></table></figure></li></ul><h1 id="select-from-where-语句"><a class="markdownIt-Anchor" href="#select-from-where-语句"></a> select from where 语句</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> drinkers</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">trim</span>(<span class="keyword">NAME</span>) <span class="keyword">LIKE</span> <span class="string">&#x27;% % %&#x27;</span>;</span><br><span class="line"><span class="comment">--去掉前后的空格，中间的空格不去,选出名字由三部分组成</span></span><br></pre></td></tr></table></figure><h1 id="as-关键字"><a class="markdownIt-Anchor" href="#as-关键字"></a> AS 关键字</h1><ul><li><h4 id="给关系起别名"><a class="markdownIt-Anchor" href="#给关系起别名"></a> 给关系起别名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//给关系起别名，可认为原来是原名 as 原名</span><br><span class="line"><span class="keyword">SELECT</span> bar,beer</span><br><span class="line"><span class="keyword">from</span> bars [<span class="keyword">as</span>] ba,beers [<span class="keyword">as</span>] be //<span class="keyword">as</span>可省略    </span><br><span class="line"><span class="keyword">where</span> ba....   be....;</span><br></pre></td></tr></table></figure></li><li><h4 id="给属性起别名"><a class="markdownIt-Anchor" href="#给属性起别名"></a> 给属性起别名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//给属性起别名</span><br><span class="line"><span class="keyword">SELECT</span> bar,beer,price <span class="keyword">as</span> priceInYen</span><br><span class="line"><span class="keyword">from</span> sells;</span><br></pre></td></tr></table></figure></li><li><h4 id="属性可以被表达式替代"><a class="markdownIt-Anchor" href="#属性可以被表达式替代"></a> 属性可以被表达式替代</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//属性可以被表达式替代</span><br><span class="line"><span class="keyword">SELECT</span> bar,beer,price*<span class="number">14</span> <span class="keyword">as</span> priceInYen</span><br><span class="line"><span class="keyword">from</span> sells;</span><br></pre></td></tr></table></figure></li><li><h4 id="将常量作为表达式在select语句中列出"><a class="markdownIt-Anchor" href="#将常量作为表达式在select语句中列出"></a> 将常量作为表达式在SELECT语句中列出</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> title,<span class="keyword">length</span>,<span class="string">&#x27;hrs.&#x27;</span> <span class="keyword">AS</span> inHours</span><br><span class="line"><span class="keyword">from</span> movies</span><br><span class="line"><span class="keyword">where</span> studioname = <span class="string">&#x27;Disney&#x27;</span> <span class="keyword">AND</span> <span class="keyword">year</span> = <span class="number">1990</span>;</span><br><span class="line"></span><br><span class="line">//则结果中会出现一列属性名为inHours的列，值都为&#x27;hrs.&#x27;</span><br></pre></td></tr></table></figure><blockquote><p>可以理解为查询时，每次都是将关系中的元组赋值给select-from-where语句中的select中的属性，然后判断条件是否满足，所以那个常量就一直是这个而且保留了下来。</p></blockquote></li></ul><h1 id="where语句中的运算符"><a class="markdownIt-Anchor" href="#where语句中的运算符"></a> where语句中的运算符</h1><ul><li><h4 id="算术运算符"><a class="markdownIt-Anchor" href="#算术运算符"></a> 算术运算符</h4><p>有+ - * /</p></li><li><h4 id="字符串连接符"><a class="markdownIt-Anchor" href="#字符串连接符"></a> 字符串连接符</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;foo&#x27;||&#x27;bar&#x27;相当于&#x27;foobar&#x27;</span><br></pre></td></tr></table></figure></li><li><h4 id="比较运算符"><a class="markdownIt-Anchor" href="#比较运算符"></a> 比较运算符</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;</span><br><span class="line">&lt;</span><br><span class="line">&gt;=</span><br><span class="line">&lt;=</span><br><span class="line">=</span><br><span class="line">&lt;&gt;</span><br></pre></td></tr></table></figure></li><li><h4 id="逻辑运算符"><a class="markdownIt-Anchor" href="#逻辑运算符"></a> 逻辑运算符</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AND</span><br><span class="line">OR</span><br><span class="line">NOT</span><br><span class="line">//可以对返回值为布尔值的表达式进行取非</span><br></pre></td></tr></table></figure></li></ul><h1 id="单引号中使用单引号"><a class="markdownIt-Anchor" href="#单引号中使用单引号"></a> 单引号中使用单引号</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;i&#x27;&#x27;m liwei&#x27; =&gt; i&#x27;m liwei</span><br></pre></td></tr></table></figure><h1 id="null"><a class="markdownIt-Anchor" href="#null"></a> NULL</h1><ul><li><p>与其他进行运算值都是NULL</p></li><li><p>与其他值比较结果为unknow</p></li><li><p>判断是否为空</p><p>where is now; / where is not null;</p></li></ul><h1 id="字符串比较"><a class="markdownIt-Anchor" href="#字符串比较"></a> 字符串比较</h1><ul><li><h4 id="注意这里进行字符串比较的时候会忽略sql为了保证字符串长度而填充的填充字符而sql串的模式匹配中不会忽略"><a class="markdownIt-Anchor" href="#注意这里进行字符串比较的时候会忽略sql为了保证字符串长度而填充的填充字符而sql串的模式匹配中不会忽略"></a> 注意这里进行字符串比较的时候会忽略SQL为了保证字符串长度而填充的填充字符，而SQL串的模式匹配中不会忽略。</h4></li><li><h4 id="在sql模式匹配中使用trim函数取出字符串两端的空格"><a class="markdownIt-Anchor" href="#在sql模式匹配中使用trim函数取出字符串两端的空格"></a> 在SQL模式匹配中使用trim函数取出字符串两端的空格。</h4></li></ul><h1 id="字符串模式匹配"><a class="markdownIt-Anchor" href="#字符串模式匹配"></a> 字符串模式匹配</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">S LIKE P</span><br><span class="line">S NOT LIKE P</span><br></pre></td></tr></table></figure><ul><li><p>S是字符串</p></li><li><p>P是模式(pattern)</p></li><li><h4 id="模式匹配中的特殊字符"><a class="markdownIt-Anchor" href="#模式匹配中的特殊字符"></a> 模式匹配中的特殊字符</h4><ul><li>%，能匹配任意长度的串</li><li>_ ，能匹配s中任何一个字符</li></ul></li><li><h4 id="模式匹配中使用和_使用转义字符"><a class="markdownIt-Anchor" href="#模式匹配中使用和_使用转义字符"></a> 模式匹配中使用%和_，使用转义字符</h4><blockquote><p>like表达式中的转移字符</p><p>like表达式中没有固定的转移字符，而是通过 escape关键字指定转义字符。</p><p>比如：WHERE beer LIKE ‘x%x%’ ESCAPE ‘x’;就是指定x为转义字符。</p></blockquote></li></ul><h1 id="输出排序"><a class="markdownIt-Anchor" href="#输出排序"></a> 输出排序</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ORDER BY &lt;list of attributes&gt;</span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> movies</span><br><span class="line"><span class="keyword">where</span> studioName = <span class="string">&#x27;Disney&#x27;</span> <span class="keyword">AND</span> <span class="keyword">year</span> = <span class="number">1990</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">length</span>,title <span class="keyword">ASC</span>;</span><br><span class="line">//ORDER BY length,title DESC;</span><br></pre></td></tr></table></figure><ul><li><h4 id="asc-desc指定是升序还是降序"><a class="markdownIt-Anchor" href="#asc-desc指定是升序还是降序"></a> ASC DESC指定是升序还是降序</h4></li><li><h4 id="order语句后面也可以是表达式"><a class="markdownIt-Anchor" href="#order语句后面也可以是表达式"></a> ORDER语句后面也可以是表达式</h4></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> R</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> A+B <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h1 id="多表查询多关系查询"><a class="markdownIt-Anchor" href="#多表查询多关系查询"></a> 多表查询，多关系查询</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> l1.drinker</span><br><span class="line"><span class="keyword">FROM</span> likes l1,likes l2,likes l3</span><br><span class="line"><span class="keyword">WHERE</span> l1.drinker = l2.drinker <span class="keyword">AND</span> l1.drinker = l3.drinker</span><br><span class="line"><span class="keyword">AND</span> l1.beer &lt; l2.beer <span class="keyword">AND</span> l2.beer &lt; l3.beer;</span><br></pre></td></tr></table></figure><h1 id="元组变量"><a class="markdownIt-Anchor" href="#元组变量"></a> 元组变量</h1><ul><li><h4 id="通俗来讲就是给关系起个别名"><a class="markdownIt-Anchor" href="#通俗来讲就是给关系起个别名"></a> 通俗来讲就是给关系起个别名</h4></li><li><h4 id="在一个select-from-where语句中要将同一个关系中的不同元组进行比较的时候"><a class="markdownIt-Anchor" href="#在一个select-from-where语句中要将同一个关系中的不同元组进行比较的时候"></a> 在一个select-from-where语句中，要将同一个关系中的不同元组进行比较的时候</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> likes l1,likes l2</span><br><span class="line"><span class="keyword">where</span> l1.name = l2.name <span class="keyword">and</span> l1.beer &lt;&gt; l2.beer;</span><br></pre></td></tr></table></figure></li></ul><h1 id="查询的结果是一个bag即没有不重复性"><a class="markdownIt-Anchor" href="#查询的结果是一个bag即没有不重复性"></a> 查询的结果是一个Bag，即没有不重复性</h1><ul><li><h4 id="但是当进行查询的并-交-差的时候会先去重转换成一个集合因为这样效率高"><a class="markdownIt-Anchor" href="#但是当进行查询的并-交-差的时候会先去重转换成一个集合因为这样效率高"></a> 但是当进行查询的并、交、差的时候会先去重，转换成一个集合，因为这样效率高。</h4></li><li><p>理论上的方法是先对两个查询结果进行一个排序，然后遍历一遍去重，然后在遍历进行集合运算。</p></li></ul><h1 id="controlling-duplicate-elimination控制重复消除"><a class="markdownIt-Anchor" href="#controlling-duplicate-elimination控制重复消除"></a> Controlling Duplicate Elimination控制重复消除</h1><ul><li><h4 id="强制去重"><a class="markdownIt-Anchor" href="#强制去重"></a> 强+/制去重</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> price</span><br><span class="line"><span class="keyword">from</span> sells;</span><br></pre></td></tr></table></figure></li><li><h4 id="强制将集合转换为bag在子查询关系运算中使用all关键字"><a class="markdownIt-Anchor" href="#强制将集合转换为bag在子查询关系运算中使用all关键字"></a> 强制将集合转换为Bag(在子查询关系运算中使用ALL关键字)</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> drinker <span class="keyword">from</span> frequents)</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line">(<span class="keyword">select</span> drinker <span class="keyword">from</span> likes);</span><br><span class="line"></span><br><span class="line">(<span class="keyword">select</span> drinker <span class="keyword">from</span> frequents)</span><br><span class="line"><span class="keyword">intersect</span> <span class="keyword">all</span></span><br><span class="line">(<span class="keyword">select</span> drinker <span class="keyword">from</span> likes);</span><br><span class="line"></span><br><span class="line">(<span class="keyword">select</span> drinker <span class="keyword">from</span> frequents)</span><br><span class="line"><span class="keyword">except</span> <span class="keyword">all</span></span><br><span class="line">(<span class="keyword">select</span> drinker <span class="keyword">from</span> likes);</span><br></pre></td></tr></table></figure></li></ul><h1 id="查询的并-交-差"><a class="markdownIt-Anchor" href="#查询的并-交-差"></a> 查询的并、交、差</h1><ul><li><h4 id="intersect-交"><a class="markdownIt-Anchor" href="#intersect-交"></a> intersect 交</h4></li><li><h4 id="union-并"><a class="markdownIt-Anchor" href="#union-并"></a> union 并</h4></li><li><h4 id="except-差"><a class="markdownIt-Anchor" href="#except-差"></a> except 差</h4><blockquote><p>这三个运算都是查询结果与查询结果之间进行的。两个subquery用小括号括起来，中间用这三个运算符连接。</p></blockquote></li></ul><h1 id="使用子查询subquery的情况"><a class="markdownIt-Anchor" href="#使用子查询subquery的情况"></a> 使用子查询(subquery)的情况</h1><ul><li><h4 id="出现在from中"><a class="markdownIt-Anchor" href="#出现在from中"></a> 出现在from中</h4><blockquote><p>若出现在from中则在子查询后面应该紧跟该子查询结果对应的元组变量(tuple variable)</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> likes.name</span><br><span class="line"><span class="keyword">from</span> (slect * <span class="keyword">from</span> bars) B,likes</span><br><span class="line"><span class="keyword">where</span> B.beer = likes.beer <span class="keyword">and</span> b.bar = likes.bar;</span><br></pre></td></tr></table></figure></li><li><h4 id="出现在where中"><a class="markdownIt-Anchor" href="#出现在where中"></a> 出现在where中</h4><ul><li>若子查询结果为一个元组，则这个元组的具体属性值就可以用来进行比较</li><li>若子查询结果为一个关系，则可以在where以不同的方式使用，就和普通的关系类似。</li></ul></li></ul><h1 id="关系的条件表达式值与关系之间"><a class="markdownIt-Anchor" href="#关系的条件表达式值与关系之间"></a> 关系的条件表达式(值与关系之间)</h1><ul><li><h4 id="exists"><a class="markdownIt-Anchor" href="#exists"></a> EXISTS</h4><ul><li>EXISTS R 若R不为空，则该值为true，反之为假</li><li>NOT EXISTS R</li></ul></li><li><h4 id="in"><a class="markdownIt-Anchor" href="#in"></a> IN</h4><ul><li>IN R</li><li>NOT IN R</li></ul></li><li><h4 id="any"><a class="markdownIt-Anchor" href="#any"></a> ANY</h4><ul><li>s &gt; ANY R</li><li>NOT s &gt; ANY R</li></ul></li><li><h4 id="all"><a class="markdownIt-Anchor" href="#all"></a> ALL</h4><ul><li>s &gt; ALL R</li><li>NOT s &gt; ALL R</li></ul></li></ul><h1 id="元组的条件表达式元组与关系之间"><a class="markdownIt-Anchor" href="#元组的条件表达式元组与关系之间"></a> 元组的条件表达式(元组与关系之间)</h1><ul><li><h4 id="如果元组与该关系的元组之间有相同的组成分量component个数那么这个比较是有意义的"><a class="markdownIt-Anchor" href="#如果元组与该关系的元组之间有相同的组成分量component个数那么这个比较是有意义的"></a> 如果元组与该关系的元组之间有相同的组成分量(component)个数，那么这个比较是有意义的</h4></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> MovieExec</span><br><span class="line"><span class="keyword">where</span> cert<span class="comment"># IN</span></span><br><span class="line">(<span class="keyword">select</span> producerC<span class="comment">#</span></span><br><span class="line"><span class="keyword">from</span> Movies</span><br><span class="line"><span class="keyword">where</span> (title,<span class="keyword">year</span>) <span class="keyword">IN</span></span><br><span class="line"> (<span class="keyword">select</span> movieTitle,movieYear</span><br><span class="line">    <span class="keyword">from</span> StarsIn</span><br><span class="line">     <span class="keyword">Where</span> starName = <span class="string">&#x27;Harrison Ford&#x27;</span></span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="关联子查询相关子查询correlated-subquery"><a class="markdownIt-Anchor" href="#关联子查询相关子查询correlated-subquery"></a> 关联子查询，相关子查询(correlated subquery)</h1><ul><li><h4 id="在子查询过程中要用到子查询外部关系的元组"><a class="markdownIt-Anchor" href="#在子查询过程中要用到子查询外部关系的元组"></a> 在子查询过程中要用到子查询外部关系的元组</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> title </span><br><span class="line"><span class="keyword">from</span> movies <span class="keyword">Old</span></span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span> &lt; <span class="keyword">any</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span></span><br><span class="line">    <span class="keyword">from</span> movies</span><br><span class="line">    <span class="keyword">where</span> title = Old.title</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>属性名子的作用范围，即就近原则，近的找不到关系中有该属性，则去远处找</p></blockquote></li></ul><h1 id="sql连接表达式"><a class="markdownIt-Anchor" href="#sql连接表达式"></a> SQL连接表达式</h1><h1 id="cross-join-笛卡尔乘积"><a class="markdownIt-Anchor" href="#cross-join-笛卡尔乘积"></a> cross join 笛卡尔乘积</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> likes <span class="keyword">cross</span> <span class="keyword">join</span> sells;</span><br></pre></td></tr></table></figure><blockquote><p>列数相加，行数相乘</p></blockquote><h1 id="自然连接natural-join"><a class="markdownIt-Anchor" href="#自然连接natural-join"></a> 自然连接Natural Join</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> likes.beer,drinker,bar,price</span><br><span class="line"><span class="keyword">from</span> likes,sells</span><br><span class="line"><span class="keyword">where</span> likes.beer = sells.beer;</span><br><span class="line">//先是做一个笛卡尔乘积，然后两个表中相同的属性值相同的元组成为连接结果，且同名属性值相同的合并。</span><br><span class="line">//下面这三种写法是等价的，只是nutural join结果会合并属性列</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> likes <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> sells;</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> likes <span class="keyword">JOIN</span> sells <span class="keyword">ON</span> likes.beer = sells.beer;</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> likes <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> sells</span><br><span class="line"><span class="keyword">WHERE</span> likes.beer = sells.beer;</span><br></pre></td></tr></table></figure><blockquote><p>先做一个 <strong>笛卡尔乘积</strong></p><p>如果有多个同名的属性，则保留下来的成为结果的元组中的这些属性值都要相同。</p><p><strong>且进行了合并</strong></p></blockquote><h1 id="theta-join"><a class="markdownIt-Anchor" href="#theta-join"></a> Theta Join</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> drinkers [<span class="keyword">inner</span>] <span class="keyword">join</span> frequents <span class="keyword">on</span> <span class="keyword">name</span> = drinker</span><br><span class="line">[<span class="keyword">where</span> ...]</span><br><span class="line">;</span><br><span class="line">//就是先做笛卡尔成绩，然后根据这个条件筛选,还可以继续根where</span><br><span class="line">//相当于与</span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> drinkers,frequents</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">name</span> = drinker;</span><br></pre></td></tr></table></figure><h1 id="xxx-outer-joins"><a class="markdownIt-Anchor" href="#xxx-outer-joins"></a> XXX Outer joins</h1><blockquote><p>注意outer join 是针对前面的natural join 和 join on的</p><p>所以分为</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">natural left outer join</span><br><span class="line">natural right outer join</span><br><span class="line">natural full outer join</span><br><span class="line"></span><br><span class="line">left outer join on</span><br><span class="line">right outer join on</span><br><span class="line">full outer join on</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">natural LEFT OUTER JOIN</span><br><span class="line">//连接关键字左边的表中的所有的元组都会列出来，如果该元组不满足条件则列出NULL</span><br><span class="line">natural RIGHT OUTER JOIN</span><br><span class="line">natural FULL OUTER JOIN</span><br></pre></td></tr></table></figure><ul><li><h4 id="natural-left-outer-join"><a class="markdownIt-Anchor" href="#natural-left-outer-join"></a> natural left outer join</h4><blockquote><p><strong>包含nutural join的结果，如果查询结果中没有包含关键词左边的关系中的某个元素，则会把这个元素加入结果，没有和右边关系匹配上的属性值由NULL补全。</strong></p></blockquote></li><li><h4 id="natural-right-outer-join"><a class="markdownIt-Anchor" href="#natural-right-outer-join"></a> natural right outer join</h4><blockquote><p><strong>包含nutural join的结果，如果查询结果中没有包含关键词右边的关系中的某个元素，则会把这个元素加入结果，没有和左边关系匹配上的属性值由NULL补全。</strong></p></blockquote></li><li><h4 id="natural-full-outer-join"><a class="markdownIt-Anchor" href="#natural-full-outer-join"></a> natural full outer join</h4><blockquote><p><strong>包含nutural join的结果，如果查询结果中没有包含关键词左边或右边的关系中的某个元素，则会把这个元素加入结果，没有和右边或左边关系匹配上的属性值由NULL补全。</strong></p></blockquote></li></ul><blockquote><p>如果A natural join B的结果中，A 和 B的同名属性为attribute1，则如果结果中包含A中attribute1(转换成set)的所有值，且包含B中attribute1(转换成set)的所有值，则上面三种outer join查询出来的结果都一样。</p></blockquote><h1 id="给关系起别名后不能再from这个别名"><a class="markdownIt-Anchor" href="#给关系起别名后不能再from这个别名"></a> 给关系起别名后不能再from这个别名</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> likes.drinker</span><br><span class="line"><span class="keyword">FROM</span> likes,(((<span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> bars)<span class="keyword">UNION</span>(<span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> beers))<span class="keyword">UNION</span>(<span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> drinkers))R</span><br><span class="line"><span class="keyword">WHERE</span> likes.beer <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">FROM</span> R</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>不能这样子</p></blockquote><h1 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h1><ul><li>找出具有相同口径火炮的船只中火炮数量最多的船只的名字</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span></span><br><span class="line"><span class="keyword">FROM</span> Ships</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">CLASS</span> <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CLASS</span></span><br><span class="line"><span class="keyword">FROM</span> Classes c1</span><br><span class="line"><span class="keyword">WHERE</span> numGuns &gt;= <span class="keyword">ALL</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> numGuns</span><br><span class="line"><span class="keyword">FROM</span> Classes c2</span><br><span class="line"><span class="keyword">WHERE</span> c1.bore = c2.bore</span><br><span class="line">);</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span></span><br><span class="line"><span class="keyword">FROM</span> Ships</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">CLASS</span> = <span class="keyword">ANY</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">class</span></span><br><span class="line"><span class="keyword">FROM</span> Classes c1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">exists</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Classes c2</span><br><span class="line"><span class="keyword">WHERE</span> c1.bore = c2.bore <span class="keyword">AND</span> c1.numGuns &lt; c2.numGuns</span><br><span class="line">)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="习题"><a class="markdownIt-Anchor" href="#习题"></a> 习题</h1><ul><li><p>6.3.1</p><ul><li><p>(1)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> maker</span><br><span class="line"><span class="keyword">FROM</span> Product</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">model</span> <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line"><span class="keyword">FROM</span> PC</span><br><span class="line"><span class="keyword">WHERE</span> speed &gt;= <span class="number">3</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> maker</span><br><span class="line"><span class="keyword">FROM</span> Product,(<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PC <span class="keyword">WHERE</span> speed &gt;= <span class="number">3</span>) <span class="keyword">high</span></span><br><span class="line"><span class="keyword">WHERE</span> Product.model = high.model;</span><br></pre></td></tr></table></figure></li><li><p>(2)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line">    <span class="keyword">FROM</span> Printer</span><br><span class="line"><span class="keyword">WHERE</span> price &gt;= <span class="keyword">ALL</span> </span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">SELECT</span> price</span><br><span class="line">    <span class="keyword">FROM</span> Printer</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line">    <span class="keyword">FROM</span> Printer l1</span><br><span class="line">    <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">SELECT</span> *</span><br><span class="line">    <span class="keyword">FROM</span> Printer l2</span><br><span class="line">    <span class="keyword">WHERE</span> l2.price &gt; l1.price</span><br><span class="line">    );</span><br></pre></td></tr></table></figure></li><li><p>(3)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line"><span class="keyword">FROM</span> Laptop</span><br><span class="line"><span class="keyword">WHERE</span> speed &lt; <span class="keyword">ALL</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> speed</span><br><span class="line"><span class="keyword">FROM</span> PC</span><br><span class="line"><span class="keyword">WHERE</span> speed &lt;= <span class="keyword">All</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> speed</span><br><span class="line"><span class="keyword">FROM</span> PC</span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line"><span class="keyword">FROM</span> Laptop l1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> PC</span><br><span class="line"><span class="keyword">WHERE</span> speed &lt;= l1.speed</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>(4)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">SELECT</span> Product.model</span><br><span class="line">  <span class="keyword">FROM</span> Product</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">model</span> <span class="keyword">IN</span></span><br><span class="line">  (</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line">  <span class="keyword">FROM</span> (((<span class="keyword">select</span> price <span class="keyword">from</span> pc)<span class="keyword">UNION</span>(<span class="keyword">select</span> price <span class="keyword">from</span> Laptop))<span class="keyword">UNION</span>(<span class="keyword">select</span> price <span class="keyword">from</span> Printer)) R</span><br><span class="line">  <span class="keyword">WHERE</span> price &gt;= <span class="keyword">ALL</span></span><br><span class="line">  (</span><br><span class="line">  <span class="keyword">SELECT</span> price</span><br><span class="line">  <span class="keyword">FROM</span> (((<span class="keyword">select</span> price <span class="keyword">from</span> pc)<span class="keyword">UNION</span>(<span class="keyword">select</span> price <span class="keyword">from</span> Laptop))<span class="keyword">UNION</span>(<span class="keyword">select</span> price <span class="keyword">from</span> Printer))</span><br><span class="line">  )</span><br><span class="line">  );</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">SELECT</span> Product.model</span><br><span class="line">  <span class="keyword">FROM</span> Product</span><br><span class="line">  <span class="keyword">WHERE</span> <span class="keyword">model</span> <span class="keyword">IN</span></span><br><span class="line">  (</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line">  <span class="keyword">FROM</span> (pc <span class="keyword">NATURAL</span> <span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> Laptop)<span class="keyword">NATURAL</span> <span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> Printer</span><br><span class="line">  <span class="keyword">WHERE</span> price &gt;= <span class="keyword">ALL</span></span><br><span class="line">  (</span><br><span class="line">  <span class="keyword">SELECT</span> price</span><br><span class="line">  <span class="keyword">FROM</span> (pc <span class="keyword">NATURAL</span> <span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> Laptop)<span class="keyword">NATURAL</span> <span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> Printer</span><br><span class="line">  )</span><br><span class="line">  );</span><br></pre></td></tr></table></figure></li><li><p>（5）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> maker</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">model</span> <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line"><span class="keyword">FROM</span> Printer</span><br><span class="line"><span class="keyword">WHERE</span> price &lt;= <span class="keyword">all</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> price</span><br><span class="line"><span class="keyword">FROM</span> Printer</span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> maker</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">model</span>=<span class="keyword">ANY</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line"><span class="keyword">FROM</span> Printer p1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">exists</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Printer p2</span><br><span class="line"><span class="keyword">WHERE</span> p2.price &lt; p1.price</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>(6)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> maker</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">model</span> <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line"><span class="keyword">FROM</span> PC</span><br><span class="line"><span class="keyword">WHERE</span> ram &lt;= <span class="keyword">ALL</span>(<span class="keyword">SELECT</span> ram <span class="keyword">FROM</span> PC) <span class="keyword">AND</span> speed &gt;= <span class="keyword">ALL</span>(<span class="keyword">SELECT</span> speed <span class="keyword">FROM</span> PC)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> maker</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">model</span> =<span class="keyword">ANY</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">model</span></span><br><span class="line"><span class="keyword">FROM</span> PC p1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> ram <span class="keyword">FROM</span> PC p2 <span class="keyword">WHERE</span> p2.ram &lt; p1.ram ) <span class="keyword">AND</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> speed <span class="keyword">FROM</span> PC p2 <span class="keyword">WHERE</span> p2.speed &gt; p1.speed)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>习题6.3.2</p><ul><li><p>(1)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> country</span><br><span class="line"><span class="keyword">FROM</span> Classes</span><br><span class="line"><span class="keyword">WHERE</span> numGuns &gt;= <span class="keyword">ALL</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> numGuns</span><br><span class="line"><span class="keyword">FROM</span> Classes</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> country</span><br><span class="line"><span class="keyword">FROM</span> Classes c1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> </span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Classes c2</span><br><span class="line"><span class="keyword">WHERE</span> c2.numGuns &gt; c1.numGuns</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>（2）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="keyword">CLASS</span></span><br><span class="line"><span class="keyword">FROM</span> Ships</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NAME</span> <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> ship</span><br><span class="line"><span class="keyword">FROM</span> Outcomes</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">RESULT</span> = sunk</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="keyword">CLASS</span></span><br><span class="line"><span class="keyword">FROM</span> Ships s1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Outcomes o1</span><br><span class="line"><span class="keyword">WHERE</span> s1.ship = o1.name <span class="keyword">AND</span> o1.result = <span class="string">&#x27;ok&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>(3)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span> </span><br><span class="line"><span class="keyword">FROM</span> Ships</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">CLASS</span> <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">class</span></span><br><span class="line"><span class="keyword">FROM</span> Classes</span><br><span class="line"><span class="keyword">WHERE</span> bore = <span class="number">16</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span></span><br><span class="line"><span class="keyword">FROM</span> Ships s1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Classes c1</span><br><span class="line"><span class="keyword">WHERE</span> s1.class = c1.class <span class="keyword">AND</span> c1.bore &lt;&gt; <span class="number">16</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>(4)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> battle</span><br><span class="line"><span class="keyword">FROM</span> Outcomes</span><br><span class="line"><span class="keyword">WHERE</span> ship <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">FROM</span> Ships</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">CLASS</span> = <span class="string">&#x27;Kongo&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> battle</span><br><span class="line"><span class="keyword">FROM</span> Outcomes o1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Ships s1</span><br><span class="line"><span class="keyword">WHERE</span> o1.ship = s1.name <span class="keyword">AND</span> <span class="keyword">CLASS</span> = <span class="string">&#x27;Kongo&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>(5)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">NAME</span></span><br><span class="line">    <span class="keyword">FROM</span> Ships</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">CLASS</span> <span class="keyword">IN</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">CLASS</span></span><br><span class="line">    <span class="keyword">FROM</span> Classes c1</span><br><span class="line">    <span class="keyword">WHERE</span> numGuns &gt;= <span class="keyword">ALL</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">SELECT</span> numGuns</span><br><span class="line">    <span class="keyword">FROM</span> Classes c2</span><br><span class="line">    <span class="keyword">WHERE</span> c1.bore = c2.bore</span><br><span class="line">    );</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">NAME</span></span><br><span class="line">    <span class="keyword">FROM</span> Ships</span><br><span class="line">    <span class="keyword">WHERE</span> <span class="keyword">CLASS</span> = <span class="keyword">ANY</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">class</span></span><br><span class="line">    <span class="keyword">FROM</span> Classes c1</span><br><span class="line">    <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">exists</span></span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">SELECT</span> *</span><br><span class="line">    <span class="keyword">FROM</span> Classes c2</span><br><span class="line">    <span class="keyword">WHERE</span> c1.bore = c2.bore <span class="keyword">AND</span> c1.numGuns &lt; c2.numGuns</span><br><span class="line">    )</span><br><span class="line">    );</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="homework1"><a class="markdownIt-Anchor" href="#homework1"></a> homework1</h1><blockquote><p><strong>Homework</strong></p><p>Consider the following schema:</p><p>Supplier(sid: integer, sname: string, address: string)</p><p>Part(pid: integer, pname: string, color: string)</p><p>Catalog(sid: integer, pid: integer, cost: real)</p><p>The relation Supplier stores suppliers and the key of that relation is sid.</p><p>The relation Part  stores parts,  and pid is the key of that relation.</p><p>Finally, Catalog stores which  supplier  supplies which part at which cost.  The key is the combination of the two attributes sid  and pid.</p><p><strong>Write queries in SQL.</strong></p><ol><li>Find the names of suppliers who supply  some red part.</li><li>Find the IDs  of suppliers who supply some  red part and some green part.</li><li>Find pairs of IDs such that the supplier with the first ID charges more for some part  than the supplier  with the second ID.</li><li>Find the IDs  of suppliers who supply  only red parts.</li><li>Find the IDs  of suppliers who supply every part.</li></ol></blockquote><ul><li><p>1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">distinct</span> s.sname</span><br><span class="line"><span class="keyword">FROM</span> Supplier s,<span class="keyword">Catalog</span> c,part p</span><br><span class="line"><span class="keyword">WHERE</span> s.sid = c.sid <span class="keyword">AND</span> p.pid = c.pid <span class="keyword">AND</span> p.color = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">distinct</span> sname</span><br><span class="line"><span class="keyword">FROM</span> Supplier</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">sid</span> <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">Catalog</span> </span><br><span class="line"><span class="keyword">WHERE</span> pid <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> pid</span><br><span class="line"><span class="keyword">FROM</span> Part</span><br><span class="line"><span class="keyword">WHERE</span> color = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">distinct</span> sname</span><br><span class="line"><span class="keyword">FROM</span> Supplier</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">sid</span> <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">CATALOG</span> c1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> </span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Part p1</span><br><span class="line"><span class="keyword">WHERE</span> p1.pid = c1.pid <span class="keyword">AND</span> color = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">distinct</span> sname</span><br><span class="line"><span class="keyword">FROM</span> ((Supplier <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> <span class="keyword">Catalog</span>)<span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> Part)n</span><br><span class="line"><span class="keyword">WHERE</span> n.color = <span class="string">&#x27;red&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>2</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">Catalog</span></span><br><span class="line"><span class="keyword">WHERE</span> pid <span class="keyword">IN</span> (<span class="keyword">SELECT</span> pid <span class="keyword">FROM</span> Part <span class="keyword">WHERE</span> color = <span class="string">&#x27;red&#x27;</span>) <span class="keyword">AND</span> pid <span class="keyword">IN</span> (<span class="keyword">SELECT</span> pid <span class="keyword">FROM</span> Part <span class="keyword">WHERE</span> color = <span class="string">&#x27;green&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> c.sid <span class="keyword">FROM</span> <span class="keyword">Catalog</span> c,Part p <span class="keyword">WHERE</span> c.pid = p.pid <span class="keyword">AND</span> color = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> c.sid <span class="keyword">FROM</span> <span class="keyword">Catalog</span> c,Part p <span class="keyword">WHERE</span> c.pid = p.pid <span class="keyword">AND</span> color = <span class="string">&#x27;green&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">distinct</span> n1.sid</span><br><span class="line"><span class="keyword">FROM</span> (<span class="keyword">Catalog</span> <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> Part)n1 <span class="keyword">JOIN</span> (<span class="keyword">Catalog</span> <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> Part)n2 <span class="keyword">ON</span> n1.sid = n2.sid</span><br><span class="line"><span class="keyword">WHERE</span> n1.color = <span class="string">&#x27;red&#x27;</span> <span class="keyword">AND</span> n2.color = <span class="string">&#x27;green&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>3</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">SELECT</span> c1.sid,c2.sid</span><br><span class="line">  <span class="keyword">FROM</span> <span class="keyword">Catalog</span> c1,<span class="keyword">Catalog</span> c2</span><br><span class="line"><span class="keyword">WHERE</span> c1.pid = c2.pid <span class="keyword">AND</span> c1.sid &lt;&gt; c2.sid <span class="keyword">AND</span> c1.cost &gt; c2.pid;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">SELECT</span> c1.sid,c2.sid</span><br><span class="line">  <span class="keyword">FROM</span> <span class="keyword">Catalog</span> c1 <span class="keyword">JOIN</span> <span class="keyword">Catalog</span> c2 <span class="keyword">ON</span> (c1.pid = c2.pid <span class="keyword">AND</span> c1.sid &lt;&gt; c2.sid <span class="keyword">AND</span> c1.cost &gt; c2.cost);</span><br></pre></td></tr></table></figure></li><li><p>4</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">Catalog</span> c1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Part p1</span><br><span class="line"><span class="keyword">WHERE</span> p1.sid = c1.sid <span class="keyword">AND</span> p1.color &lt;&gt; <span class="string">&#x27;red&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">FROM</span> Supplier s1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line">(<span class="keyword">Catalog</span> <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> Part)n1 <span class="keyword">JOIN</span> (<span class="keyword">Catalog</span> <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> Part)n2 <span class="keyword">ON</span> (s1.sid = n1.sid <span class="keyword">AND</span> n1.sid = n2.sid <span class="keyword">AND</span> (n1.color &lt;&gt; <span class="string">&#x27;red&#x27;</span> <span class="keyword">OR</span> n2.color &lt;&gt; <span class="string">&#x27;red&#x27;</span>))</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>5</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">sid</span></span><br><span class="line">  <span class="keyword">FROM</span> Supplier s1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> </span><br><span class="line">  (</span><br><span class="line">  (</span><br><span class="line">  <span class="keyword">SELECT</span> pid</span><br><span class="line">  <span class="keyword">FROM</span> Part</span><br><span class="line">  )</span><br><span class="line">  <span class="keyword">except</span></span><br><span class="line">  (</span><br><span class="line">  <span class="keyword">SELECT</span> pid</span><br><span class="line">  <span class="keyword">FROM</span> <span class="keyword">Catalog</span> c1</span><br><span class="line">  <span class="keyword">WHERE</span> c1.pid = s1.pid</span><br><span class="line">  )</span><br><span class="line">  );</span><br></pre></td></tr></table></figure></li></ul><h1 id="sql修改表中元组中元素"><a class="markdownIt-Anchor" href="#sql修改表中元组中元素"></a> SQL修改表中元组中元素</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> tablename</span><br><span class="line"><span class="keyword">set</span> attribute1=value1,attribute2=value2,....</span><br><span class="line"><span class="keyword">where</span> 更新条件表达式;</span><br></pre></td></tr></table></figure><h1 id="sql删除表中元组"><a class="markdownIt-Anchor" href="#sql删除表中元组"></a> SQL删除表中元组</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tablename</span><br><span class="line"><span class="keyword">where</span> 删除条件表达式;</span><br></pre></td></tr></table></figure><h1 id="聚合函数将多个值聚合成一个值"><a class="markdownIt-Anchor" href="#聚合函数将多个值聚合成一个值"></a> 聚合函数（将多个值聚合成一个值）</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sum(attribute) avg(attribute) count(attribute) min(attribute) max(attribute)</span><br><span class="line">count()<span class="comment">--不会数null</span></span><br><span class="line">count(*) --查找的是元组的数量</span><br></pre></td></tr></table></figure><h1 id="若使用聚合函数select中-其他属性要么使用聚合函数要么使用group-by"><a class="markdownIt-Anchor" href="#若使用聚合函数select中-其他属性要么使用聚合函数要么使用group-by"></a> 若使用聚合函数，select中 其他属性要么使用聚合函数，要么使用group by</h1><ul><li>错误代码</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> bar, <span class="keyword">MIN</span>(price)</span><br><span class="line"><span class="keyword">FROM</span> Sells</span><br><span class="line"><span class="keyword">WHERE</span> beer = <span class="string">&#x27;喜力&#x27;</span>;</span><br><span class="line"><span class="comment">--这个代码是错误的</span></span><br></pre></td></tr></table></figure><ul><li>正确代码</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> bar, price <span class="keyword">FROM</span> Sells</span><br><span class="line"><span class="keyword">WHERE</span> beer = <span class="string">&#x27;喜 力&#x27;</span> </span><br><span class="line"><span class="keyword">AND</span> price = ( </span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(price) <span class="keyword">FROM</span> Sells</span><br><span class="line"><span class="keyword">WHERE</span> beer = <span class="string">&#x27;喜力&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="group-by分组"><a class="markdownIt-Anchor" href="#group-by分组"></a> GROUP BY分组</h1><ul><li><p>对查询结果中的元组的性质有限制的话，在where语句中进行限制</p></li><li><p>对group by分组的整体的性质有限制的话，在group by语句后面加上having限制</p></li><li><p>分完组后select对每一组分别进行统计。</p></li></ul><blockquote><p>一个关系中任何一个属性使用了聚合函数，则其他属性要么也使用聚合函数，要么使用Group by</p></blockquote><blockquote><p>使用group by后，select的作用对象就成了<strong>每个分组</strong></p></blockquote><h1 id="having-只能对分组整体进行限制"><a class="markdownIt-Anchor" href="#having-只能对分组整体进行限制"></a> having 只能对分组整体进行限制</h1><ul><li>若出现having 则必须放在group by后面，对每个分组进行判断，将分组当成一个整体，不是一个一个元组判断。</li></ul><h1 id="聚合函数不能出现在where语句中"><a class="markdownIt-Anchor" href="#聚合函数不能出现在where语句中"></a> 聚合函数不能出现在where语句中</h1><ul><li>因为where中式 **一个一个元组 **带进去判断where条件的，但是聚合函数用到了整个属性</li></ul><h1 id="聚合函数和分组中的null值"><a class="markdownIt-Anchor" href="#聚合函数和分组中的null值"></a> 聚合函数和分组中的NULL值</h1><ul><li>NULL对平均值、求和、最大值、最小值、计数都不做贡献</li><li>分组中对NULL值没有要求，可以出现NULL</li><li>如果对空包(只有null)计数，则为零，其他聚合运算结果为null</li></ul><h1 id="属性的默认值"><a class="markdownIt-Anchor" href="#属性的默认值"></a> 属性的默认值</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tablename</span><br><span class="line">(</span><br><span class="line">attribute1 type1 <span class="keyword">default</span> defaultvalue</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="表的更新"><a class="markdownIt-Anchor" href="#表的更新"></a> 表的更新</h1><ul><li><p>insert</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> likes(beer,drinker)</span><br><span class="line"><span class="keyword">values</span>();</span><br></pre></td></tr></table></figure><blockquote><p>忘记表中attribute的顺序，可以指定插入值对应的属性</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> drinkers(<span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">values</span>();</span><br></pre></td></tr></table></figure><blockquote><p>插入部分的值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tablename</span><br><span class="line">(</span><br><span class="line">subquery</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>插入多个元组</p></blockquote></li><li><p>delete</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> </span><br><span class="line"><span class="keyword">from</span> tablename</span><br><span class="line"><span class="keyword">where</span> condition;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> *</span><br><span class="line"><span class="keyword">FROM</span> Beers b</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">FROM</span> Beers</span><br><span class="line"><span class="keyword">WHERE</span> manf = b.manf <span class="keyword">AND</span></span><br><span class="line"><span class="keyword">name</span> &lt;&gt; b.name);</span><br></pre></td></tr></table></figure><blockquote><p>删除时先给满足条件的元组进行标记，而不是边删边查</p></blockquote></li><li><p>update</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> tablename</span><br><span class="line"><span class="keyword">set</span> attribute1 = <span class="keyword">value</span></span><br><span class="line"><span class="keyword">where</span> conditions;</span><br></pre></td></tr></table></figure></li></ul><h1 id="views视图和indexes索引"><a class="markdownIt-Anchor" href="#views视图和indexes索引"></a> (views)视图和(indexes)索引</h1><ul><li>a view is a relation defined in terms of stored tables(called base tables) and other views</li></ul><blockquote><p>视图依赖于其它的表或者其它的视图，所以 必须要有表</p></blockquote><ul><li><p>two kinds:</p><ul><li><p>virtual = not stored in the database;(默认情况)</p><p>just a query for constructing the relation</p><blockquote><p>不会创建表，一个表中有敏感信息，要提供有选择性的服务，这时候就能提供视图，通过视图进行部分信息展示。</p><p>对多个表的复杂查询定义成一个视图，然后之后的复杂查询可直接对这个视图进行查询</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--virtual</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> &lt;<span class="keyword">name</span>&gt; [<span class="keyword">attributes</span>](为<span class="keyword">select</span>选择的内容重命名，可省略，否则用<span class="keyword">query</span>中的属性名)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">&lt;<span class="keyword">query</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">--materialized</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">materialized</span> <span class="keyword">view</span> &lt;viewname&gt;[<span class="keyword">attributes</span>]</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line">&lt;<span class="keyword">query</span>&gt;;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> CanDrink(drinker,beer)<span class="comment">--没有指定属性，则用query中的drinker,beer属性</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> drinker,beer</span><br><span class="line"><span class="keyword">from</span> frequents,sells</span><br><span class="line"><span class="keyword">where</span> frequents.bar = sells.bar;</span><br></pre></td></tr></table></figure></li><li><p>materialized(物化的) = actually constructed and stored</p></li></ul></li><li><p>对视图的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> beer </span><br><span class="line"><span class="keyword">from</span> CanDrink</span><br><span class="line"><span class="keyword">where</span> drinker = <span class="string">&#x27;Tony Hoare&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--相当于</span></span><br><span class="line"><span class="keyword">select</span> beer </span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">(</span><br><span class="line"><span class="keyword">select</span> drinker,beer</span><br><span class="line"><span class="keyword">from</span> frequents,sells</span><br><span class="line"><span class="keyword">where</span> frequents.bar = sells.bar</span><br><span class="line">) CanDrink</span><br><span class="line"><span class="keyword">where</span> drinker = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--系统优化成</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> beer</span><br><span class="line"><span class="keyword">from</span> frequents,sells</span><br><span class="line"><span class="keyword">where</span> frequents.bar = sells.bar <span class="keyword">and</span> drinker = <span class="string">&#x27; &#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>对视图的修改</p><blockquote><p>类似于对视图的查询</p><p>opengauss中禁止对视图的修改，因为视图的目的就是给客户进行信息的展示</p><p>sqlserver中支持</p></blockquote><ul><li><p>重命名视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rename</span> <span class="keyword">view</span> viewname1 <span class="keyword">to</span> viewname2;<span class="comment">--sql中</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>删除视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> viewname;</span><br></pre></td></tr></table></figure></li><li><p>物化的视图</p><blockquote><p>物化的视图查询快，但是</p><p>如果数据源的表改变了，视图应该保持一致(阶段性更新)</p><p>但是如果表变化的频率太快，则不太适合</p></blockquote></li></ul><h1 id="sql-tuning-advisorsta"><a class="markdownIt-Anchor" href="#sql-tuning-advisorsta"></a> SQL Tuning Advisor(STA)</h1><ul><li>sql自动优化</li></ul><h1 id="索引"><a class="markdownIt-Anchor" href="#索引"></a> 索引</h1><ul><li><p>加速数据的访问</p><p>数据结构使用的是B-tree</p></li><li><p>创建索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--一个索引对应很多值</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> indname <span class="keyword">on</span> realtion(<span class="keyword">attribute</span>);  </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> indname <span class="keyword">on</span> realtion(attribute1,attribute2,...);</span><br><span class="line"></span><br><span class="line"><span class="comment">--一个索引对应一个值</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> indname <span class="keyword">on</span> relation(<span class="keyword">attribute</span>);</span><br></pre></td></tr></table></figure></li><li><p>索引使用</p><ul><li><p>只有当数据量很大的时候，定义索引后才会使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> beerind <span class="keyword">on</span> beers(manf);  </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> sellind <span class="keyword">on</span> sells(bar,beer);  </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> price</span><br><span class="line"><span class="keyword">from</span> beers,sells</span><br><span class="line"><span class="keyword">where</span> manf = <span class="string">&#x27;pete&#x27;&#x27;s&#x27;</span>  <span class="comment">--根据索引查找</span></span><br><span class="line"><span class="keyword">and</span> beers.name = sells.beer <span class="comment">--根据索引查找</span></span><br><span class="line"><span class="keyword">and</span> bar = <span class="string">&#x27;joe&#x27;&#x27;s bar&#x27;</span>; <span class="comment">--根据索引查找</span></span><br></pre></td></tr></table></figure><blockquote><p>运算符只能使用=</p></blockquote></li></ul></li><li><p>我们定义了索引后</p><p>如果经常进行更新操作，索引会降低速率，因为更新后索引也要更新</p></li><li><p>如果不进行查询，则建立索引会降低效率</p></li><li><p>创建primary key或unique key后会自动创建索引，故我们要自己创建索引时要先把主键或者unique key删除掉</p></li></ul><h1 id="实体关系模型entity-relation-model"><a class="markdownIt-Anchor" href="#实体关系模型entity-relation-model"></a> 实体关系模型(Entity-Relation Model)</h1><ul><li>包含约束，不包含操作</li></ul><h1 id="实体集entity"><a class="markdownIt-Anchor" href="#实体集entity"></a> 实体集Entity</h1><ul><li>类似于面向对象中的类</li><li>包含简单的属性(属性不能是集合)</li></ul><h1 id="联系relationship二元"><a class="markdownIt-Anchor" href="#联系relationship二元"></a> 联系relationship(二元)</h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/IOCKgjGbWM3ZLsD.png" alt="image-20201103164015576.png" /></p><h1 id="联系集relationship-set"><a class="markdownIt-Anchor" href="#联系集relationship-set"></a> 联系集(relationship set)</h1><ul><li>两个有联系的实体集的集合</li></ul><h1 id="多元联系多路联系multiway-relationshiops"><a class="markdownIt-Anchor" href="#多元联系多路联系multiway-relationshiops"></a> 多元联系(多路联系)(Multiway relationshiops)</h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/KfivRtzYW1MCcAS.png" alt="image-20201103164640201.png" /></p><h1 id="多对多联系many-many-relationships"><a class="markdownIt-Anchor" href="#多对多联系many-many-relationships"></a> 多对多联系(many-many relationships)</h1><ul><li><p>联系关联的任一实体集中的一个实体可以对应其它实体集中的多个实体</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/Z9WdYKRjqE1iFAI.png" alt="image.png" /></p></li></ul><h1 id="多对一联系many-one-relationships"><a class="markdownIt-Anchor" href="#多对一联系many-one-relationships"></a> 多对一联系(many-one relationships)</h1><ul><li><p>前一个实体集中的多个实体对应后一个实体集中的至多一个实体</p></li><li><p>后一个实体集中的一个实体对应前一个实体集中的零个、一个、多个实体</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/f1FdX2KmrU5T4R3.png" alt="image.png" /></p></li></ul><h1 id="一对一联系one-one-relationships"><a class="markdownIt-Anchor" href="#一对一联系one-one-relationships"></a> 一对一联系(one-one relationships)</h1><ul><li><p>一对一</p><p><img src= "/img/loading.gif" data-lazy-src="G:%5Ctyporaimages%5Cimage-20201114204101921.png" alt="image-20201114204101921" /></p></li></ul><h1 id="联系的多样性mltiplicity"><a class="markdownIt-Anchor" href="#联系的多样性mltiplicity"></a> 联系的多样性(mltiplicity)</h1><ul><li><p>再E/R图中表示联系的多样性</p></li><li><p>多对多</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/tEYbOUDJGv78Zfi.png" alt="image-20201103165501064.png" /></p><p>或者在横线上加m,n</p></li><li><p>多对一</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/YV5isDBduEX4fKG.png" alt="image-20201103165522220.png" /></p><p>或者在横线上加m,1</p><blockquote><p>如果是尖尖的箭头，则每个人之多有一个最喜欢的啤酒，可以没有</p><p>可以为空</p><p>如果是圆的箭头，则每个人必须有一个最喜欢的啤酒</p><p>not null</p></blockquote></li><li><p>一对一</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/DHBsgyJhz5Zxe4C.png" alt="image-20201103170031650.png" /></p><blockquote><p>该联系中，每个厂商必须有销售最好的啤酒，而啤酒不一定能对应上厂商</p><p>所以指向Beer的箭头是圆圆的箭头，表示每个厂商必须要有，而指向厂商的箭头是尖尖的箭头</p></blockquote></li></ul><h1 id="联系上可能有属性attribute-on-relationship"><a class="markdownIt-Anchor" href="#联系上可能有属性attribute-on-relationship"></a> 联系上可能有属性(attribute on relationship)</h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/uC84gqTfRi6K9ZA.png" alt="image-20201103170329104.png" /></p><ul><li><p>可以将联系的属性做成一个实体集</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/QzdowAFmRgPTNSq.png" alt="image-20201103170437300.png" /></p></li></ul><blockquote><p>上图是多对多对一的联系，应该指出哪个是联系对应属性的实体</p><p>推荐使用上面不变成实体集的</p></blockquote><h1 id="rolestabels-of-one-way-relationships一元联系"><a class="markdownIt-Anchor" href="#rolestabels-of-one-way-relationships一元联系"></a> roles(tabels of one way relationships一元联系)</h1><ul><li>一元联系的标签</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/3A9jGDOPMB16zaU.png" alt="image-20201103171437911.png" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/SsnhIo2y7mCRDQl.png" alt="image.png" /></p><blockquote><p>对称的联系</p></blockquote><h1 id="子类sub-classes"><a class="markdownIt-Anchor" href="#子类sub-classes"></a> 子类(sub classes)</h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/u4ObFKoJaZRYLS6.png" alt="image-20201103171521797.png" /></p><ul><li><p>在面向对象过程中，一个对象只能属于一个类</p></li><li><p>但在E/R图中，一个对象可以属于好几个类，即如果实体e在一个子类中被描述，则在父类中也有相应的描述，并可以递归向上。也就是这两个表里面都有对e的描述的元组。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/NbkOSD5hr1U4p3u.png" alt="image-20201103173139102.png" /></p></li></ul><h1 id="er图中的主键keys"><a class="markdownIt-Anchor" href="#er图中的主键keys"></a> E/R图中的主键(keys)</h1><ul><li><p>在属性下面加下划线</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/lYkWxSViDm8AsqB.png" alt="image-20201103173257755.png" /></p><blockquote><p>所有子类<strong>继承</strong>父类的<strong>属性包括约束</strong></p></blockquote></li><li><p>multi-attributes key</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/sxM7YDIqnuAlciw.png" alt="image-20201103173349216.png" /></p></li></ul><h1 id="度的约束degree-constaint"><a class="markdownIt-Anchor" href="#度的约束degree-constaint"></a> 度的约束(degree constaint)</h1><ul><li><p>一个酒吧最多销售10种啤酒</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/WeNzrZdjCu79xfp.png" alt="image-20201103173528095.png" /></p></li></ul><h1 id="弱实体集weak-entity-set"><a class="markdownIt-Anchor" href="#弱实体集weak-entity-set"></a> 弱实体集(weak entity set)</h1><ul><li><p>要唯一识别E中的实体，要借助从E出发的联系的相关联的实体集的主键</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/wX6gZydfIjCBl1T.png" alt="image-20201103174056411.png" /></p></li></ul><blockquote><p>队员中的name和number都不能作为主键，因为不同队伍的不同队员可能有相同名字和编号，所以要借助队伍这个实体集来帮助区分</p><p>这个联系称为支撑联系，且这个联系必须是多对一的，每个队员必须属于一个队伍，所以为圆圆箭头。</p><p>支撑联系可以有多个</p><p>弱实体集用双边框矩形来表示，联系也是双框</p><p>从弱实体集出发的联系不一定都是支撑联系</p><p>弱实体集的主键为：自身的属性和支撑联系对应的实体的主键联合形成主键</p></blockquote><h1 id="设计技巧"><a class="markdownIt-Anchor" href="#设计技巧"></a> 设计技巧</h1><ul><li><p>避免冗余</p><p>saying the same thing in two different ways</p><ul><li><p>可能会造成数据不一致</p><p>描述同一种东西的两个描述如果只改了一个不改另一个，会造成</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/R7Yh6tqLcXVr81x.png" alt="image-20201110163419938.png" /></p></li><li><p>浪费空间</p></li></ul></li><li><p>避免使用弱实体集</p></li><li><p>能用属性就不用实体集</p><ul><li>实体集应该包含很多属性，除了key以外还有很多不是key的属性</li><li>多对多联系和多对一联系中的“多”的一方，则用实体集</li></ul></li><li><p>例子</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/wptJchr8TNl1qsd.png" alt="image.png" /></p><p>因为Beers时多对一联系中多的一方，所以用实体集。</p><p>而manfs作为多对一联系中一的一方，而且只有一个name键属性，没有其它非主键属性，所以不适合做成一个实体集。</p><p>应为：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/3o78B6MPCAH4jDn.png" alt="image.png" /></p><p>再如下例：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/7rEJwsOXnzT1ZMB.png" alt="image.png" /></p><p>这里beers的manf和manfs的addr存储的是相同的内容.出现了内容冗余</p><p>正确的应为:</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/3SOA785ZmCjFnMG.png" alt="image.png" /></p></li></ul><h1 id="从er图到数据库"><a class="markdownIt-Anchor" href="#从er图到数据库"></a> 从E/R图到数据库</h1><ul><li><p>实体集到关系</p></li><li><p>联系转换成关系，联系的属性为相关联的实体集的key</p><ul><li>多对多联系，联合主键</li><li>多对一联系，多的实体集的key为主键，从而联系的关系和多的那个关系合并</li><li>一对一联系，一个为主键，另一个unique约束<ul><li>可看成多对一的特殊情况，有时候可以将联系和关系合并，而有时候不能合并，看具体情况。</li><li>一般来说联系所关联的两个实体集中那个属性少，那个和联系进行合并</li></ul></li></ul></li><li><p>处理若实体集</p><ul><li>支撑联系不用转换，除非有属性</li></ul></li><li><p>子类转换(三种方法)</p><ul><li><p>面向对象的方式：每个子类都转换成一个关系，这个关系包含子类所有的属性(包括从父类继承来的)</p></li><li><p>use nulls：父类转换成关系，也包括所有子类的属性，有些元组不包含该属性则值为null</p><p>可能空值会比较多</p></li><li><p>E/R style：子类全部转换成关系，只包括子类的key和特有的属性</p></li></ul><blockquote><p>不同的转换方式，可能有的查询不利，有的查询有利，看具体情况</p></blockquote></li></ul><h1 id="约束constraint"><a class="markdownIt-Anchor" href="#约束constraint"></a> 约束(constraint)</h1><ul><li><p>主键(实体完整性约束) primary-key</p></li><li><p>外键(参照完整性约束) foreign-key</p></li><li><p>value-based constraints(用户自定义完整性约束)</p></li><li><p>tuple-based constraint</p></li><li><p>assertions</p></li><li><p>主键和唯一键不能重复，自动建立索引</p></li></ul><h1 id="外键外键的值要参照另外一个关系中主键或唯一键的值"><a class="markdownIt-Anchor" href="#外键外键的值要参照另外一个关系中主键或唯一键的值"></a> 外键，外键的值要参照另外一个关系中主键或唯一键的值</h1><ul><li>与primary key 类似</li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Beers (</span><br><span class="line"><span class="keyword">name</span>  <span class="built_in">VARCHAR</span>(<span class="number">20</span>) PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">manf  <span class="built_in">VARCHAR</span>(<span class="number">30</span>) </span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>after an attribute</li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">references &lt;relation&gt; (&lt;attributes&gt;)</span><br><span class="line"><span class="comment">--example</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Sells (</span><br><span class="line">bar    <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">beer   <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">REFERENCES</span> Beers(<span class="keyword">name</span>),</span><br><span class="line">price  <span class="built_in">REAL</span> </span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>一系列</li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">foreign key(&lt;list of attributes&gt;)</span><br><span class="line">references &lt;relation&gt; (&lt;attributes&gt;)</span><br><span class="line"><span class="comment">--example</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Sells (</span><br><span class="line">bar<span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">beer<span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">price<span class="built_in">REAL</span>,</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(beer) <span class="keyword">REFERENCES</span> Beers(<span class="keyword">name</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><p>外键的作用</p><ul><li><p>If there is a foreign-key constraint from relation <em>R</em> to relation <em>S</em>, two violations are possible:</p><ul><li>An insert or update to <em>R</em> introduces values not found in <em>S</em>.</li></ul></li><li><p>conflict to the foreign key</p><ul><li>A deletion or update to S causes some tuples of <em>R</em> to “dangle.”<ul><li>conflict to the reference</li></ul></li></ul></li></ul></li><li><p>设置参数</p><ul><li><p>default</p><p>若违反约束，则直接拒绝执行</p></li><li><p>cascade(集联)</p><p>同步修改</p></li><li><p>set null</p><p>设置为null</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Sells (</span><br><span class="line">bar<span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">beer<span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">price<span class="built_in">REAL</span>,</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(beer) <span class="keyword">REFERENCES</span> Beers(<span class="keyword">name</span>)<span class="comment">--后面的on是指对beers表进行删除或修改时的操作</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CASCADE</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">--没有on insert 因为对beersinsert不违反约束</span></span><br></pre></td></tr></table></figure><blockquote><p>如果在beers中删除，则sells中啤酒为null</p><p>如果在beers中更新，则sells同步更新</p></blockquote></li></ul><h1 id="check约束"><a class="markdownIt-Anchor" href="#check约束"></a> check约束</h1><ul><li><p>示例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Sells (</span><br><span class="line">bar<span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">beer<span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">price<span class="built_in">REAL</span> <span class="keyword">CHECK</span> ( price &lt;= <span class="number">35.00</span> )</span><br><span class="line">);</span><br><span class="line"><span class="comment">--check约束在insert或update时候进行判断</span></span><br></pre></td></tr></table></figure></li><li><p>还有基于元组的check约束</p><p>check约束还可以基于其它关系的属性(但是一些dbm没有实现该功能)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Sells (</span><br><span class="line">bar<span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">beer<span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">price<span class="built_in">REAL</span>,</span><br><span class="line"><span class="keyword">CHECK</span> (bar = <span class="string">&#x27;HardRock&#x27;</span> <span class="keyword">OR</span> price &lt;= <span class="number">35.00</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><h1 id="modification-of-constraints"><a class="markdownIt-Anchor" href="#modification-of-constraints"></a> modification of Constraints</h1><h1 id="assertions断言"><a class="markdownIt-Anchor" href="#assertions断言"></a> assertions(断言)</h1><ul><li><p>完成前面约束不能完成的功能</p></li><li><p>实例</p><ul><li>酒吧平均价格不能高于$5</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">ASSERTION</span> NoRipoffBars <span class="keyword">CHECK</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (</span><br><span class="line"><span class="keyword">SELECT</span> bar <span class="keyword">FROM</span> Sells</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> bar</span><br><span class="line"><span class="keyword">HAVING</span> <span class="number">5.00</span> &lt; <span class="keyword">AVG</span>(price)</span><br><span class="line">));</span><br></pre></td></tr></table></figure><ul><li>如果有操作会改变断言中的条件中的内容，则要进行判断，所以有时候比较耗时。</li></ul></li></ul><h1 id="triggers触发器"><a class="markdownIt-Anchor" href="#triggers触发器"></a> triggers(触发器)</h1><ul><li><p>别名:event-condition-action rule (ECA Rule)</p><ul><li><p>event</p><p>typically a type of database modification, e.g., “insert on Sells.”</p></li><li><p>condition</p><p>Any SQL boolean-valued expression.</p></li><li><p>action</p><p>Any SQL statements.</p></li></ul></li><li><p>实例</p><p>Instead of using a foreign-key constraint and rejecting insertions into Sells(bar, beer, price) with unknown beers, a trigger can add that beer to Beers, with a NULL manufacturer.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> BeerTrig</span><br><span class="line"><span class="keyword">AFTER</span> <span class="keyword">INSERT</span> <span class="keyword">ON</span> Sells  <span class="comment">--也可以为before在这个事件执行之前，执行触发器</span></span><br><span class="line"><span class="keyword">REFERENCING</span></span><br><span class="line"><span class="keyword">NEW</span> <span class="keyword">ROW</span> <span class="keyword">AS</span> NewTuple</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span></span><br><span class="line"><span class="keyword">WHEN</span> (NewTuple.beer <span class="keyword">NOT</span> <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">FROM</span> Beers))</span><br><span class="line">   <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Beers(<span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">VALUES</span>(NewTuple.beer);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CssStudy</title>
      <link href="/2020/09/14/CssStudy/"/>
      <url>/2020/09/14/CssStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="参考手册"><a class="markdownIt-Anchor" href="#参考手册"></a> <a href="https://www.w3school.com.cn/cssref/index.asp">参考手册</a></h1><h1 id="css上课实例"><a class="markdownIt-Anchor" href="#css上课实例"></a> CSS上课实例</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;meta charset = &quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;css学习&lt;/title&gt;</span><br><span class="line">&lt;style type = &quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">color </span>:<span class="number">#ff0000</span>;<span class="attribute">text-decoration </span>:none;&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">color </span>: <span class="number">#00ff00</span>;&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">color </span>: <span class="number">#ff00ff</span>; <span class="attribute">font-size </span>: <span class="number">140px</span>;<span class="attribute">text-decoration </span>: underline;&#125;</span><br><span class="line">&lt;!<span class="selector-tag">--hover</span>要放在<span class="selector-tag">link</span>，<span class="selector-tag">visited</span>后面<span class="selector-tag">--</span>&gt;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">color </span>: <span class="number">#0000ff</span>;&#125;</span><br><span class="line"><span class="selector-class">.zuoye</span>&#123;</span><br><span class="line"><span class="attribute">font-size </span>: <span class="number">12pt</span>;</span><br><span class="line"><span class="attribute">color </span>: green;</span><br><span class="line"><span class="attribute">text-align </span>: center;</span><br><span class="line"><span class="attribute">font-weight </span>: bold;</span><br><span class="line"><span class="attribute">background-color </span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>&#123;</span><br><span class="line"><span class="attribute">color </span>: white;</span><br><span class="line"><span class="attribute">background-color </span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#left</span>&#123;</span><br><span class="line"><span class="attribute">color </span>: black;</span><br><span class="line"><span class="attribute">background-color </span>: green;</span><br><span class="line"><span class="attribute">font-size </span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.red</span>&#123;</span><br><span class="line"><span class="attribute">color </span>: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;h1 style = &quot;color : white;background-color : black;&quot;&gt;我的css页面&lt;/h1&gt;</span><br><span class="line">&lt;h1 &gt;&lt;a target = &quot;_blank&quot; href = &quot;http://www.runoob.com&quot;&gt;我的css页面&lt;/a&gt;&lt;/h1&gt;</span><br><span class="line">&lt;div&gt;哈哈哈哈&lt;/div&gt;</span><br><span class="line">&lt;div&gt;hehhehehehe&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="csscascading-style-sheet作用"><a class="markdownIt-Anchor" href="#csscascading-style-sheet作用"></a> Css(Cascading Style Sheet)作用</h1><p>Cascading Style Sheet 层叠样式表，是用于控制网页样式并允许将样式信息与网页内容分离的一种标记性语言。Css是用来美化html实现的结构的</p><h1 id="css特点"><a class="markdownIt-Anchor" href="#css特点"></a> Css特点</h1><ul><li>CSS使页面载入更快</li><li>CSS可以降低网站的流量费用</li><li>CSS使设计师在修改设计时更有效率，而代价更低</li><li>CSS使整个站点保持视觉的一致性</li><li>CSS使站点可以更好地被搜索引擎找到</li><li>CSS使站点对浏览者和浏览器更具亲和力</li></ul><h1 id="参考手册-2"><a class="markdownIt-Anchor" href="#参考手册-2"></a> 参考手册</h1><p><a href="https://www.w3school.com.cn">这里</a></p><h1 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h1><p>css语法有三个部分组成：选择符、属性、属性值</p><blockquote><p>属性和属性值要用花括号包起来</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">selector</span>&#123;</span><br><span class="line">    <span class="attribute">property </span>: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>selector 选择器通常是您需要改变样式的html元素。</li><li>每条声明由一个属性(property)和一个属性值(vlaue)组成。</li><li>属性(property)是希望设置的央视属性(style attribute)。每个属性有一个属性值(value).</li><li>属性和属性值被冒号分开。</li><li>后面以分号结束。</li><li>花括号里面都是以小写去写。</li></ul><h1 id="css中的注释"><a class="markdownIt-Anchor" href="#css中的注释"></a> css中的注释</h1><p>不管是单行还是多行都是/* */</p><h1 id="引用方式"><a class="markdownIt-Anchor" href="#引用方式"></a> 引用方式</h1><p>css引用方式：行间样式、内部样式、外部样式、导入外部样式。</p><ul><li><h4 id="行间样式直接在标签上书写样式"><a class="markdownIt-Anchor" href="#行间样式直接在标签上书写样式"></a> 行间样式：直接在标签上书写样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> = <span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>css引用方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--行间样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color:olive;width:100px;border:1px solid blue;&quot;</span>&gt;</span>行间样式测试1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>行间样式测试2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--内部样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="内部样式写在head标签中"><a class="markdownIt-Anchor" href="#内部样式写在head标签中"></a> 内部样式：写在head标签中</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> = <span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>css引用方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--2.内部样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="xml"> 或者 <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span> = <span class="string">&quot;text/css&quot;</span>&gt;</span></span></span><br><span class="line">p&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#eeeeee</span>;</span></span><br><span class="line">font-size: 18px;</span><br><span class="line">font-style: italic;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="外部样式将其独立出来成一个文件用link标签引入"><a class="markdownIt-Anchor" href="#外部样式将其独立出来成一个文件用link标签引入"></a> 外部样式：将其独立出来成一个文件，用link标签引入</h4><ul><li>新建一个stylesheeat文件，扩展名为css</li><li>在head标签中用link <strong>(单标签)</strong> 标签将css文件引入html中</li><li>link标签最好放到style标签之前</li></ul></li><li><p>html文件中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> = <span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>css导入方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span> = <span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span> = <span class="string">&quot;text/css&quot;</span> <span class="attr">href</span> = <span class="string">&quot;test.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>外部导入样式测试<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>外部导入样式测试<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>外部导入样式测试<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>css文件中</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">font-size </span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">color </span>: red;</span><br><span class="line">    <span class="attribute">display </span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="导入外部样式独立出一个css文件用import标签导入"><a class="markdownIt-Anchor" href="#导入外部样式独立出一个css文件用import标签导入"></a> 导入外部样式：独立出一个css文件，用import标签导入</h4><ul><li>先创建一个css文件</li><li>在style标签中，用import标签导入css文件</li><li>html文件中</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> = <span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>导入外部样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="keyword">@import</span> <span class="string">&quot;test.css&quot;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">&quot;box&quot;</span>&gt;</span>导入外部样式<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">&quot;box&quot;</span>&gt;</span>导入外部样式<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">&quot;box&quot;</span>&gt;</span>导入外部样式<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span> <span class="attr">class</span> = <span class="string">&quot;box&quot;</span>&gt;</span>通四点零分<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>css文件中</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">font-weight </span>: bold;</span><br><span class="line"><span class="attribute">font-size </span>: <span class="number">16px</span>;</span><br><span class="line"><span class="attribute">color </span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="四种引用方式的区别"><a class="markdownIt-Anchor" href="#四种引用方式的区别"></a> 四种引用方式的区别</h4><ul><li>行间样式只作用于当前标签，而内部样式作用于当前文件，外部样式可以被多个html文件引用。</li><li>最好使用外部样式，实现结构</li></ul></li><li><h4 id="link和import区别"><a class="markdownIt-Anchor" href="#link和import区别"></a> link和import区别</h4><ul><li>link是XHTML标签，除了加载CSS外，还可以定义RSS等其他食物；@import属于CSS范畴，只能加载CSS。</li><li>link引入CSS是，在页面载入的同时加载；@import需要页面网页完全载入后加载。</li><li>link是XHTML标签，无兼容问题；@import是在CSS2.1上提出的，低版本的浏览器不支持。</li><li>link支持使用Javascript控制DOM去改变样式；而@import不支持。</li></ul></li><li><h4 id="如果样式发生冲突"><a class="markdownIt-Anchor" href="#如果样式发生冲突"></a> 如果样式发生冲突</h4><p>则优先级为: <strong>行内样式</strong> &gt; <strong>内嵌样式</strong> &gt; <strong>外部样式表</strong></p></li></ul><h1 id="选择符"><a class="markdownIt-Anchor" href="#选择符"></a> 选择符</h1><ul><li><p>选择符通常是 <strong>通配选择符</strong>、<strong>标记选择符</strong>、<strong>包含选择符</strong>、<strong>ID选择符</strong>、<strong>类选择符</strong> 和 <strong>选择符分组</strong>。</p></li><li><h4 id="通配选择符"><a class="markdownIt-Anchor" href="#通配选择符"></a> 通配选择符</h4><p>通配选择符的写法是&quot;*&quot;，其含义是所有元素。但一般性能不好</p></li><li><h4 id="标记选择符"><a class="markdownIt-Anchor" href="#标记选择符"></a> 标记选择符</h4><p>标记选择符即使用HTML中元素名称作为选择符，如body，p，div等。</p><p>每一种html标记的名称都可以作为相应的标记选择器的名称。</p></li><li><h4 id="包含选择符"><a class="markdownIt-Anchor" href="#包含选择符"></a> 包含选择符</h4><p>包含选择符的结果是同时选中各个基本选择符所选择的范围。任何形式的选择符（包括标记、class、id、选择符等等）都可以作为包含选择符的一部分。</p><p><strong>通过依据元素在其位置的上下问关系来定义样式</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">strong</span>&#123;</span><br><span class="line">    <span class="attribute">font-stylle </span>: italic;</span><br><span class="line">    <span class="attribute">font-weight </span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>我是斜体字，因为strong元素位于li元素内<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="id选择符"><a class="markdownIt-Anchor" href="#id选择符"></a> ID选择符</h4><p>写法如下：#name(名称唯一)</p><p>说明：ID选择符的语法格式是&quot;#&quot;加上自定义的ID名称。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#name&#123;</span><br><span class="line">font-size : 12px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>id选择器的使用方法与class选择器基本相同，不同指出在于 <strong>id选择器只能在HTML页面中使用一次</strong>，针对性更强。</li></ul></li><li><h4 id="id选择器与包含选择器"><a class="markdownIt-Anchor" href="#id选择器与包含选择器"></a> ID选择器与包含选择器</h4><p>在现代布局中，id选择器常常用于建立 <strong>包含选择器</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#sidebar</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">font-style </span>: italic;</span><br><span class="line">    <span class="attribute">text-align </span>: right;</span><br><span class="line">    <span class="attribute">margin-top </span>: <span class="number">0.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line">//id=&quot;sidebar&quot;的元素中的p标签的样式是这样设置的</span><br></pre></td></tr></table></figure></li><li><h4 id="类选择符"><a class="markdownIt-Anchor" href="#类选择符"></a> 类选择符</h4><p>写法如下：.name</p><p>类选择符的语法格式是&quot;.&quot;加上自定义的类名称。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.name</span>&#123;</span><br><span class="line">    <span class="attribute">font-size </span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line">//所有调用类名为name页面元素中，文本的字体大小为12个像素。名称不唯一，可通过定义相同的类名来调用同一个样式。</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.center&#123;</span><br><span class="line">text-align : center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span> = <span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    this heading will be center-aligned</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span> = <span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    this paragraph will also be center-aligned</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>类选择器与id选择器一样，class也可被用作 <strong>包含选择器</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.fancy</span> <span class="selector-tag">td</span>&#123;</span><br><span class="line">    <span class="attribute">color </span>: <span class="number">#f60</span>;</span><br><span class="line">    <span class="attribute">background </span>: <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line">//调用了这个类的元素中的td标签的样式为这样设置的</span><br></pre></td></tr></table></figure></li><li><h4 id="选择符分组"><a class="markdownIt-Anchor" href="#选择符分组"></a> 选择符分组</h4><p>当多个选择符应用相同的样式，可以将选择符用英文逗号分隔的方式，合并为一组。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>,<span class="selector-tag">div</span>,<span class="selector-tag">td</span>&#123;</span><br><span class="line">    <span class="attribute">text-align </span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="伪类和伪元素"><a class="markdownIt-Anchor" href="#伪类和伪元素"></a> 伪类和伪元素</h4><p>伪类和伪元素也是一种选择符，在页面元素中，用来定义超出结构所能标识的样式。伪类是能被支持CSS的浏览器自动识别的特殊选择符。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//语法结构如下:</span><br><span class="line">//选择符:伪类&#123;属性:属性值;&#125;</span><br><span class="line">//例: a:hover&#123;font-size : 12px;&#125;</span><br><span class="line">//说明:当鼠标讲过带有链接的文本上时，文本字体大小12像素。</span><br><span class="line">//伪类和伪元素的写法，一般以:开头，与类不同的是，伪类和伪元素在CSS中是指定的，不能随意的命名和定义。</span><br></pre></td></tr></table></figure></li><li><h4 id="伪类选择器"><a class="markdownIt-Anchor" href="#伪类选择器"></a> 伪类选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//锚伪类-链接的不同状态:未被访问状态、已被访问状态、鼠标悬停状态、活动状态</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">color </span>: <span class="number">#ff0000</span>;&#125; <span class="comment">/*unvisited link*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">color </span>: <span class="number">#00ff00</span>;&#125; <span class="comment">/*visited link*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color </span>: <span class="number">#ff00ff</span>;&#125; <span class="comment">/*mouse over link hover盘旋、靠近*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;<span class="attribute">color </span>: <span class="number">#0000ff</span>;&#125; <span class="comment">/*selected link*/</span></span><br></pre></td></tr></table></figure><blockquote><p>1.在css定义中，a:hover必须被置于a:link 和 a:visited之后，才是有效的</p><p>2.在css定义中，a:active 必须被置于a:hover 之后，才是有效的</p><p>3.伪类名称对大小写不敏感</p></blockquote></li><li><h4 id="css属性"><a class="markdownIt-Anchor" href="#css属性"></a> CSS属性</h4><p>​        常用的属性有:字体属性、文本属性、背景属性、定位属性、尺寸属性、布局属性、边界属性、边框属性、补白属性、列表项目属性、表格属性。</p><p>​其中，某些属性只有部分浏览器支持，这使得属性的应用变得相当的复杂，属性的知识和应用，是css的应用主体部分。</p></li><li><h4 id="css代码书写规范"><a class="markdownIt-Anchor" href="#css代码书写规范"></a> CSS代码书写规范</h4><ul><li><p>基本书写规范</p><p>建议先书写类型选择符和重复使用的样式，然后是伪类，最后是自定义的选择符。除了重复使用的选择符，其它选择符按照使用的先后书写，这样便于修改时查找。</p></li><li><p>命名参考</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/21/UFCDAxgoKjvzTtc.png" alt="" /></p></li><li><p>样式表书写顺序</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/21/izy9dp7wshOWVot.png" alt="" /></p></li></ul></li></ul><h1 id="css-border-属性设置"><a class="markdownIt-Anchor" href="#css-border-属性设置"></a> css border 属性设置</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span> = <span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">            div&#123;</span><br><span class="line"><span class="css">                <span class="selector-tag">border</span> : 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000000</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border</span> : 边框厚度 边框样式 边框颜色</span><br><span class="line">//写成border是设置边框的四个边为统一格式，也可以分开设置</span><br><span class="line">//border-top 上边框 border-bottom 下边框 border-left左边框 border-right 右边框</span><br><span class="line">//边框样式:</span><br><span class="line">//none : 无边框。与任何指定的border-width值无关</span><br><span class="line">//dotted : 点线</span><br><span class="line">//dashed : 虚线</span><br><span class="line">//solid : 实线</span><br><span class="line">//double : 双线边框</span><br></pre></td></tr></table></figure><blockquote><p>默认的边框颜色是元素本身的前景色。如果没有为边框声明颜色，它将与元素的文本颜色相同。另一方面，如果元素没有任何文本，假设它是一个表格，其中只包含图像，那么该表的边框颜色就是其父元素的文本颜色（因为 color 可以继承）。这个父元素很可能是 body、div 或另一个 table</p></blockquote><h1 id="css-margin-属性"><a class="markdownIt-Anchor" href="#css-margin-属性"></a> css margin 属性</h1><ul><li><p>margin属性设置外边距</p></li><li><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/mUZj3siSBoEtPFJ.png" alt="image.png" /></p></li><li><p>h1 {margin : 10px 0px 15px 5px;}</p><p>与内边距的设置相同，这些值的顺序是从上外边距 (top) 开始围着元素顺时针旋转的：</p><p>margin: top right bottom left</p></li><li><p>有时，我们会输入一些重复的值：</p><p>p {margin: 0.5em 1em 0.5em 1em;}</p><p>通过值复制，您可以不必重复地键入这对数字。上面的规则与下面的规则是等价的：</p><p>p {margin: 0.5em 1em;}</p><p>这两个值可以取代前面 4 个值。这是如何做到的呢？CSS 定义了一些规则，允许为外边距指定少于 4 个值。规则如下：</p><p>如果缺少左外边距的值，则使用右外边距的值。</p><p>如果缺少下外边距的值，则使用上外边距的值。</p><p>如果缺少右外边距的值，则使用上外边距的值。</p><p>下图提供了更直观的方法来了解这一点：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/A3Ft5sWijYXadOq.png" alt="image.png" /></p><p>换句话说，如果为外边距指定了 3 个值，则第 4 个值（即左外边距）会从第 2 个值（右外边距）复制得到。如果给定了两个值，第 4 个值会从第 2 个值复制得到，第 3 个值（下外边距）会从第 1 个值（上外边距）复制得到。最后一个情况，如果只给定一个值，那么其他 3 个外边距都由这个值（上外边距）复制得到。</p></li><li><p>一个规则中可以使用多个这种单边属性，例如：</p><p>h2 {<br />margin-top: 20px;<br />margin-right: 30px;<br />margin-bottom: 30px;<br />margin-left: 20px;<br />}</p></li></ul><p><a href="https://www.w3school.com.cn/cssref/index.asp">做完题来补笔记</a></p><h1 id="css-font-属性一定写在color属性前"><a class="markdownIt-Anchor" href="#css-font-属性一定写在color属性前"></a> css font 属性(一定写在color属性前)</h1><ul><li>可以按照顺序设置如下属性:<ul><li>font-style</li><li>font-variant</li><li>font-weight</li><li>font-size/line-height</li><li>font-family</li></ul></li></ul><h1 id="css-padding-属性"><a class="markdownIt-Anchor" href="#css-padding-属性"></a> css padding 属性</h1><ul><li>padding设置内边距</li></ul><h1 id="css-position属性"><a class="markdownIt-Anchor" href="#css-position属性"></a> css position属性</h1><ul><li>设置元素的定位方式</li><li><a href="https://www.w3school.com.cn/cssref/pr_class_position.asp">here</a></li></ul><h1 id="css设置div居中"><a class="markdownIt-Anchor" href="#css设置div居中"></a> css设置div居中</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">margin :0 auto;//居中</span><br><span class="line">text-align : center;//div中内容居中</span><br><span class="line">border : 1px solid;//设置边框厚度及边框样式</span><br><span class="line">width : 700px;//设置边框的宽度</span><br><span class="line">            height:200px;//设置边框的高度</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="css控制该区域内输出样式和代码一致"><a class="markdownIt-Anchor" href="#css控制该区域内输出样式和代码一致"></a> css控制该区域内输出样式和代码一致</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;white-space:pre&quot;; id = &quot;main&quot;&gt;</span><br><span class="line">//即保留该区域内的空格，回车等等</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h1 id="css-border-radius使用"><a class="markdownIt-Anchor" href="#css-border-radius使用"></a> css border-radius使用</h1><ul><li><p><a href="https://www.cnblogs.com/happymental/p/7891725.html">参考</a></p></li><li><p>通过设置元素的border-radius值，可以轻松给元素设置圆角边框，甚至实现绘制圆、半圆、四分之一的圆等各种圆角图形</p></li><li><p>三种使用方法：</p><ul><li>px</li><li>%</li><li>em</li></ul></li><li><p>只设置一个值，即给四个边框设置统一的值</p><ul><li><pre class="highlight"><code class="css"><span class="hljs-selector-tag">test1</span> &#123;    <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid red;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">30px</span>;&#125;&lt;!<span class="hljs-selector-tag">--hexoPostRenderEscape</span>:&lt;<span class="hljs-selector-tag">figure</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">highlight</span> <span class="hljs-selector-tag">plain</span>"&gt;&lt;<span class="hljs-selector-tag">table</span>&gt;&lt;<span class="hljs-selector-tag">tr</span>&gt;&lt;<span class="hljs-selector-tag">td</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">gutter</span>"&gt;&lt;<span class="hljs-selector-tag">pre</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;1&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;2&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;3&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;4&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;5&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;6&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;7&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;8&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;9&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;10&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;/<span class="hljs-selector-tag">pre</span>&gt;&lt;/<span class="hljs-selector-tag">td</span>&gt;&lt;<span class="hljs-selector-tag">td</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">code</span>"&gt;&lt;<span class="hljs-selector-tag">pre</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;  !<span class="hljs-selector-attr">[image.png]</span>(<span class="hljs-selector-tag">https</span>:&amp;<span class="hljs-selector-id">#x2F</span>;&amp;<span class="hljs-selector-id">#x2F</span>;<span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.loli</span><span class="hljs-selector-class">.net</span>&amp;<span class="hljs-selector-id">#x2F</span>;2020&amp;<span class="hljs-selector-id">#x2F</span>;11&amp;<span class="hljs-selector-id">#x2F</span>;04&amp;<span class="hljs-selector-id">#x2F</span>;<span class="hljs-selector-tag">dpNCuqaPhZQjG9Y</span><span class="hljs-selector-class">.png</span>)&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;* &amp;<span class="hljs-selector-id">#96</span>;&amp;<span class="hljs-selector-id">#96</span>;&amp;<span class="hljs-selector-id">#96</span>;<span class="hljs-selector-tag">css</span>&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;  <span class="hljs-selector-id">#test2</span> &amp;<span class="hljs-selector-id">#123</span>;&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;  　  <span class="hljs-selector-tag">border</span>: 3<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-tag">red</span>;&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;  　　 <span class="hljs-selector-tag">height</span>: 100<span class="hljs-selector-tag">px</span>;&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;  　　<span class="hljs-selector-tag">width</span>: 100<span class="hljs-selector-tag">px</span>;&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;  　　<span class="hljs-selector-tag">border-radius</span>: 53<span class="hljs-selector-tag">px</span>;&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;<span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">class</span>="<span class="hljs-selector-tag">line</span>"&gt;  &amp;<span class="hljs-selector-id">#125</span>;&lt;/<span class="hljs-selector-tag">span</span>&gt;&lt;<span class="hljs-selector-tag">br</span>&gt;&lt;/<span class="hljs-selector-tag">pre</span>&gt;&lt;/<span class="hljs-selector-tag">td</span>&gt;&lt;/<span class="hljs-selector-tag">tr</span>&gt;&lt;/<span class="hljs-selector-tag">table</span>&gt;&lt;/<span class="hljs-selector-tag">figure</span>&gt;<span class="hljs-selector-pseudo">:hexoPostRenderEscape--</span>&gt;!<span class="hljs-selector-attr">[image.png]</span>(<span class="hljs-selector-tag">https</span>://<span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.loli</span><span class="hljs-selector-class">.net</span>/2020/11/04/<span class="hljs-selector-tag">aweMGNOJQqnPTvy</span><span class="hljs-selector-class">.png</span>)</code></pre></li><li><p>还可以单独设置每个角上边框的值</p></li></ul></li><li><p>使用px表示数值的情况</p><ul><li><p>使用px的时候，圆角的弧度一般都是一个圆形的部分弧形</p><blockquote><p>假设一个长200px，高150px的div对象，设置它的border-radius的值为30px，那么实际呈现的圆角，其实就是一个以30px为半径的圆顶格放置在四个边角后所呈现的弧度</p></blockquote></li></ul></li><li><p>使用%表示数值的情况</p><ul><li>使用%来表示圆角值的时候，如果对象的宽和高是一样的，那判断方法与第一点一致，只不过想象的时候，需要将宽高乘以百分数换算一下</li><li>如果宽高不一致，那产生的效果，其实就是以对象的宽高乘以百分数后得到的值r1和r2，作为两条半径绘制出来的椭圆产生的弧度</li></ul></li></ul><h1 id="text-decoration属性"><a class="markdownIt-Anchor" href="#text-decoration属性"></a> text-decoration属性</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;<span class="attribute">text-decoration</span>:overline;&#125;</span><br><span class="line"><span class="selector-tag">h2</span>&#123;<span class="attribute">text-decoration</span>:line-through;&#125;</span><br><span class="line"><span class="selector-tag">h3</span>&#123;<span class="attribute">text-decoration</span>:underline;&#125;</span><br><span class="line"><span class="selector-tag">h4</span>&#123;<span class="attribute">text-decoration</span>:blink;&#125;</span><br></pre></td></tr></table></figure><ul><li>效果如下：</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/11/cLqpTCzktai8f1J.png" alt="image.png" /></p><h1 id="position-属性"><a class="markdownIt-Anchor" href="#position-属性"></a> position 属性</h1><p>关于CSS position，来自MDN的描述：</p><blockquote><p>CSS position属性用于指定一个元素在文档中的定位方式。top、right、bottom、left 属性则决定了该元素的最终位置。<br />然后来看看什么是文档流(normal flow)，下面是 <a href="https://www.w3.org/TR/CSS21/visuren.html#">www.w3.org</a> 的描述：<br /><strong>Normal flow</strong></p><p>Boxes in the normal flow belong to a formatting context, which may be block or inline, but not both simultaneously. <a href="https://www.w3.org/TR/CSS21/visuren.html#block-level">Block-level</a> boxes participate in a <a href="https://www.w3.org/TR/CSS21/visuren.html#block-formatting">block formatting</a> context. <a href="https://www.w3.org/TR/CSS21/visuren.html#inline-level">Inline-level boxes</a> participate in an <a href="https://www.w3.org/TR/CSS21/visuren.html#inline-formatting">inline formatting</a> context.</p></blockquote><p>个人补充（此处参考<a href="https://blog.csdn.net/fungleo">FungLeo</a>的博客文章，<a href="https://blog.csdn.net/fungleo/article/details/50056111">原文点此</a>）：</p><ol><li>normal flow直译为常规流、正常流，国内不知何原因大多译为文档流；</li><li>窗体自上而下分成一行一行，并在每行中按从左至右的顺序排放元素；</li><li>每个非浮动块级元素都独占一行， 浮动元素则按规定浮在行的一端，若当前行容不下，则另起新行再浮动；</li><li>内联元素也不会独占一行，几乎所有元素(包括块级，内联和列表元素）均可生成子行，用于摆放子元素；</li><li>有三种情况将使得元素脱离normal flow而存在，分别是 float，absolute ，fixed，但是在IE6中浮动元素也存在于normal flow中。</li></ol><h3 id="一-position-static"><a class="markdownIt-Anchor" href="#一-position-static"></a> 一、position: static</h3><p>MDN的描述：</p><blockquote><p>该关键字指定元素使用正常的布局行为，即元素在文档常规流中当前的布局位置。此时 top、right、bottom、left 属性无效。</p></blockquote><p>个人补充：static是position的默认值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS-position-static<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcss.com/normalize/8.0.0/normalize.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#868686</span>;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 300px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>&#123;</span></span><br><span class="line">            background-color: yellow;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            position: static;</span><br><span class="line"><span class="css">            <span class="selector-tag">left</span>: 10<span class="selector-tag">px</span>;<span class="comment">/* 这个left没有起作用 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/C2V8unlPwJsSOqp.png" alt="image.png" /></p><p>对 content 的 position 设定 static 后，left就失效了，而元素（content）就以正常的 normal flow 形式呈现。</p><h3 id="二-position-relative"><a class="markdownIt-Anchor" href="#二-position-relative"></a> 二、position: relative</h3><p>MDN的描述：</p><blockquote><p>该关键字下，元素先放置在未添加定位时的位置，再在不改变页面布局的前提下调整元素位置（因此会在此元素未添加定位时所在位置留下空白）。position:relative 对 table-*-group, table-row, table-column, table-cell, table-caption 元素无效。</p></blockquote><p>个人理解：相对于normal flow中的原位置来定位。</p><ul><li>position: relative</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/MsfKL9UjIkGoJg7.png" alt="image.png" /></p><p>这是没有设置left、top等属性时，正常出现在normal flow中的位置。</p><p>接着添加left、top：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content_1</span>&#123;</span><br><span class="line">                <span class="attribute">background-color</span>: red;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">                <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">                <span class="attribute">position</span>: relative;<span class="comment">/* 这里使用了relative  */</span></span><br><span class="line">                <span class="attribute">left</span>: <span class="number">20px</span>;<span class="comment">/* 这里设置了left和top */</span></span><br><span class="line">                <span class="attribute">top</span>: <span class="number">20px</span>;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/bNsuw7PgE1oMcYj.png" alt="image.png" /></p><p>可以看到，元素（content_1）的位置相对于其原位置（normal flow中的正常位置）进行了移动。</p><h3 id="三-position-absolute"><a class="markdownIt-Anchor" href="#三-position-absolute"></a> 三、position: absolute</h3><p>MDN的描述</p><blockquote><p>不为元素预留空间，通过指定元素相对于最近的非 static 定位祖先元素的偏移，来确定元素位置。绝对定位的元素可以设置外边距（margin），且不会与其他边距合并。</p></blockquote><p>个人理解：生成绝对定位的元素，其相对于 static 定位以外的第一个父元素进行定位,会脱离normal flow。<strong>注意：是除了static外</strong></p><ul><li>position: absolute</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/jP1gXywiFScLKCD.png" alt="image.png" /></p><p>因为 content 的父元素 container 没有设置 position，默认为 static，所以找到的第一个父元素是 body（&lt;body&gt;&lt;/body&gt;），可以看成是元素（content）相对于 body 向下移动10px。</p><h3 id="四-position-fixed"><a class="markdownIt-Anchor" href="#四-position-fixed"></a> 四、position: fixed</h3><p>MDN的描述</p><blockquote><p>不为元素预留空间，而是通过指定元素相对于屏幕视口（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变。打印时，元素会出现在的每页的固定位置。fixed属性会创建新的层叠上下文。当元素祖先的 transform 属性非 none 时，容器由视口改为该祖先。</p></blockquote><p>个人理解：fixed相对于window固定，滚动浏览器窗口并不会使其移动，会脱离normal flow。</p><ul><li>position: fixed</li></ul><p>这里就不上图了，看一下代码或者自己动手码一下就能理解。</p><h3 id="五-position-sticky"><a class="markdownIt-Anchor" href="#五-position-sticky"></a> 五、position: sticky</h3><p>MDN的描述</p><blockquote><p>盒位置根据正常流计算(这称为正常流动中的位置)，然后相对于该元素在流中的 flow root（BFC）和 containing block（最近的块级祖先元素）定位。在所有情况下（即便被定位元素为 table<code>时</code>），该元素定位均不对后续元素造成影响。当元素 B 被粘性定位时，后续元素的位置仍按照 B 未定位时的位置来确定。position: sticky对 table元素的效果与 position: relative 相同。</p></blockquote><p>因为各大浏览器对于sticky的兼容问题，而且JS也可以实现这个功能，在这里就不进行深入了，了解一下就好。</p><h3 id="六-position-inherit"><a class="markdownIt-Anchor" href="#六-position-inherit"></a> 六、position: inherit</h3><p><a href="http://www.w3school.com.cn/cssref/pr_class_position.asp">w3school.com</a>的 描述</p><blockquote><p>规定应该从父元素继承 position 属性的值。</p></blockquote><p>inherit 继承父元素，这个用得不多，所以也不继续深入了。</p><h1 id="keyframes-与-css-animation属性配合"><a class="markdownIt-Anchor" href="#keyframes-与-css-animation属性配合"></a> @keyframes 与 css animation属性配合</h1><ul><li><p>实例</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> mymove</span><br><span class="line">&#123;</span><br><span class="line"><span class="selector-tag">from</span> &#123;<span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span><br><span class="line"><span class="selector-tag">to</span> &#123;<span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*要在要移动的标签的css中加上animation属性*/</span></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">background</span>:red;</span><br><span class="line"><span class="attribute">position</span>:relative;</span><br><span class="line"><span class="attribute">animation</span>:mymove <span class="number">5s</span> infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>可以利用@keyframes实现动画播放效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#love1</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:300px</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line">position: relative;</span><br><span class="line"><span class="css"><span class="comment">/*bottom:1050px;*/</span></span></span><br><span class="line">animation: mymove 2s infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#love2</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">bottom</span><span class="selector-pseudo">:700px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:300px</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line">position: relative;</span><br><span class="line">animation: mymove 2s infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#love3</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">bottom</span><span class="selector-pseudo">:350px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:300px</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line">position: relative;</span><br><span class="line">animation: mymove 2s infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#love4</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:300px</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line">position: relative;</span><br><span class="line">animation: mymove 2s infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.l</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:30px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:30px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border-radius</span><span class="selector-pseudo">:50</span>%;</span></span><br><span class="line"><span class="css"><span class="selector-tag">left</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">position</span><span class="selector-pseudo">:absolute</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.r</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:30px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:30px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">position</span><span class="selector-pseudo">:absolute</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border-radius</span><span class="selector-pseudo">:50</span>%;</span></span><br><span class="line">right: 0px;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.z</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:30px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:30px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:translate(10px</span>,10<span class="selector-tag">px</span>) <span class="selector-tag">rotate</span>(45<span class="selector-tag">deg</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> mymove&#123;</span></span><br><span class="line">0%&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:scale(1)</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">50%&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:scale(1.5)</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">100%&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:scale(1)</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> mymove2&#123;</span></span><br><span class="line">from&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">left</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:scale(1)</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">to&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">left</span><span class="selector-pseudo">:-100px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:scale(1)</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;love4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;r&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;love3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;r&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;love2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;r&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;love1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;r&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).style.animation=<span class="string">&quot;mymove2 2s 1&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.setTimeout(<span class="string">&quot;next()&quot;</span>,<span class="number">2000</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.next=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).style.animation=<span class="string">&quot;mymove 2s infinite&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;love1&quot;</span>).style.left=<span class="string">&quot;-100px&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="transform-scale"><a class="markdownIt-Anchor" href="#transform-scale"></a> transform scale</h1><p><strong>scaleX()</strong></p><p><em><strong>*scaleY()*</strong></em></p><p>缩放该元素，&gt;1 放大， &lt;1 缩小 默认值是 1；</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/jBlNuJaeRgTO2c5.png" alt="image.png" /></p><p>看了上面的图，你可能会觉得，好像是100px 变成了200px  但是实际上，并不是。变的不是 元素的 宽高。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/b5hTr6NlHQFtqf7.png" alt="image.png" /></p><p>其实，他改变的不是元素的宽高，而是x 和 y 轴的刻度 ↓</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/piM4JYums9ra61L.png" alt="image.png" /></p><p><strong>scale()</strong></p><p>这个呢，是上面两个的合体，也就是 参数 第一个是x 第二个是y</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/gc4osJ2wRALIFmD.png" alt="image.png" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/19/h8DInViNWxuX35v.png" alt="image.png" /></p><p><strong>scale3d()</strong></p><p>第一个参数是 x 第二个参数是y 第三个参数是z ，也就是scalex scaley scalez 的结合体。</p><p>scalez吧，这个值原本就是3D的，所以可能会有点难理解， 像上面这个图， 本来就是2D 的图，你再怎么拉伸他的Z 轴，也是看不出效果的。前提是你的图，是3D的才能拉伸，2D的是拉伸不了的。 如果有不知道Z轴在哪里的朋友，请点这里→ <a href="https://www.cnblogs.com/yanggeng/p/11277199.html#Z"><br /></a></p><p><strong>探索：</strong></p><p>首先，我们来思考一个问题，使用 rotate进行旋转，那么 X 和 Y 轴是会跟着旋转而变化的，那么这个时候加上 scaleX 和 Y，那么旋转的过程中，会不会带上scale 的效果？</p><p>先来观察一下， 先rotate 再 scale 的效果：</p><p><a href="https://img2018.cnblogs.com/blog/1609428/201907/1609428-20190731163906364-1545153301.gif">看图</a></p><p>看完上面的图，是不是觉得，旋转的时候，会带着scale的效果一起旋转。 但是！ 如果把他俩位置换了，那结果是截然不同的，先scale 再 rotate</p><p><a href="https://img2018.cnblogs.com/blog/1609428/201907/1609428-20190731164301719-2014901299.gif">看图</a></p><p>对比两张图，你就会发现，第一张的效果，确实是带上了scale的效果一起旋转的，怎么 换了个位置，就不一样呢？</p><p>其实呢，先rotate，再scale(先旋转，后缩放) 是会把效果带上旋转的，但是 先scale 再rotate(先缩放，后旋转) 是不会把缩放的效果带上旋转的，缩放的效果，会留在原地，等你经过的时候，就会生效。看下面的图解，缩放的比例，会留在原地，经过的时候，就会恢复比例。</p><p><a href="https://img2018.cnblogs.com/blog/1609428/201907/1609428-20190731165325626-360527648.gif">看图</a></p><h1 id="display属性"><a class="markdownIt-Anchor" href="#display属性"></a> display属性</h1><ul><li>none为不显示</li><li>block为显示为块级别，后面带换行符</li></ul><p><a href="https://www.w3school.com.cn/cssref/pr_class_display.asp">补笔记</a></p><h1 id="css实现图片等比例缩放并居中"><a class="markdownIt-Anchor" href="#css实现图片等比例缩放并居中"></a> css实现图片等比例缩放并居中</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">220px</span>;</span><br><span class="line"><span class="attribute">margin</span>:<span class="number">250px</span> auto;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: center;</span><br><span class="line"><span class="attribute">align-items</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:auto;</span><br><span class="line"><span class="attribute">height</span>: auto;</span><br><span class="line"><span class="attribute">max-width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">max-height</span>: <span class="number">220px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_43258252/article/details/88895337">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>htmlStudy</title>
      <link href="/2020/09/13/htmlStudy/"/>
      <url>/2020/09/13/htmlStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="参考手册"><a class="markdownIt-Anchor" href="#参考手册"></a> <a href="https://www.w3school.com.cn/tags/index.asp">参考手册</a></h1><h1 id="标签分为双标签和单标签"><a class="markdownIt-Anchor" href="#标签分为双标签和单标签"></a> 标签分为双标签和单标签</h1><ul><li><h4 id="标题标签-双标签"><a class="markdownIt-Anchor" href="#标题标签-双标签"></a> 标题标签  双标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--h1到h6字体逐渐从大到小--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="段落标签-双标签-paragraph"><a class="markdownIt-Anchor" href="#段落标签-双标签-paragraph"></a> 段落标签  双标签 paragraph</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--段落之间的间隔比不是段落之间的间隔大--&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="水平线标签-单标签-hrizontal"><a class="markdownIt-Anchor" href="#水平线标签-单标签-hrizontal"></a> 水平线标签 单标签 hrizontal</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="换行标签-单标签-break"><a class="markdownIt-Anchor" href="#换行标签-单标签-break"></a> 换行标签 单标签 break</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="分块标签"><a class="markdownIt-Anchor" href="#分块标签"></a> 分块标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="字体效果标签"><a class="markdownIt-Anchor" href="#字体效果标签"></a> 字体效果标签</h4><ul><li><p>加粗 bold</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>斜体 italic</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>删除线</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span><span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span><span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>下划线</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span><span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="标签的属性统一格式-标签属性-属性值"><a class="markdownIt-Anchor" href="#标签的属性统一格式-标签属性-属性值"></a> 标签的属性统一格式: 标签属性 = “属性值”</h4></li><li><h4 id="图像标签-单标签-image"><a class="markdownIt-Anchor" href="#图像标签-单标签-image"></a> 图像标签 单标签 image</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">&quot;url&quot;</span> <span class="attr">alt</span> = <span class="string">&quot;&quot;</span> <span class="attr">title</span> = <span class="string">&quot;&quot;</span> <span class="attr">width</span> = <span class="string">&quot;&quot;</span> <span class="attr">height</span> = <span class="string">&quot;&quot;</span> <span class="attr">border</span> = <span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">src : 图片来源，可以是相对路径，也可以是绝对路径，但一般不推荐使用绝对路径</span></span><br><span class="line"><span class="comment">alt : 如果图片无法正常显示，则用这个文本替换它</span></span><br><span class="line"><span class="comment">title : 鼠标悬停在图片上时所显示的文本内容</span></span><br><span class="line"><span class="comment">width , height : 调整宽度和高度</span></span><br><span class="line"><span class="comment">border : 给图片添加边框</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="链接标签-双标签-anchor"><a class="markdownIt-Anchor" href="#链接标签-双标签-anchor"></a> 链接标签 双标签 anchor</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;跳转目标&quot;</span> <span class="attr">target</span> = <span class="string">&quot;_self&quot;</span>/&quot;<span class="attr">_blank</span>&quot;&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">href : 跳转的链接，跳转目标中要带上协议名称。</span></span><br><span class="line"><span class="comment">href = &quot;filename.html&quot;可以跳转到自己写的另一个页面</span></span><br><span class="line"><span class="comment">href = &quot;#&quot; 没有确定的跳转目标,表示回到顶部</span></span><br><span class="line"><span class="comment">target : _self是覆盖原来页面 _blank是用新标签页打开</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h5 id="href-url的作用"><a class="markdownIt-Anchor" href="#href-url的作用"></a> href =&quot;URL&quot;的作用</h5><ul><li><p>URL为绝对URL</p><p>指向另一个站点，点击后就会直接跳转到这个链接的页面</p></li><li><p>URL为相对URL</p><p>指向站点内的某个文件，比如<code>href=&quot;/test.doc&quot;</code> 那么点击时就会直接下载文件</p></li><li><p>锚URL</p><p>此时指向页面中的锚，比如<code>href=&quot;#top&quot;</code> 那么点击时就会到当前页面中<code>id=&quot;ttip&quot;</code> 的这个锚点，实现当前页面的所谓跳转。用的最多的就是在可滚动页面中，添加菜单，可以直接回到页面中的某个部分的内容。</p><p><code>href=&quot;#&quot;</code> 的时候就是回到顶部</p></li><li><h4 id="锚点链接-双标签-anchor"><a class="markdownIt-Anchor" href="#锚点链接-双标签-anchor"></a> 锚点链接 双标签 anchor</h4></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;#编号&quot;</span>&gt;</span>图像或文字<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--那个编号可以在别的标签中的id属性进行声明--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span> = <span class="string">&quot;编号&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">&quot;编号&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="base标签-单标签-设置统一打开方式为_blank"><a class="markdownIt-Anchor" href="#base标签-单标签-设置统一打开方式为_blank"></a> base标签 单标签 设置统一打开方式为&quot;_blank&quot;</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span> = <span class="string">&quot;_blank&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="特殊字符表示方式"><a class="markdownIt-Anchor" href="#特殊字符表示方式"></a> 特殊字符表示方式</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/13/K3cnB4lpohjNGMd.png" alt="特殊字符" /></p></li><li><h4 id="注释标签"><a class="markdownIt-Anchor" href="#注释标签"></a> 注释标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释内容--&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="列表标签-有序和无序和自定义-双标签"><a class="markdownIt-Anchor" href="#列表标签-有序和无序和自定义-双标签"></a> 列表标签 有序和无序和自定义 双标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        解释</span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        解释</span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="表格标签-双标签-table"><a class="markdownIt-Anchor" href="#表格标签-双标签-table"></a> 表格标签 双标签 table</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span> = <span class="string">&quot;&quot;</span> <span class="attr">height</span> = <span class="string">&quot;&quot;</span> <span class="attr">border</span> = <span class="string">&quot;&quot;</span> <span class="attr">cellspcing</span> = <span class="string">&quot;&quot;</span> <span class="attr">cellspadding</span> = <span class="string">&quot;&quot;</span> <span class="attr">align</span> = <span class="string">&quot;center/right/left&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">border:边框厚度</span></span><br><span class="line"><span class="comment">cellspacing:边框距离</span></span><br><span class="line"><span class="comment">cellspadding:文字距离左边框距离</span></span><br><span class="line"><span class="comment">align:表格的水平对齐方式，里面的文字还是在左边</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="comment">&lt;!--一行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="comment">&lt;!--一个单元格--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>把&lt;td&gt;&lt;/td&gt;换成&lt;th&gt;&lt;/th&gt;就会将文字居中并加粗</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span> <span class="comment">&lt;!--标识出这是表格关键字内容--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span> <span class="comment">&lt;!--标识出这是表格主体内容--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这个标题会随着表格一起移动--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--表格合并单元格,合并的顺序是从上到下，从左到右--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span> = <span class="string">&quot;合并的个数&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="comment">&lt;!--表示这个单元格所占的行数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span> = <span class="string">&quot;合并的个数&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="comment">&lt;!--表示这个单元格所占的列数--&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="表单标签-input空间-单标签"><a class="markdownIt-Anchor" href="#表单标签-input空间-单标签"></a> 表单标签 input空间 单标签</h4><ul><li>输入标签</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li><blockquote><p>注意reset按钮必须放在&lt;form&gt;&lt;/form&gt;中才起作用</p></blockquote></li><li><p>属性值</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/13/MTJ7Ddug2AtrwLG.png" alt="input空间属性值" /></p><ul><li>属性值还有hidden，将该输入标签隐藏，可以通过这个传递不想让用户修改的post数组内容</li></ul></li><li><p>文本框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>单选框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;radio&quot;</span> <span class="attr">name</span> = <span class="string">&quot;名字&quot;</span> /&gt;</span>选项内容1</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;radio&quot;</span> <span class="attr">name</span> = <span class="string">&quot;名字&quot;</span> <span class="attr">checked</span> = <span class="string">&quot;checked&quot;</span>/&gt;</span>选项内容2</span><br><span class="line"><span class="comment">&lt;!--同一个name的单选互斥,checked属性默认勾选这个选项--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>复选框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span> = <span class="string">&quot;名字&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--名字会在提交的时候用上--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>图片按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;image&quot;</span> <span class="attr">src</span> = <span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>input空间中的默认文本值，最大输入字数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;&quot;</span> <span class="attr">value</span> = <span class="string">&quot;&quot;</span> <span class="attr">maxlength</span> = <span class="string">&quot;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>上传文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;file&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="label标签-实现点击文字即可输入文本的效果"><a class="markdownIt-Anchor" href="#label标签-实现点击文字即可输入文本的效果"></a> label标签 实现点击文字即可输入文本的效果</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>输入:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span> = <span class="string">&quot;two&quot;</span>&gt;</span></span><br><span class="line">   输入:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">输入:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">id</span> = <span class="string">&quot;two&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="文本域标签-双标签"><a class="markdownIt-Anchor" href="#文本域标签-双标签"></a> 文本域标签 双标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">隐藏调节大小的按钮</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">style</span> = <span class="string">&quot;resize:none&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">用css的内容</span><br><span class="line"></span><br><span class="line">文本域不填写内容是空字符串&quot;&quot;，不是位null</span><br></pre></td></tr></table></figure></li><li><h4 id="下拉菜单-双标签-可用datalist代替使用"><a class="markdownIt-Anchor" href="#下拉菜单-双标签-可用datalist代替使用"></a> 下拉菜单 双标签 可用datalist代替使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span> = <span class="string">&quot;selected&quot;</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--默认选项--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="表单域"><a class="markdownIt-Anchor" href="#表单域"></a> 表单域</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;xxx.php&quot;</span> <span class="attr">metho</span> = <span class="string">&quot;post&quot;</span> <span class="attr">name</span> = <span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> /&gt;</span><span class="comment">&lt;!--等等--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">action:将数据提交到某某后台,此时提交和充值按钮都开始起作用</span></span><br><span class="line"><span class="comment">method:提交方式 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="html发展大概历史"><a class="markdownIt-Anchor" href="#html发展大概历史"></a> html发展大概历史</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/13/EkCtWfVA64lUK39.png" alt="" /></p></li></ul><h1 id="html5常用新标签"><a class="markdownIt-Anchor" href="#html5常用新标签"></a> html5常用新标签</h1><ul><li><h4 id="header-定义页眉-双标签"><a class="markdownIt-Anchor" href="#header-定义页眉-双标签"></a> header 定义页眉 双标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="导航栏-nav-双标签"><a class="markdownIt-Anchor" href="#导航栏-nav-双标签"></a> 导航栏 nav 双标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="页面底部-footer-双标签"><a class="markdownIt-Anchor" href="#页面底部-footer-双标签"></a> 页面底部 footer 双标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="定义文章-article-双标签"><a class="markdownIt-Anchor" href="#定义文章-article-双标签"></a> 定义文章 article 双标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="section-定义文章中的小节-区-块-双标签"><a class="markdownIt-Anchor" href="#section-定义文章中的小节-区-块-双标签"></a> section 定义文章中的小节、区、块 双标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="aside-定义侧边块-双标签"><a class="markdownIt-Anchor" href="#aside-定义侧边块-双标签"></a> aside 定义侧边块 双标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="datalist-定义选项列表与input元素配合使用可替代select"><a class="markdownIt-Anchor" href="#datalist-定义选项列表与input元素配合使用可替代select"></a> datalist 定义选项列表，与input元素配合使用，可替代select</h4><p>显示效果为输入某个字时，会提示已有结果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">value</span> = <span class="string">&quot;输入明星&quot;</span> <span class="attr">list</span> = <span class="string">&quot;star&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span> = <span class="string">&quot;star&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">option</span>&gt;</span>F</span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="fieldset元素可将表单内的相关元素分组打包与legend搭配使用"><a class="markdownIt-Anchor" href="#fieldset元素可将表单内的相关元素分组打包与legend搭配使用"></a> fieldset元素可将表单内的相关元素分组，打包与legend搭配使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">legend</span>&gt;</span></span><br><span class="line">        用户登录</span><br><span class="line">        用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span>/&gt;</span></span><br><span class="line">        密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="html5新增input属性"><a class="markdownIt-Anchor" href="#html5新增input属性"></a> html5新增input属性</h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/13/JcBowEYOzCfDjtV.png" alt="" /></p><ul><li><h4 id="type"><a class="markdownIt-Anchor" href="#type"></a> type</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    邮箱:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line">    手机:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;tel&quot;</span> /&gt;</span></span><br><span class="line">    数字:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;number&quot;</span> /&gt;</span></span><br><span class="line">    url:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;url&quot;</span> /&gt;</span></span><br><span class="line">    搜索:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;search&quot;</span> /&gt;</span></span><br><span class="line">    拖动滑块:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;range&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="时间属性"><a class="markdownIt-Anchor" href="#时间属性"></a> 时间属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    时间:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;time&quot;</span> /&gt;</span></span><br><span class="line">    date:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;date&quot;</span> /&gt;</span></span><br><span class="line">    datetime:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;datetime&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="搜索框默认文本默认内容输入又消失占位符"><a class="markdownIt-Anchor" href="#搜索框默认文本默认内容输入又消失占位符"></a> 搜索框默认文本默认内容，输入又消失，占位符</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span> = <span class="string">&quot;请输入&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="页面加载自动获得焦点即加载后光标自动选择"><a class="markdownIt-Anchor" href="#页面加载自动获得焦点即加载后光标自动选择"></a> 页面加载自动获得焦点，即加载后光标自动选择</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span> = <span class="string">&quot;请输入&quot;</span> <span class="attr">autofocus</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span> = <span class="string">&quot;请输入&quot;</span> <span class="attr">autofocus</span> = <span class="string">&quot;autofocus&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="上传多个文件"><a class="markdownIt-Anchor" href="#上传多个文件"></a> 上传多个文件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;file&quot;</span> <span class="attr">multiple</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;file&quot;</span> <span class="attr">multiple</span> = <span class="string">&quot;multiple&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="自动记录"><a class="markdownIt-Anchor" href="#自动记录"></a> 自动记录</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用自动记录，首先需要提交按钮，然后需要给表单name值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">autocomplete</span> <span class="attr">name</span> = <span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">autocomplete</span> = <span class="string">&quot;autocomplete&quot;</span> <span class="attr">name</span> = <span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">autocomplete</span> = <span class="string">&quot;on&quot;</span> <span class="attr">name</span> = <span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">autocomplete</span> = <span class="string">&quot;off&quot;</span> <span class="attr">name</span> = <span class="string">&quot;username&quot;</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!--关闭自动记录功能--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="必填项内容不为空"><a class="markdownIt-Anchor" href="#必填项内容不为空"></a> 必填项(内容不为空)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">required</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="accesskey自动跳转"><a class="markdownIt-Anchor" href="#accesskey自动跳转"></a> accesskey自动跳转</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;text&quot;</span> <span class="attr">accesskey</span> = <span class="string">&quot;s&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--按下alt + s 则自动跳转到这个文本框进行输入--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="多媒体标签"><a class="markdownIt-Anchor" href="#多媒体标签"></a> 多媒体标签</h1><ul><li><h4 id="插入音频"><a class="markdownIt-Anchor" href="#插入音频"></a> 插入音频</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span> = <span class="string">&quot;xxx.mp3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span> <span class="comment">&lt;!--不自动播放--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span> = <span class="string">&quot;xxx.mp3&quot;</span> <span class="attr">autoplay</span> = <span class="string">&quot;autoplay&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span><span class="comment">&lt;!--自动播放--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span> = <span class="string">&quot;xxx.mp3&quot;</span> <span class="attr">autoplay</span> = <span class="string">&quot;autoplay&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--显示控制组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span> = <span class="string">&quot;xxx.mp3&quot;</span> <span class="attr">loop</span> = <span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--loop = n循环唱n次 等于-1时，无限安循环--&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="为了不同浏览器的兼容上传两种格式"><a class="markdownIt-Anchor" href="#为了不同浏览器的兼容上传两种格式"></a> 为了不同浏览器的兼容，上传两种格式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">autoplay</span> = <span class="string">&quot;autoplay&quot;</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span> = <span class="string">&quot;xxx.mp3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span> = <span class="string">&quot;xxx.ogg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="插入小视频"><a class="markdownIt-Anchor" href="#插入小视频"></a> 插入小视频</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span> = <span class="string">&quot;xxx.mp4/xxx.ogg/xxx.WebM&quot;</span> <span class="attr">autoplay</span> <span class="attr">controls</span> <span class="attr">width</span> = <span class="string">&quot;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h4 id="为了不同浏览器的兼容"><a class="markdownIt-Anchor" href="#为了不同浏览器的兼容"></a> 为了不同浏览器的兼容</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span> <span class="attr">autoplay</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span> = <span class="string">&quot;xxx.mp4&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span> = <span class="string">&quot;xxx.ogg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="meta标签"><a class="markdownIt-Anchor" href="#meta标签"></a> meta标签</h1><ul><li><h4 id="meta标签没有结束标签"><a class="markdownIt-Anchor" href="#meta标签没有结束标签"></a> meta标签没有结束标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> = <span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拓扑排序加并查集</title>
      <link href="/2020/09/12/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%8A%A0%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
      <url>/2020/09/12/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%8A%A0%E5%B9%B6%E6%9F%A5%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="拓扑排序"><a class="markdownIt-Anchor" href="#拓扑排序"></a> 拓扑排序</h1><p>之前学过的</p><h4 id="代码如下"><a class="markdownIt-Anchor" href="#代码如下"></a> 代码如下</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 250000</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; head[MAX],ans; <span class="comment">//用邻接矩阵存储图</span></span><br><span class="line"><span class="built_in">priority_queue</span>&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt; q; <span class="comment">//选择入度为零的点时用优先级队列，小根堆</span></span><br><span class="line"><span class="keyword">int</span> n,m,in[MAX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">int</span> l,k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l,&amp;k);</span><br><span class="line">        head[l].push_back(k);</span><br><span class="line">        in[k]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(in[i]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            q.push(i);  <span class="comment">//选择入读为零的点</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> len = ans.size();</span><br><span class="line">    <span class="keyword">while</span>(!q.empty() &amp;&amp; len&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        ans.push_back(v);</span><br><span class="line">        <span class="keyword">int</span> tem = head[v].size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; tem;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            in[head[v][i]]--; <span class="comment">//删边</span></span><br><span class="line">            <span class="keyword">if</span>(in[head[v][i]]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                q.push(head[v][i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        len = ans.size();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(len == n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="chess-tournament并查集拓扑排序"><a class="markdownIt-Anchor" href="#chess-tournament并查集拓扑排序"></a> Chess Tournament(并查集+拓扑排序)</h1><h4 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h4><ul><li>给出 <em>N</em> 个选手的 <em>M</em> 种实力大小关系，问是否矛盾。N(2 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> N <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> 50000)，M(1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> M <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> 250000)</li></ul><h4 id="解题思路"><a class="markdownIt-Anchor" href="#解题思路"></a> 解题思路</h4><ul><li>若A &lt; B，连一条从B到A的边</li><li>若A &gt; B，连一条从A到B的边</li><li>若A = B，将A和B缩为一点</li><li>将M种关系放到有向图上，判断图种是否有环存在。缩点用并查集实现，判环可以用拓扑排序实现。</li></ul><blockquote><p>是先将等于关系的元素建立号并查集关系，然后将元素个数更新，同一并查集的点就当作一个点，然后对于某个具体元素的操作都是对其并查集根的操作。</p></blockquote><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 50002</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; head[MAX],ans;<span class="comment">//用vector二维数组存放这个图</span></span><br><span class="line"><span class="built_in">priority_queue</span>&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt; p;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">set</span>[MAX];</span><br><span class="line"><span class="keyword">int</span> in[MAX];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_find</span><span class="params">(<span class="keyword">int</span> a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_join</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br><span class="line"><span class="keyword">int</span> l[<span class="number">250005</span>],k[<span class="number">250005</span>],c[<span class="number">250004</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[MAX];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">int</span> an = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">set</span>[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        vis[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k[i]);</span><br><span class="line">        c[i] = getchar();</span><br><span class="line">        c[i] = getchar();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;l[i]);</span><br><span class="line">        <span class="keyword">if</span>(c[i]==<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            set_join(k[i],l[i]);<span class="comment">//将相等关系的点建立并查集</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tem;</span><br><span class="line">        <span class="keyword">if</span>(c[i] == <span class="string">&#x27;&gt;&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tem = set_find(l[i]);</span><br><span class="line">            head[set_find(k[i])].push_back(tem);<span class="comment">//直接对根操作，生成图</span></span><br><span class="line">            in[tem]++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c[i] == <span class="string">&#x27;&lt;&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tem = set_find(k[i]);</span><br><span class="line">            head[set_find(l[i])].push_back(tem);<span class="comment">//直接对根操作，生成图</span></span><br><span class="line">            in[tem]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(in[set_find(i)] ==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[set_find(i)] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            p.push(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">set</span>[i] == i)</span><br><span class="line">        &#123;</span><br><span class="line">            an++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> len = ans.size();</span><br><span class="line">    <span class="keyword">while</span>(!p.empty() &amp;&amp; len&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = p.top();</span><br><span class="line">        p.pop();</span><br><span class="line">        ans.push_back(v);</span><br><span class="line">        <span class="keyword">int</span> tem = head[v].size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; tem;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> tem1 = set_find(head[v][i]);</span><br><span class="line">            in[tem1]--;</span><br><span class="line">            <span class="keyword">if</span>(in[tem1] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p.push(tem1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        len = ans.size();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf(&quot;%d   %d&quot;,len,an);</span></span><br><span class="line">    <span class="keyword">if</span>(len == an)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;consistent&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;inconsistent&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_find</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">set</span>[a] == a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">set</span>[a] = set_find(<span class="built_in">set</span>[a]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_join</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a = set_find(a);</span><br><span class="line">    b = set_find(b);</span><br><span class="line">    <span class="keyword">if</span>(a != b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">set</span>[a] = b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 拓扑排序 </tag>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同余方程和同余方程组</title>
      <link href="/2020/09/03/%E5%90%8C%E4%BD%99%E6%96%B9%E7%A8%8B%E5%92%8C%E5%90%8C%E4%BD%99%E6%96%B9%E7%A8%8B%E7%BB%84/"/>
      <url>/2020/09/03/%E5%90%8C%E4%BD%99%E6%96%B9%E7%A8%8B%E5%92%8C%E5%90%8C%E4%BD%99%E6%96%B9%E7%A8%8B%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="同余的定义和性质"><a class="markdownIt-Anchor" href="#同余的定义和性质"></a> 同余的定义和性质</h1><ul><li><p>给出一个正整数m和两个整数a和b，如果((a-b) mod m) = 0，则称a和b模m同余，记为a≡b(mod m)。如果((a-b) mod m) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">≠</mi></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span></span></span></span> 0，则称a模m不同余于b。</p></li><li><p>例如，-7≡-3≡1≡5≡9(mod 4)，-5≡-1≡3≡7≡11(mod 4)，而7模5不同余于8。</p></li><li><h4 id="定理1"><a class="markdownIt-Anchor" href="#定理1"></a> 定理1</h4><ul><li>给出一个正整数m和两个整数a和b，((a-b) mod m) = 0当且仅当存在<strong>整数k</strong>，a = b + km。</li></ul></li><li><h4 id="定理2"><a class="markdownIt-Anchor" href="#定理2"></a> 定理2</h4><ul><li><p>在一个同余式两边同时做加法、减法或<strong>乘法</strong>，依然保持同余。</p></li><li><p>给出一个正整数m和三个整数a,b和c，a≡b(mod m)。则</p><ul><li>a + c ≡ b + c (mod m);</li><li>a - c ≡ b - c (mod m);</li><li>ac ≡ bc (mod m)。</li></ul></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/05/vohS8kqJ7NxOmnD.png" alt="证明" /></p><ul><li>在一个同余式两边同时除以一个整数并不一定保持同余。例如，10 ≡ 4 (mod 6)，但如果两边同时除以2，就不能保持同余。</li></ul></li><li><h4 id="定理3-利用cm的最大公约数"><a class="markdownIt-Anchor" href="#定理3-利用cm的最大公约数"></a> 定理3    利用c,m的最大公约数</h4><ul><li>给出一个正整数m和三个整数a，b和c，d = GCD(c,m),并且ac≡bc(mod m)。则a≡b(mod (m DIV d))。2</li><li>证明：如果ac≡bc(m+od m)，则c(a-b) mod m = 0，即存在<strong>整数k</strong>，使得c(a-b)=km。所以 c(a-b) DIV d = km DIV d。因为GCD(c DIV d，m DIV d) = 1，所以((a - b) mod (m DIV d) )= 0，则a ≡ b(mod (m DIV d))。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/05/T1fcSQjEl2Hopqi.png" alt="证明" /></p><ul><li>例如，给出一个正整数m = 4和三个整数a = 3,b = 1和c = 6, GCD(c,m) = GCD(6 , 4) = 2，并且6 * 3 = 6 * 1(mod 4)。则3 ≡ 1(mod 2)。</li></ul></li><li><h4 id="推论1"><a class="markdownIt-Anchor" href="#推论1"></a> 推论1</h4><ul><li>给出一个正整数m和三个整数a,b和c，GCD(c,m) = 1，并且ac ≡ bc (mod m)。则a ≡ b(mod m)。</li><li>例如，给出一个正整数m = 3和三个整数 a = 4, b = 7和c = 2，GCD(c,m) = GCD(2,3) = 1，并且4 * 2 = 7 * 2(mod 3)。则4 ≡ 7(mod 3)。</li></ul></li><li><h4 id="推论2"><a class="markdownIt-Anchor" href="#推论2"></a> 推论2</h4><ul><li>给出一个正整数d和两个整数a和b，如果ad ≡ bd (mod md)，则a ≡ b(mod m)。</li><li>如上面的例子，10 ≡ 4 (mod 6)，但如果两边同时除以2，就不能保持同余；但5 ≡ 2 (mod 3)。</li></ul></li><li><h4 id="同余类"><a class="markdownIt-Anchor" href="#同余类"></a> 同余类</h4><ul><li>给出一个整数集Z和一个正整数m，模m同余满足自反性，对称性和传递性。所以Z可以被划分为<strong>m个不相交的子集</strong>[0,m-1]，这些子集被称为模m的同余类，每个同余类中任意两个整数都是模m同余的。</li><li>自反性：a≡a(mod m)</li><li>对称性：a≡b(mod m)   则  b≡a(mod m)</li><li>传递性：a≡b(mod m)   且  b≡c(mod m)  则  a≡c(mod m)</li></ul></li><li><h4 id="由同余理论模运算规则如下"><a class="markdownIt-Anchor" href="#由同余理论模运算规则如下"></a> 由同余理论，模运算规则如下</h4><ul><li>(a + b) % p = (a % p + b % p) % p</li><li>(a - b) % p = (a % p - b % p) % p</li><li>(a * b) % p = (a % p * b % p) % p</li><li>(a^b) % p = ((a%p)^b) % p</li></ul><blockquote><p>注意这里出发不能拆开进行模运算，而且指数运算中指数不能模p</p></blockquote></li><li><h4 id="结合律"><a class="markdownIt-Anchor" href="#结合律"></a> 结合律</h4><ul><li>((a+b)%p+c)%p = (a+(b+c)%p)%p</li><li>((a*b)%p*c)%p = (a*(b*c)%p)%p</li></ul></li><li><h4 id="分配律"><a class="markdownIt-Anchor" href="#分配律"></a> 分配律</h4><ul><li>((a+b)%p*c)%p = ((a*c)%p+(b*c)%p)%p</li></ul></li></ul><h1 id="raising-modulo-numberspoj-1995"><a class="markdownIt-Anchor" href="#raising-modulo-numberspoj-1995"></a> Raising Modulo Numbers(POJ 1995)</h1><ul><li><h4 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h4><p>给出n对数字A<sub>i</sub>和B<sub>i</sub>，1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> i <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> n；以及一个整数M。请您求解(A<sub>1</sub><sup>B<sub>1</sub></sup>+A<sub>2</sub><sup>B<sub>2</sub></sup>+…+A<sub>n</sub><sup>B<sub>n</sub></sup>)mod M。</p></li><li><h4 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h4><p>输入包含Z个测试用例，在输入的第一行给出正整数Z。接下来给出每个测试用例。每个测试用例的第一行给出整数M(1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> M <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> 45000)。总和将除以这个数取余数；接下来的一行给出数字的堆数H(1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> H <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> 45000)；接下来的H行，在每一行给出两个被空格隔开的数字A<sub>i</sub>和B<sub>i</sub>，这两个数字不能同时等于零。</p></li><li><h4 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h4><p>对于每一个测试用例，输出一行，式表达式(A<sub>1</sub><sup>B<sub>1</sub></sup>+A<sub>2</sub><sup>B<sub>2</sub></sup>+…+A<sub>n</sub><sup>B<sub>n</sub></sup>)mod M的结果。</p></li><li><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">poo</span><span class="params">(<span class="keyword">int</span> A,<span class="keyword">int</span> B)</span></span>;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;z);</span><br><span class="line">    <span class="keyword">int</span> A,B;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= z;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;h);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= h;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;A,&amp;B);</span><br><span class="line">            ans = (ans+poo(A,B))%m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">poo</span><span class="params">(<span class="keyword">int</span> A,<span class="keyword">int</span> B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= B;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = (ans*A)%m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这样写思路是对的，但是TLE了，就是那个A<sup>B</sup>太费时间，这里顺便学习了一下快速幂的原理</p></blockquote><h1 id="快速幂"><a class="markdownIt-Anchor" href="#快速幂"></a> 快速幂</h1><ul><li><h4 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/09/05/3oursR56nB1lXey.png" alt="" /></p></li><li><h4 id="代码模为m"><a class="markdownIt-Anchor" href="#代码模为m"></a> 代码(模为m)</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fastPower</span><span class="params">(<span class="keyword">int</span> base,<span class="keyword">int</span> power)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(power &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(power % <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            power -= <span class="number">1</span>;</span><br><span class="line">            ans = (ans * (base%m))%m;</span><br><span class="line">        &#125;</span><br><span class="line">        power /= <span class="number">2</span>;</span><br><span class="line">        base = (base%m)*(base%m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="使用位运算优化代码位运算更快"><a class="markdownIt-Anchor" href="#使用位运算优化代码位运算更快"></a> 使用位运算优化代码(位运算更快)</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fastPower</span><span class="params">(<span class="keyword">int</span> base,<span class="keyword">int</span> power)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(power &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((power &amp; <span class="number">1</span>) == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            power -= <span class="number">1</span>;</span><br><span class="line">            ans = (ans * (base%m))%m;</span><br><span class="line">        &#125;</span><br><span class="line">        power = power&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        base = (base%m)*(base%m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="使用快速幂的poj-1995"><a class="markdownIt-Anchor" href="#使用快速幂的poj-1995"></a> 使用快速幂的POJ 1995</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">poo</span><span class="params">(<span class="keyword">int</span> A,<span class="keyword">int</span> B)</span></span>;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;z);</span><br><span class="line">    <span class="keyword">int</span> A,B;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= z;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;h);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= h;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;A,&amp;B);</span><br><span class="line">            ans = (ans+poo(A,B))%m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">poo</span><span class="params">(<span class="keyword">int</span> A,<span class="keyword">int</span> B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(power &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((power &amp; <span class="number">1</span>) == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            power -= <span class="number">1</span>;</span><br><span class="line">            ans = (ans * (base%m))%m;</span><br><span class="line">        &#125;</span><br><span class="line">        power = power&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        base = (base%m)*(base%m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="一元线性同余方程"><a class="markdownIt-Anchor" href="#一元线性同余方程"></a> 一元线性同余方程</h1><ul><li><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4><p>形如ax ≡ b(mod m)的同余式被称为一元线性同余方程，其中a和b是整数，m是正整数，x未知整数。</p></li><li><h4 id="定理1-2"><a class="markdownIt-Anchor" href="#定理1-2"></a> 定理1</h4><p>设a和b是整数，m是正整数，且GCD(a,m)=d。如果b mod d <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">≠</mi></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span></span></span></span> 0，则 ax ≡ b(mod m)无解；如果b mod d = 0，则ax ≡ b(mod m)恰有d个模m不同余的解。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 同余方程 </tag>
            
            <tag> 快速幂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProblemIFullDepthMorningShow</title>
      <link href="/2020/08/31/ProblemIFullDepthMorningShow/"/>
      <url>/2020/08/31/ProblemIFullDepthMorningShow/</url>
      
        <content type="html"><![CDATA[<ul><li><h4 id="尝试用了dijkstratle了还没做完"><a class="markdownIt-Anchor" href="#尝试用了dijkstratle了还没做完"></a> 尝试用了Dijkstra，TLE了（还没做完）</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005*2  <span class="comment">//因为这里是无向图，添加边的时候会添加两次，注意这里，不然会RE</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">int</span> next;</span><br><span class="line">&#125;E[MAX];</span><br><span class="line"><span class="keyword">int</span> head[MAX];</span><br><span class="line">ll dist[MAX];</span><br><span class="line"><span class="keyword">bool</span> exi[MAX];</span><br><span class="line"><span class="keyword">int</span> siz = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">priority_queue</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;,<span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;,greater&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; &gt;p;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> sta)</span></span>;</span><br><span class="line">ll t[MAX/<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,sta;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> from,to,val;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;t[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n<span class="number">-1</span>;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;from,&amp;to,&amp;val);</span><br><span class="line">        addEdge(from,to,val);</span><br><span class="line">        addEdge(to,from,val);</span><br><span class="line">    &#125;</span><br><span class="line">    ll sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(sta = <span class="number">1</span>;sta &lt;= n;sta ++)</span><br><span class="line">    &#123;</span><br><span class="line">        Dijkstra(sta);</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==sta)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum = sum + dist[i]*(t[sta]+t[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sta&lt;n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    siz++;<span class="comment">//计数，记录是第几条边</span></span><br><span class="line">    E[siz].to = to;</span><br><span class="line">    E[siz].len = val;</span><br><span class="line">    E[siz].next = head[from];</span><br><span class="line">    head[from] = siz;    <span class="comment">//以from为起点的边形成了一个链表，在Dijkstra函数里面遍历时就是根据这个链表进行遍历的。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> sta)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; MAX;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        exi[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> A = sta;</span><br><span class="line">    dist[A] = <span class="number">0</span>; <span class="comment">//注意别忘了这一句</span></span><br><span class="line">    p.push(<span class="built_in">make_pair</span>(<span class="number">0</span>,A));</span><br><span class="line">    <span class="keyword">while</span>(!p.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> V = p.top().second; <span class="comment">//取出现在权值最小的边的点</span></span><br><span class="line">        p.pop();</span><br><span class="line">        <span class="keyword">if</span>(exi[V])&#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        exi[V] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = head[V];i &gt; <span class="number">0</span>;i = E[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dist[V]+E[i].len&lt;dist[E[i].to])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[E[i].to] = dist[V] + E[i].len;</span><br><span class="line">                p.push(<span class="built_in">make_pair</span>(dist[E[i].to],E[i].to));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><h4 id="上网查后用的是二次扫描加换根法"><a class="markdownIt-Anchor" href="#上网查后用的是二次扫描加换根法"></a> 上网查后用的是二次扫描加换根法</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> t[MAX];</span><br><span class="line"><span class="keyword">int</span> de[MAX];</span><br><span class="line"><span class="keyword">int</span> si[MAX],sit[MAX];</span><br><span class="line">ll si_lu[MAX],si_ye[MAX];</span><br><span class="line">ll ans[MAX];</span><br><span class="line">ll sum = <span class="number">0</span>; <span class="comment">//统计所有节点的权值和</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,ll&gt; &gt; ve[MAX];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> fa,<span class="keyword">int</span> u)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> fa,<span class="keyword">int</span> u)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mian</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t[i]);</span><br><span class="line">        sum += t[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> x,y,z;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        ve[x].push_back(<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,ll&gt;&#123;y,z&#125;);</span><br><span class="line">        ve[y].push_back(<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,ll&gt;&#123;x,z&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs1(<span class="number">0</span>,<span class="number">1</span>); <span class="comment">//进行第一次dfs 找出以 1 为根节点的所有相关数据</span></span><br><span class="line">    dfs2(<span class="number">0</span>,<span class="number">1</span>); <span class="comment">//求答案</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> fa,<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:ve[u])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = i.first;</span><br><span class="line">        ll y = i.second;</span><br><span class="line">        <span class="keyword">if</span>(x != fa)</span><br><span class="line">        &#123;</span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> fa,<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019NCNARegionalContest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Dijkstra算法</title>
      <link href="/2020/08/29/Dijkstra%E7%AE%97%E6%B3%95/"/>
      <url>/2020/08/29/Dijkstra%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<ul><li><h4 id="dijkstra算法的使用条件"><a class="markdownIt-Anchor" href="#dijkstra算法的使用条件"></a> Dijkstra算法的使用条件</h4><p>该算法的条件是该图所有边的权值非负，而且式<strong>无环</strong>图。</p></li><li><h4 id="基本做法邻接表"><a class="markdownIt-Anchor" href="#基本做法邻接表"></a> 基本做法(邻接表)</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> GWeight[<span class="number">2000</span>][<span class="number">2000</span>];  <span class="comment">//int二维数组不能开太大。</span></span><br><span class="line"><span class="keyword">int</span> path[MAX];   <span class="comment">//记录最短路径一次经过的点</span></span><br><span class="line"><span class="keyword">bool</span> exi[MAX];   <span class="comment">//记录各个点是否已经存在的状态</span></span><br><span class="line"><span class="keyword">int</span> dist[MAX];   <span class="comment">//记录起点到各个点断最短距离</span></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> start)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(GWeight,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(GWeight));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= MAX;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        exi[i] = <span class="literal">false</span>;</span><br><span class="line">        dist[i] = INF;</span><br><span class="line">        path[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> start = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">int</span> tem1,tem2;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;tem1,&amp;tem2);</span><br><span class="line">        GWeight[tem1][tem2] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(tem1 == start)</span><br><span class="line">        &#123;</span><br><span class="line">            dist[tem2] = <span class="number">1</span>;</span><br><span class="line">            path[tem2] = tem1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Dijkstra(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,dist[n]<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dist[start] = <span class="number">0</span>;</span><br><span class="line">    exi[start] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> mindis;</span><br><span class="line">    <span class="keyword">int</span> nextV;</span><br><span class="line">    <span class="keyword">int</span> oldV = start;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        nextV = oldV;</span><br><span class="line">        mindis = INF;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!exi[i]&amp;&amp;dist[i]&lt;mindis)</span><br><span class="line">            &#123;</span><br><span class="line">                nextV = i;</span><br><span class="line">                mindis = dist[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nextV == oldV)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        exi[nextV] = <span class="literal">true</span>;</span><br><span class="line">        oldV = nextV;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!exi[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> tem = dist[nextV]+GWeight[nextV][i];</span><br><span class="line">                <span class="keyword">if</span>(tem&lt;dist[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    dist[i] = tem;</span><br><span class="line">                    path[i] = nextV;   <span class="comment">//记录的是起点</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="在竞赛题中用邻接表做的话肯定会超时"><a class="markdownIt-Anchor" href="#在竞赛题中用邻接表做的话肯定会超时"></a> 在竞赛题中用邻接表做的话肯定会超时</h4></li><li><h4 id="堆优化使用优先级队列优先级队列是个堆有向图"><a class="markdownIt-Anchor" href="#堆优化使用优先级队列优先级队列是个堆有向图"></a> 堆优化(使用优先级队列，优先级队列是个堆)(有向图)</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">int</span> next;</span><br><span class="line">&#125;E[MAX];</span><br><span class="line"><span class="keyword">int</span> head[MAX],dist[MAX];</span><br><span class="line"><span class="keyword">bool</span> exi[MAX];<span class="keyword">int</span> siz = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">priority_queue</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;,<span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;,greater&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; &gt;p; <span class="comment">//greater&lt;&gt; 是小根堆</span></span><br><span class="line"><span class="comment">//元素基本类型是pair&lt;int,int&gt;对，装这些元素的容器时vector，优先级的排序方式为小根堆</span></span><br><span class="line"><span class="comment">//优先级队列的内部实现方式为堆</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> sta)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; MAX;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        exi[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">int</span> sta;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;sta);</span><br><span class="line">    <span class="keyword">int</span> from,to,val;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;from,&amp;to,&amp;val);</span><br><span class="line">        <span class="keyword">if</span>(from!=to)    <span class="comment">//避免出现自环</span></span><br><span class="line">        &#123;</span><br><span class="line">            addedge(from,to,val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Dijkstra(sta);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,dist[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    siz++;</span><br><span class="line">    E[i].to = to;</span><br><span class="line">    E[i].len = val;</span><br><span class="line">    E[i].next = head[from];</span><br><span class="line">    head[from] = siz;<span class="comment">//对应着第几条边</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//每个点作为起点时，head都是从零开始，然后记录是录入的第几条边</span></span><br><span class="line"><span class="comment">//如果后面还有以该点为起点的边，那么就将新的边的next记录为当前的</span></span><br><span class="line"><span class="comment">//边数，所以在选定一个点为起点的时候，就根据这个进行遍历，不断更新</span></span><br><span class="line"><span class="comment">//各个dist值。然后由优先级队列自动选出最小的值。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> sta)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> A = sta;</span><br><span class="line">    dist[A] = <span class="number">0</span>;</span><br><span class="line">    p.push(<span class="built_in">make_pair</span>(<span class="number">0</span>,A));</span><br><span class="line">    <span class="keyword">while</span>(!p.empty())  <span class="comment">//此时只有一个孤立的点，和别的点都不连通</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> V = p.top().second;</span><br><span class="line">        p.pop();</span><br><span class="line">        <span class="keyword">if</span>(exi[V])&#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        exi[V] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = head[V];i&gt;<span class="number">0</span>;i = E[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dist[i]+E[i].len &lt; dist[E[i].to])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[E[i].to] = dist[i] + E[i].len;</span><br><span class="line">                p.push(<span class="built_in">make_pair</span>(dist[E[i].to],E[i].to));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="堆优化的dijkstra算法这里使用优先级队列无向图"><a class="markdownIt-Anchor" href="#堆优化的dijkstra算法这里使用优先级队列无向图"></a> 堆优化的Dijkstra算法(这里使用优先级队列)(无向图)</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005*2  <span class="comment">//因为这里是无向图，添加边的时候会添加两次，注意这里，不然会RE</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">int</span> next;</span><br><span class="line">&#125;E[MAX];</span><br><span class="line"><span class="keyword">int</span> dist[MAX],head[MAX];</span><br><span class="line"><span class="keyword">bool</span> exi[MAX];</span><br><span class="line"><span class="keyword">int</span> siz = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">priority_queue</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;,<span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;,greater&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; &gt;p;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> sta)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; MAX;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        exi[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n,m,sta;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    sta = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> from,to,val;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;=m;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;from,&amp;to);</span><br><span class="line">        val = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(from != to) <span class="comment">//避免出现自环</span></span><br><span class="line">        &#123;</span><br><span class="line">            addEdge(from,to,val);</span><br><span class="line">        addEdge(to,from,val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Dijkstra(sta);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,dist[n]<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    siz++;<span class="comment">//计数，记录是第几条边</span></span><br><span class="line">    E[siz].to = to;</span><br><span class="line">    E[siz].len = val;</span><br><span class="line">    E[siz].next = head[from];</span><br><span class="line">    head[from] = siz;    <span class="comment">//以from为起点的边形成了一个链表，在Dijkstra函数里面遍历时就是根据这个链表进行遍历的。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> sta)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> A = sta;</span><br><span class="line">    dist[A] = <span class="number">0</span>; <span class="comment">//注意别忘了这一句</span></span><br><span class="line">    p.push(<span class="built_in">make_pair</span>(<span class="number">0</span>,A));</span><br><span class="line">    <span class="keyword">while</span>(!p.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> V = p.top().second; <span class="comment">//取出现在权值最小的边的点</span></span><br><span class="line">        p.pop();</span><br><span class="line">        <span class="keyword">if</span>(exi[V])&#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        exi[V] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = head[V];i &gt; <span class="number">0</span>;i = E[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dist[V]+E[i].len&lt;dist[E[i].to])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[E[i].to] = dist[V] + E[i].len;</span><br><span class="line">                p.push(<span class="built_in">make_pair</span>(dist[E[i].to],E[i].to));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dijkstra算法 </tag>
            
            <tag> 单源最短路径 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProblemHColor</title>
      <link href="/2020/08/28/ProblemHColor/"/>
      <url>/2020/08/28/ProblemHColor/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ncna19.kattis.com/problems/onaveragetheyrepurple">点这里</a></p><ul><li><h4 id="这道是dijkstra算法无向图的模板题答案即为1到n的最短路径长度减1"><a class="markdownIt-Anchor" href="#这道是dijkstra算法无向图的模板题答案即为1到n的最短路径长度减1"></a> 这道是Dijkstra算法无向图的模板题，答案即为1到N的最短路径长度减1</h4></li><li><h4 id="使用堆优化的dijkstra算法"><a class="markdownIt-Anchor" href="#使用堆优化的dijkstra算法"></a> 使用堆优化的Dijkstra算法</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005*2  <span class="comment">//因为这里是无向图，添加边的时候会添加两次，注意这里，不然会RE</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">int</span> next;</span><br><span class="line">&#125;E[MAX];</span><br><span class="line"><span class="keyword">int</span> dist[MAX],head[MAX];</span><br><span class="line"><span class="keyword">bool</span> exi[MAX];</span><br><span class="line"><span class="keyword">int</span> siz = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">priority_queue</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;,<span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;,greater&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; &gt;p;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> sta)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; MAX;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        exi[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n,m,sta;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    sta = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> from,to,val;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;=m;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;from,&amp;to);</span><br><span class="line">        val = <span class="number">1</span>;</span><br><span class="line">        addEdge(from,to,val);</span><br><span class="line">        addEdge(to,from,val);</span><br><span class="line">    &#125;</span><br><span class="line">    Dijkstra(sta);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,dist[n]<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    siz++;<span class="comment">//计数，记录是第几条边</span></span><br><span class="line">    E[siz].to = to;</span><br><span class="line">    E[siz].len = val;</span><br><span class="line">    E[siz].next = head[from];</span><br><span class="line">    head[from] = siz;    <span class="comment">//以from为起点的边形成了一个链表，在Dijkstra函数里面遍历时就是根据这个链表进行遍历的。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> sta)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> A = sta;</span><br><span class="line">    dist[A] = <span class="number">0</span>; <span class="comment">//注意别忘了这一句</span></span><br><span class="line">    p.push(<span class="built_in">make_pair</span>(<span class="number">0</span>,A));</span><br><span class="line">    <span class="keyword">while</span>(!p.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> V = p.top().second; <span class="comment">//取出现在权值最小的边的点</span></span><br><span class="line">        p.pop();</span><br><span class="line">        <span class="keyword">if</span>(exi[V])&#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        exi[V] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = head[V];i &gt; <span class="number">0</span>;i = E[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dist[V]+E[i].len&lt;dist[E[i].to])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[E[i].to] = dist[V] + E[i].len;</span><br><span class="line">                p.push(<span class="built_in">make_pair</span>(dist[E[i].to],E[i].to));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019NCNARegionalContest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dijkstra算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProblemFWeight</title>
      <link href="/2020/08/28/ProblemFWeight/"/>
      <url>/2020/08/28/ProblemFWeight/</url>
      
        <content type="html"><![CDATA[<p>(点这里)[<a href="https://ncna19.kattis.com/problems/pullingtheirweight">https://ncna19.kattis.com/problems/pullingtheirweight</a>]</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> wei[N];</span><br><span class="line">ll sum[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;wei[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(wei+<span class="number">1</span>,wei+n+<span class="number">1</span>,less&lt;<span class="keyword">int</span>&gt;()); <span class="comment">//按照升序排列</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum[i] = wei[i] + sum[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//int lef = wei[1];</span></span><br><span class="line">    <span class="keyword">int</span> lef = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//int rig = wei[n];</span></span><br><span class="line">    <span class="keyword">int</span> rig = <span class="number">20000</span>;</span><br><span class="line">    <span class="keyword">int</span> mid;</span><br><span class="line">    <span class="keyword">int</span> tem1,tem2;</span><br><span class="line">    ll wei1,wei2;</span><br><span class="line">    <span class="keyword">while</span>(lef &lt;= rig)</span><br><span class="line">    &#123;</span><br><span class="line">        mid = (lef+rig)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        tem1 = lower_bound(wei+<span class="number">1</span>,wei+n+<span class="number">1</span>,mid)-wei; <span class="comment">//第一个大于等于mid的数组元素的下标，确保减一后的一定是小于mid的。</span></span><br><span class="line">        tem2 = upper_bound(wei+<span class="number">1</span>,wei+n+<span class="number">1</span>,mid)-wei; <span class="comment">//第一个大于mid的数组元素</span></span><br><span class="line">        wei1 = sum[tem1<span class="number">-1</span>] - sum[<span class="number">0</span>];</span><br><span class="line">        wei2 = sum[n] - sum[tem2<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(wei1==wei2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(mid == wei[tem1])  <span class="comment">//如果mid为数组中的一个数，那么输出这个</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,mid);</span><br><span class="line">            &#125;<span class="keyword">else</span>       <span class="comment">//如果mid不是，那么取满足条件的最小值即小于mid的数组中的那个数字加一。</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,wei[tem1<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(wei1&lt;wei2)</span><br><span class="line">            &#123;</span><br><span class="line">                lef = mid+<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                rig = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019NCNARegionalContest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ProblemJBlackAndWhite</title>
      <link href="/2020/08/28/ProblemJBlackAndWhite/"/>
      <url>/2020/08/28/ProblemJBlackAndWhite/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ncna19.kattis.com/problems/thisaintyourgrandpascheckerboard">点这里</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> grid[<span class="number">26</span>][<span class="number">26</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> wnumr = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> wnumc = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,grid[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        wnumr = wnumc = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j ++) <span class="comment">//既当行也当列</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(grid[i][j] == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                wnumr++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(grid[j][i] == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                wnumc++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j+<span class="number">2</span> &lt; n;j ++) <span class="comment">//既当行也当列</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(grid[i][j]==grid[i][j+<span class="number">1</span>]&amp;&amp;grid[i][j+<span class="number">1</span>]==grid[i][j+<span class="number">2</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                ans = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(grid[j][i]==grid[j+<span class="number">1</span>][i]&amp;&amp;grid[j+<span class="number">1</span>][i]==grid[j+<span class="number">2</span>][i])</span><br><span class="line">            &#123;</span><br><span class="line">                ans = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(wnumr+wnumr!=n||wnumc+wnumc!=n) <span class="comment">//判断数量是否相等</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>就遍历就可以了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 2019NCNARegionalContest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ProblemDSomeSum</title>
      <link href="/2020/08/27/ProblemDSomeSum/"/>
      <url>/2020/08/27/ProblemDSomeSum/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ncna19.kattis.com/problems/somesum">点这里</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tem = n / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(tem%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Even&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Odd&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Either&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>当n==2时，和一定是奇数。所以如果n是偶数，则判断是2的几倍，然后对应的就是奇数和偶数。如果n是奇数，那么和的奇偶性是步确定的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 2019NCNARegionalContest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>用树结构支持并查集</title>
      <link href="/2020/08/12/%E7%94%A8%E6%A0%91%E7%BB%93%E6%9E%84%E6%94%AF%E6%8C%81%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
      <url>/2020/08/12/%E7%94%A8%E6%A0%91%E7%BB%93%E6%9E%84%E6%94%AF%E6%8C%81%E5%B9%B6%E6%9F%A5%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="并查集"><a class="markdownIt-Anchor" href="#并查集"></a> 并查集</h1><ul><li><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4><p>在一些应用中，需要把n个不同元素划分成不相交的若干组，每 一组的元素构成</p><p>一个集合，由于这类问题主要涉及对集合的合并和查找，因此称为并查集</p></li><li><h4 id="并查集的三种操作"><a class="markdownIt-Anchor" href="#并查集的三种操作"></a> 并查集的三种操作</h4><ul><li><strong>Make_Set(x)</strong>:加入一个含单元素x的集合{x}到并查集S，且rep[{x}] = x。<ul><li>x不能被包含在任何一个S<sub>i</sub>中，因为S里任何两个集合是不相交的。</li><li>初始时，对每个元素x执行一次Make_Set(x)。</li></ul></li><li><strong>join(x,y)</strong>:把x和y所在的两个不同集合S<sub>x</sub>和S<sub>y</sub>合并:从S中删除S<sub>x</sub>和S<sub>y</sub>，并加入S<sub>x</sub>和S<sub>y</sub>。</li><li><strong>set_find(x)</strong>:返回x所在的集合S<sub>x</sub>的代表元rep[S<sub>x</sub>]。</li></ul></li></ul><h1 id="并查集的表示"><a class="markdownIt-Anchor" href="#并查集的表示"></a> 并查集的表示</h1><ul><li><p>用链表表示</p><p>每个集合用双向链表表示，代表元rep[S<sub>i</sub>]在链表的首部，集合中的每个节点除前后指针外，增加一个指向代表元rep[S<sub>i</sub>]的指针，如图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/12/tWNrLE7MGvzXqUT.png" alt="" /></p></li><li><p>用树结构表示</p><p>每个集合用一颗树表示，根为集合的代表元。每个节点p设一个指针set[p]，记录它所在树的根节点序号。如果set[p]&lt;0，则表明p为根节点。初始时，为每个元素建立一个集合，即set[x]=-1(1<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span>x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span>n)。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/12/DEQYqRNCGd5M8rZ.png" alt="" /></p></li></ul><h1 id="树结构的查找操作set_findx"><a class="markdownIt-Anchor" href="#树结构的查找操作set_findx"></a> 树结构的查找操作set_find(x)</h1><ul><li><h4 id="边查找边路径压缩"><a class="markdownIt-Anchor" href="#边查找边路径压缩"></a> 边查找边路径压缩</h4><ul><li><p>首先，从节点x出发，沿set指针查找节点x所在树的根节点f（set[f]&lt;0）。</p></li><li><p>然后，进行路径压缩，将x至f的路径上经过的每个节点的set指针都指向f。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/12/JhMw8D3HpjRSCQy.png" alt="" /></p></li></ul></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_find</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">set</span>[p] == p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">set</span>[p] = set_find(<span class="built_in">set</span>[p]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="路径压缩的目的"><a class="markdownIt-Anchor" href="#路径压缩的目的"></a> 路径压缩的目的</h4><p>是为了当大多数节点的父亲直接就是根，这样再去查询的时候就会很快了。并查集对每个集合内部的具体结构没有要求，所以就可以修改树的结构。</p></li></ul><h1 id="并查集更通俗的解释"><a class="markdownIt-Anchor" href="#并查集更通俗的解释"></a> 并查集更通俗的解释</h1><p>话说江湖上散落着各式各样的大侠，有上千个之多。他们没有什么正当职业，整天背着剑在外面走来走去，碰到和自己不是一路人的，就免不了要打一架。但大侠们有一个长处就是讲义气，绝对不打自己的朋友，并且他们信奉“朋友的朋友就是我的朋友”。仅仅要是能通过朋友关系串联起来的。不管拐了多少个弯，都觉得是自己人。这样一来，江湖上就形成了一个一个的群落。通过两两之间的朋友关系串联起来。</p><p>而不在同一个群落的人，不管怎样都无法通过朋友关系连起来。于是就能够放心往死了打。可是两个原本互不相识的人。怎样推断是否属于一个朋友圈呢？</p><p>我们能够在每一个朋友圈内推举出一个比較有名望的人，作为该圈子的代表人物。这样，每一个圈子就能够这样命名“齐达内朋友之队”“罗纳尔多朋友之队“······两人仅仅要互相对一下自己的队长是不是同一个人，就能够确定敌友关系了。</p><p>可是还有问题啊，大侠们仅仅知道自己直接的朋友是谁，非常多人压根就不认识队长，要推断自己的队长是谁。仅能通过朋友的朋友关系问下去：“你是不是队长？你是不是队长？”。这样一来，队长面子上挂不住了，并且效率太低，还有可能陷入无限循环中。</p><p>于是队长下令，又一次组队。队内全部人实行分等级制度，形成树状结构，我队长就是根节点，以下各自是二级队员、三级队员。</p><p>每一个人仅仅要记住自己的上级是谁即可了。遇到推断敌友的时候。仅仅要一层层向上问。直到最高层，就能够在短时间内确定队长是谁了。因为我们关心的仅仅是两个人之间是否连通，至于他们是如何连通的，以及每一个圈子内部的结构是如何的。甚至队长是谁，并不重要。所以我们能够放任队长任意又一次组队，仅仅要不搞错敌友关系就好了。于是，门派产生了。</p><p>建立门派的过程是用merge函数两个人两个人地连接起来的，谁当谁的手下全然随机。最后的树状结构会变成什么样也全然无法估计。一字长蛇阵也有可能。这样查找的效率就会比较低下。最理想的情况就是全部人的直接上级都是掌门，一共就两级结构，仅仅要找一次就找到掌门了。</p><p>哪怕不能全然做到，也最好尽量接近。</p><p>这样就产生了路径压缩算法。</p><p>设想这样一个场景：两个互不相识的大侠碰面了，想知道能不能揍。 于是赶紧打电话问自己的上级：“你是不是掌门？” 上级说：“我不是呀，我的上级是谁谁谁。你问问他看看。” 一路问下去。原来两人的终于boss都是东厂曹公公。 “哎呀呀，原来是自己人，失礼失礼，在下三营六组白面葫芦娃!” “幸会幸会，在下九营十八组狗尾巴花仙子！</p><p>” 两人高高兴兴地手拉手喝酒去了。 “等等等等。两位大侠请留步，还有事情没完毕呢！</p><p>“哦，对了，还要做路径压缩。”两人醒悟。</p><p>白面葫芦娃打电话给他的上级六组长：“组长啊。我查过了。其习我们的掌门是曹公公。</p><p>不如我们一起直接拜在曹公公手下吧。省得以后查找掌门麻环。</p><p>” ，“唔。有道理。” 白面葫芦娃接着打电话给刚才拜访过的三营长……仙子狗尾巴花也做了相同的事情。</p><p>这样，查询中全部涉及到的人物都聚集在曹公公的直接领导下。每次查询都做了优化处理，所以整个门派树的层数都会维持在比较低的水平上。</p><h1 id="树结构合并操作joinxy"><a class="markdownIt-Anchor" href="#树结构合并操作joinxy"></a> 树结构合并操作join(x,y)</h1><ul><li><h4 id="将两棵树的根节点相连"><a class="markdownIt-Anchor" href="#将两棵树的根节点相连"></a> 将两棵树的根节点相连</h4><p>计算x元素所在并查集的树根fx和y元素所在并查集的树根fy。如果fx == fy，则说明元素x和元素y在同一并查集中；否则将x所在的元素并入y所在的集合，也就是将fx的set指针设为fy。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/12/b4oxLvErKTwuQmO.png" alt="image.png" /></p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p = set_find(p);</span><br><span class="line">    q = set_find(q);</span><br><span class="line">    <span class="keyword">if</span>(p!=q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">set</span>[p] = q;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="find-themcatch-thempoj-1703"><a class="markdownIt-Anchor" href="#find-themcatch-thempoj-1703"></a> Find them,Catch them(POJ 1703)</h1><ul><li><h4 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h4><ul><li>Tadu市的警察局决定结束混乱，因此要采取行动，根除城市中的两大帮派：龙帮和蛇帮。然而，警方首先需要确定某个罪犯是属于哪个帮派。目前的问题是，给出两个罪犯，他们是属于同一个帮派吗？您要基于不完全的信息给出您的判断，因为歹徒总是在暗中行事。</li><li>假设在Tadu市现在有N（N≤10<sup>5</sup>）个罪犯，编号从1到N。当然，至少有 一个罪犯属于龙帮，也至少有一个罪犯属于蛇帮。给出M（M≤10<sup>5</sup>）条消息组成的序列，消息有下列两种形式：</li><li>1.D[a][b]</li><li>其中[a]和[b]是两个犯罪分子的编号，他们属于不同的帮派；</li><li>2.A[a][b]</li><li>其中[a][b]是两个犯罪分子的编号，您要确定a和b是否属于同一帮派。</li></ul></li><li><h4 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h4><p>输入的第一行给出给出一个整数T（1<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span>T$\leq$20），表示测试用例的个数。后面跟着T个测试用，每个测试用例的第一行给出两个整数N和M，后面的M行每行给出一条如上面所描述的消息</p></li><li><h4 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h4><p>对于在测试用例中的每条“A [a] [b]”消息，您的程序要基于此前给出的信息做出判断。回答是如下之一“In the same gang.”，“In different gangs.”或“Not sure yet.“</p></li><li><h4 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/13/zwHRODT5mZlByqb.png" alt="分析" /></p></li><li><h4 id="错误代码"><a class="markdownIt-Anchor" href="#错误代码"></a> 错误代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N2 100001</span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">set</span>[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_find</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_join</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">set</span>[N2] = N2;</span><br><span class="line">    <span class="built_in">set</span>[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">int</span> p1,p2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= t;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">set</span>[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;p1,&amp;p2);</span><br><span class="line">            <span class="keyword">int</span> tem1 = set_find(p1);</span><br><span class="line">            <span class="keyword">int</span> tem2 = set_find(p2);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(str,<span class="string">&quot;A&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(p1==p2)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;In the same gang.\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(tem1 ==p1 || tem2 == p2)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Not sure yet.\n&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(tem1 == tem2)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;In the same gang.\n&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;In different gangs.\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(tem1!=p1 || tem2!=p2)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(tem1==p1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        set_join(N2-tem2,p1);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(tem2==<span class="number">54</span>p2)</span><br><span class="line">                    &#123;</span><br><span class="line">                        set_join(N2-tem1,p2);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    set_join(<span class="number">0</span>,p1);</span><br><span class="line">                    set_join(N2,p2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">set</span>[x]==x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">set</span>[x] = set_find(<span class="built_in">set</span>[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_join</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fa = set_find(a);</span><br><span class="line">    <span class="keyword">int</span> fb = set_find(b);</span><br><span class="line">    <span class="keyword">if</span>(fa!=fb)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">set</span>[b] = a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><h4 id="错误原因"><a class="markdownIt-Anchor" href="#错误原因"></a> 错误原因</h4></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/13/hrSeBFnzDkyW1Lc.png" alt="错误原因" /></p><ul><li><h4 id="正确代码"><a class="markdownIt-Anchor" href="#正确代码"></a> 正确代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">set</span>[N*<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_find</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">same</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">int</span> n,m,p1,p2;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= t;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= <span class="number">2</span>*n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">set</span>[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;p1,&amp;p2);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(str,<span class="string">&quot;A&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(same(p1,p2)||same(p1+n,p2+n))   <span class="comment">//也可以只判断(same(p1,p2))</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;In the same gang.\n&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(same(p1+n,p2)||same(p1,p2+n))<span class="comment">//也可以只判断(same(p1+n,p2))</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;In different gangs.\n&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Not sure yet.\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                set_join(p1+n,p2);</span><br><span class="line">                set_join(p1,p2+n);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">set</span>[x] == x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">set</span>[x] = set_find(<span class="built_in">set</span>[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x = set_find(x);</span><br><span class="line">    y = set_find(y);</span><br><span class="line">    <span class="keyword">if</span>(x!=y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">set</span>[x] = y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">same</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tem1 = set_find(x);</span><br><span class="line">    <span class="keyword">int</span> tem2 = set_find(y);</span><br><span class="line">    <span class="keyword">return</span> tem1==tem2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="cube-stackingpoj-1988"><a class="markdownIt-Anchor" href="#cube-stackingpoj-1988"></a> Cube Stacking(POJ 1988)</h1><ul><li><h4 id="题目描述-2"><a class="markdownIt-Anchor" href="#题目描述-2"></a> 题目描述</h4><ul><li>农夫John和Betsy在玩一个游戏，有<em>N</em>(1<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span><em>N</em>$\leq<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>30</mn><mo separator="true">,</mo><mn>000</mn><mo stretchy="false">)</mo><mi mathvariant="normal">块</mi><mi mathvariant="normal">相</mi><mi mathvariant="normal">同</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">立</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">标</mi><mi mathvariant="normal">记</mi><mi mathvariant="normal">从</mi><mn>1</mn><mi mathvariant="normal">到</mi><mo>∗</mo><mi>N</mi><mo>∗</mo><mi mathvariant="normal">。</mi><mi mathvariant="normal">开</mi><mi mathvariant="normal">始</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">是</mi><mo>∗</mo><mi>N</mi><mo>∗</mo><mi mathvariant="normal">个</mi><mi mathvariant="normal">栈</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">每</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">栈</mi><mi mathvariant="normal">只</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">立</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">体</mi><mi mathvariant="normal">。</mi><mi mathvariant="normal">农</mi><mi mathvariant="normal">夫</mi><mi>J</mi><mi>o</mi><mi>h</mi><mi>n</mi><mi mathvariant="normal">请</mi><mi>B</mi><mi>e</mi><mi>t</mi><mi>s</mi><mi>y</mi><mi mathvariant="normal">执</mi><mi mathvariant="normal">行</mi><mo>∗</mo><mi>P</mi><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">30,000)块相同的立方，标记从1到*N*。开始时是*N*个栈，每个栈只有一个立方体。农夫John请Betsy执行*P*(1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">立</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">从</span><span class="mord">1</span><span class="mord cjk_fallback">到</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">是</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">栈</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">栈</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">立</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">体</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">农</span><span class="mord cjk_fallback">夫</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mord mathdefault">o</span><span class="mord mathdefault">h</span><span class="mord mathdefault">n</span><span class="mord cjk_fallback">请</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">执</span><span class="mord cjk_fallback">行</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span></span></span></span>\leq<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo><mi>P</mi><mo>∗</mo></mrow><annotation encoding="application/x-tex">*P*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord">∗</span></span></span></span>\leq$100,000)个操作，有两类操作：move和count。</li><li>在一个move操作中，农夫John请Bessy将包含立方体<em>X</em>的栈移到包含立方体<em>Y</em>的栈的栈顶。</li><li>在一个count操作中，农夫John请Bessy计算包含立方体<em>X</em>的栈中在<em>X</em><strong>下</strong>的立方体个数，并返回值。</li><li>请您编写一个程序返回游戏结果。</li></ul></li><li><h4 id="输入-2"><a class="markdownIt-Anchor" href="#输入-2"></a> 输入</h4><ul><li>第1行：一个整数p</li><li>第2…p+1行：每行给出一个合法的操作，第2行给出第一个操作，以此类推。每行开始时以’M’表示一个move操作，或以’C’表示一个count操作。对move操作，这一行还给出两个整数：x和y；对count操作，这一行给出一个整数：X。</li><li>在输入文件中N的值不出现。Move操作不会要求一个栈移到它自己的上面。</li></ul></li><li><h4 id="输出-2"><a class="markdownIt-Anchor" href="#输出-2"></a> 输出</h4><p>按输入文件中的次序输出每一个count操作的结果。</p></li><li><h4 id="题目分析"><a class="markdownIt-Anchor" href="#题目分析"></a> 题目分析</h4></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/13/Y2WRsJkB4FziPmN.png" alt="分析" /></p><ul><li><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 30004</span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">set</span>[N];</span><br><span class="line"><span class="keyword">int</span> num[N];</span><br><span class="line"><span class="keyword">int</span> top[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_find</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span>&amp; ans)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">set</span>[i] = i;  <span class="comment">//栈底为自己</span></span><br><span class="line">        top[i] = i;  <span class="comment">//栈顶为自己</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> p;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p);</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> p1,p2;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= p;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(str,<span class="string">&quot;M&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;p1,&amp;p2);</span><br><span class="line">            set_join(p1,p2);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p1);</span><br><span class="line">            set_find(p1,ans);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_find</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> &amp;ans)</span> <span class="comment">//ans是该元素下元素的个数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">set</span>[x] == x)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">set</span>[x] = set_find(<span class="built_in">set</span>[x],ans);<span class="comment">//路径压缩</span></span><br><span class="line">    ans += num[x]; <span class="comment">//num数组是当前元素距离父节点的距离，根的num值为0</span></span><br><span class="line">    num[x] = ans;  <span class="comment">//路径压缩后更新num值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">set</span>[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    x = set_find(x,ans);</span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    y = set_find(y,ans); <span class="comment">//统一通过栈底来访问栈顶，所以先找到栈底，然后再获得y所在堆的高度。</span></span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    y = set_find(top[y],ans);</span><br><span class="line">    <span class="keyword">if</span>(x!=y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">set</span>[x] = y;      <span class="comment">//合并两个栈</span></span><br><span class="line">        top[y] = top[x]; <span class="comment">//修改y所在栈的栈顶</span></span><br><span class="line">        num[x] = ans+<span class="number">1</span>;  <span class="comment">//修改x所在栈的栈底的num[]值为距离根的距离，也即距离父节点的距离</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="食物链poj-1182"><a class="markdownIt-Anchor" href="#食物链poj-1182"></a> 食物链(POJ 1182)</h1><ul><li><h4 id="题目描述-3"><a class="markdownIt-Anchor" href="#题目描述-3"></a> 题目描述</h4><ul><li>动物王国中有三类动物A,B,C,这三类动物的食物链构成了有趣的环形：A吃B，B吃C，C吃A。</li><li>现有N个动物，以1~N编号。每个动物都是A,B,C中的一种，但是我们并不直到它到底是哪一种。</li><li>有人用两种说法对这N个动物所构成的食物链关系进行描述：</li><li>第一种说法是&quot;1 X Y&quot;，表示X和Y是同类。</li><li>第二种说法是&quot;2 X Y&quot;，表示X吃Y。</li><li>此人对N个动物，用上述两种说法，一句接一句地说出K句话，这K句话有的是真的，有的是假的。当一句话满足下列三条之一时，这句话就是假话，否则就是真话。</li><li><ol><li>当前的话与前面的某些真的话冲突，就是假话；</li></ol></li><li><ol start="2"><li>当前的话中X或Y比N大，就是假话；</li></ol></li><li><ol start="3"><li>当前的话表示X吃X，就是假话。</li></ol></li><li>你的任务是根据给定的N（1<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span>N$\leq<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>50000</mn><mi mathvariant="normal">）</mi><mi mathvariant="normal">和</mi><mi>K</mi><mi mathvariant="normal">句</mi><mi mathvariant="normal">话</mi><mi mathvariant="normal">（</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">50000）和K句话（0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">和</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord cjk_fallback">句</span><span class="mord cjk_fallback">话</span><span class="mord cjk_fallback">（</span><span class="mord">0</span></span></span></span>\leq<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>\leq$100000），输出假话的总数。</li></ul></li><li><h4 id="输入-3"><a class="markdownIt-Anchor" href="#输入-3"></a> 输入</h4><ul><li>第一行是两个整数N和K，以一个空格分隔。</li><li>一下K行每行是三个正整数D，X，Y，两数之间用一个空格隔开，其中D表示说法的种类。</li><li>若D = 1,则表示X和Y是同类。</li><li>若D = 2,则表示X吃Y。</li></ul></li><li><h4 id="输出-3"><a class="markdownIt-Anchor" href="#输出-3"></a> 输出</h4><p>只有一个整数，表示假话的数目。</p></li><li><h4 id="题目分析-2"><a class="markdownIt-Anchor" href="#题目分析-2"></a> 题目分析</h4></li><li><h4 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 高级数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程中节省时间的技巧</title>
      <link href="/2020/08/11/%E7%BC%96%E7%A8%8B%E4%B8%AD%E8%8A%82%E7%9C%81%E6%97%B6%E9%97%B4%E7%9A%84%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/08/11/%E7%BC%96%E7%A8%8B%E4%B8%AD%E8%8A%82%E7%9C%81%E6%97%B6%E9%97%B4%E7%9A%84%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="从hdu4080中学习到的点"><a class="markdownIt-Anchor" href="#从hdu4080中学习到的点"></a> 从HDU4080中学习到的点</h1><ul><li><pre class="highlight"><code class="cpp"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i &lt;= lenstr - mid;i ++)&#123;    tem = has[i+mid] - has[i]*mi[mid];    mapint[tem]++;    <span class="hljs-keyword">if</span>(mapint[tem]&gt;=m)    &#123;        ans = i;    &#125;&#125;&lt;!--hexoPostRenderEscape:&lt;figure <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">highlight</span> <span class="hljs-title">plain</span>"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre&gt;&lt;span class="line"&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="line"&gt;&amp;<span class="hljs-title">gt</span>;</span> 这里注意那个mapint[tem]++; 应该合并到<span class="hljs-keyword">if</span>语句中，改后代码如下。&lt;/span&gt;&lt;br&gt;&lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">line</span>"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&amp;#96;</span>&amp;#<span class="hljs-number">96</span>;&amp;#<span class="hljs-number">96</span>;<span class="hljs-function">cpp&lt;/span&gt;&lt;br&gt;&lt;span class</span>=<span class="hljs-string">"line"</span>&gt;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i &amp;#x3D; <span class="hljs-number">0</span>;i &amp;lt;&amp;#x3D; lenstr - mid;i ++)&lt;/span&gt;&lt;br&gt;&lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">line</span>"&gt;&amp;#123;</span>&lt;/span&gt;&lt;br&gt;&lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">line</span>"&gt;    <span class="hljs-title">tem</span> &amp;#<span class="hljs-title">x3D</span>;</span> has[i+mid] - has[i]*mi[mid];&lt;/span&gt;&lt;br&gt;&lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">line</span>"&gt;    <span class="hljs-title">if</span>(++<span class="hljs-title">mapint</span>[<span class="hljs-title">tem</span>]&amp;<span class="hljs-title">gt</span>;</span>&amp;#x3D;m)&lt;/span&gt;&lt;br&gt;&lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">line</span>"&gt;    &amp;#123;</span>&lt;/span&gt;&lt;br&gt;&lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">line</span>"&gt;        <span class="hljs-title">ans</span> &amp;#<span class="hljs-title">x3D</span>;</span> i;&lt;/span&gt;&lt;br&gt;&lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">line</span>"&gt;    &amp;#125;</span>&lt;/span&gt;&lt;br&gt;&lt;span <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">line</span>"&gt;&amp;#125;</span>&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre></li><li><p>我之前学习的字符串的hash技术中，用到了p和mod，p和mod都推荐使用较大的素数，p推荐使用6位到8位的素数，mod推荐10<sup>9</sup>+7等等。</p><p>但是这道题中如果用了这个以及那个取模的公式，就会超时。</p></li><li><p>除以二等等的运算可以用位运算，能快一点。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程过程中需要注意的点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 节省时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络读书笔记1</title>
      <link href="/2020/08/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B01/"/>
      <url>/2020/08/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<h2 id="p1-~-p15"><a class="markdownIt-Anchor" href="#p1-~-p15"></a> p1 ~ p15</h2><h1 id="描述因特网"><a class="markdownIt-Anchor" href="#描述因特网"></a> 描述因特网</h1><ul><li>通过因特网的具体构成来描述</li><li>根据为分布式应用提供服务的联网基础设施来描述</li></ul><h2 id="因特网的具体构成描述"><a class="markdownIt-Anchor" href="#因特网的具体构成描述"></a> 因特网的具体构成描述</h2><ul><li><h4 id="主机host-或-端系统end-system"><a class="markdownIt-Anchor" href="#主机host-或-端系统end-system"></a> 主机(host) 或 端系统(end system)</h4><p>与因特网连接的设备，<strong>主机</strong>有时又进一步划分为两类：<strong>客户端(client)<strong>和</strong>服务器(server)</strong>。客户端通常是桌面PC、移动PC和智能手机等，而服务器通常是更为强大的机器，用于存储和发布Web页面、流视频、中继电子邮件等。</p></li><li><h4 id="通信链路communication-link分组交换机packet-switch"><a class="markdownIt-Anchor" href="#通信链路communication-link分组交换机packet-switch"></a> 通信链路(communication link)，分组交换机(packet switch)</h4><p>端系统通过<strong>通信链路(communication link)<strong>和</strong>分组交换机(packet switch)<strong>连接到一起。我们将介绍许多通信链路，它们有不同类型的</strong>物理媒体</strong>(定义在后)组成。</p></li><li><h4 id="通信链路的传输速率transmission-rate"><a class="markdownIt-Anchor" href="#通信链路的传输速率transmission-rate"></a> 通信链路的传输速率(transmission rate)</h4><p>单位是<strong>bit/s</strong></p></li><li><h4 id="分组packet"><a class="markdownIt-Anchor" href="#分组packet"></a> 分组(packet)</h4><p>当一台端系统要向另一台端系统发送数据时，发送端系统将数据分段，并为每段加上首部字节。由此形成的信息包用计算机网络的术语来说称为<strong>分组(packet)</strong>。</p></li><li><h4 id="分组交换机packet-switch"><a class="markdownIt-Anchor" href="#分组交换机packet-switch"></a> 分组交换机(packet switch)</h4><ul><li><p>分组交换机从它的一条入通信链路接受到达的分组，并从它的一条出通信链路转发该分组。</p></li><li><p>市面上流行着各种类型、各具特色的分组交换机，但在当今的因特网中，两种最著名的类型是<strong>路由器(router)<strong>和</strong>链路层交换机(link-layer switch)</strong>。</p></li><li><p><strong>链路层交换机(linker-layer switch)<strong>通常用于</strong>接入网</strong>（定义在后）中，而<strong>路由器(router)<strong>通常用于</strong>网络核心</strong>中。</p></li></ul></li><li><h4 id="路径route或path"><a class="markdownIt-Anchor" href="#路径route或path"></a> 路径(route或path)</h4><p>从发送端系统到接收端系统，一个分组所经历的一系列通信链路和分组交换机称为通过该网络的<strong>路径(route或path)</strong></p></li><li><h4 id="因特网服务提供商internet-service-providerisp"><a class="markdownIt-Anchor" href="#因特网服务提供商internet-service-providerisp"></a> 因特网服务提供商(Internet Service Provider,ISP)</h4><ul><li><p>端系统由 <strong>因特网服务提供商(Internet Service Provider,ISP)</strong> 接入因特网，包括本地电缆或电话公司那样的住宅区ISP、公司ISP、大学ISP，在机场、旅馆、咖啡店和其他公共场所提供WiFi接入的ISP，以及为只能手机和其他设备提供移动接入的蜂窝数据ISP。</p></li><li><p>每个ISP自身就是一个由多台<strong>分组交换机</strong>和多段<strong>通信链路</strong>组成的网络。</p></li></ul></li><li><h4 id="协议protocol"><a class="markdownIt-Anchor" href="#协议protocol"></a> 协议(protocol)</h4><p>定义了在两个或多个通信实体之间交换的报文的格式和顺序，以及保温发送和/或接受一条报文或其他时间所采取的动作。</p></li></ul><h2 id="根据为分布式应用提供服务的联网基础设施来描述"><a class="markdownIt-Anchor" href="#根据为分布式应用提供服务的联网基础设施来描述"></a> 根据为分布式应用提供服务的联网基础设施来描述</h2><ul><li><h4 id="分布式应用distributed-applicaiton"><a class="markdownIt-Anchor" href="#分布式应用distributed-applicaiton"></a> 分布式应用(distributed applicaiton)</h4><p>如果一个应用设计到多个相互交换数据的端系统，那么它们被称为<strong>分布式应用(distributed application)</strong>。</p></li><li><h4 id="套接字接口"><a class="markdownIt-Anchor" href="#套接字接口"></a> 套接字接口</h4><p>与因特网相连的端系统提供了一个<strong>套接字接口(socket interface)</strong>，该接口规定了运行在一个端系统上的程序请求因特网基础设施向运行在另一个端系统上的特定目的地程序交付数据的方式。</p></li></ul><h1 id="网络边缘"><a class="markdownIt-Anchor" href="#网络边缘"></a> 网络边缘</h1><h2 id="接入网"><a class="markdownIt-Anchor" href="#接入网"></a> 接入网</h2><ul><li><p>是指将端系统物理连接到其 <strong>边缘路由器(edge router)</strong> 的网络。</p></li><li><p><strong>边缘路由器</strong>是端系统到任何其他<strong>远程端系统</strong>的路径上的第一台<strong>路由器</strong>。</p></li><li><p>下图中用带阴影的粗线显示了几种类型的接入链路和使用接入网的几种环境（家庭、公司和广域移动无线）。</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/08/AOZdPxBDLclXyn6.jpg" alt="接入网" /></p><ul><li><h3 id="家庭接入dsl-电缆-ftth-拨号和卫星"><a class="markdownIt-Anchor" href="#家庭接入dsl-电缆-ftth-拨号和卫星"></a> 家庭接入：DSL、电缆、FTTH、拨号和卫星</h3><ul><li><h4 id="dsl"><a class="markdownIt-Anchor" href="#dsl"></a> DSL</h4><ul><li><strong>数字用户线(Digital Subscriber Line)DSL因特网接入</strong>：住户通常从提供本地电话接入的本地电话公司处获得DSL因特网接入。因此，当使用DSL时，用户的本地电话公司也是它的ISP。</li><li>每个用户使用现有的电话线（即双绞线，后面将介绍）与位于电话公司的本地中心局（CO）中的<strong>数字用户线接入复用器(DSLAM)<strong>交换数据。家庭的</strong>DSL调制解调器</strong>得到数字数据后将其转换为高频音，以通过电话线传输给本地中心局；来自许多家庭的模拟信号在DSLAM处被转换会数字形式。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/09/kaUwNSr4F5KXnJM.jpg" alt="DSL因特网接入" /></p><ul><li>DSL标准定义了多个传输速率，包括<strong>上行传输速率</strong>（即上传速度）和<strong>下行传输速率</strong>（即下载速度）。如果这两个速率不相同，则这种接入被称为是<strong>不对称的</strong>。</li></ul></li><li><h4 id="电缆"><a class="markdownIt-Anchor" href="#电缆"></a> 电缆</h4><ul><li><strong>电缆因特网接入(cable Internet access)</strong>：利用了有线电视公司现有的电视基础设施。住宅从有线电视公司获得了电缆因特网接入。因为在这个系统中应用了光纤和同轴电缆，所以它经常被称为混合光纤同轴(Hybrid Fiber Coax,HFC)系统。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/09/WBOQwtEkMKUyVYd.png" alt="电缆接入网" /></p><ul><li>电缆因特网接入需要特殊的调制解调器，这种调制解调器称为<strong>电缆调制解调器(cable modem)</strong>,如同DSL调制解调器。这里的电缆调制解调器通常是一个外部设备，通过一个<strong>以太网端口</strong>连接到家庭PC。（以太网将在第六章讨论）。在电缆的头端， <strong>电缆调制解调器端接系统(Cable Modem Termination System, CMTS)</strong> 与DSL接入网的DSLAM具有类似的功能。</li></ul></li><li><h4 id="ftthfiber-to-the-home"><a class="markdownIt-Anchor" href="#ftthfiber-to-the-home"></a> FTTH(Fiber To The Home)</h4><ul><li><p><strong>光纤到户(Fiber To The Home)</strong>：从本地中心局直接到家庭提供了一条光线路径。</p></li><li><p>从本地中心局到家庭有几种竞争性的光纤分布方案。最简单的光纤分布网络称为<strong>直接光纤</strong>，从本地中心局到每户设置一根光纤。更一般的是，从中心局出来的每根光纤实际上由许多家庭共享，<strong>直到相对接近这些家庭的位置</strong>，该光纤才分成每户一根光纤。</p><ul><li><p>进行后面这种光纤分布方案有两种有竞争性的光纤分布体系结构：<strong>主动光纤网络(Active Optical Network,AON)(将在第六章讨论)<strong>和</strong>被动光纤网络(Passive Optical Network,PON)</strong></p></li><li><p>下图显示了PON分布体系结构的FTTH</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/09/bhNHvYAX4M3sKwg.png" alt="PON分布体系FTTH" /></p></li><li><p>每个家庭有一个<strong>光纤网络段接器(Optical Network Terminator, ONT)</strong>，它由专门的光纤连接到邻近的分配器(splitter)。该分配器把一些家庭(通常少于100个)集结到一根共享的光纤，该光纤再连接到本地电话和公司的中心局中的<strong>光纤线路端接器(Optical Linee Terminator, OLT)</strong>。该OLT提供了光信号和电信号之间的转换，经过本地电话公司路由器与因特网相连。在家庭中，用户将一台<strong>家庭路由器(通常是无线路由器)与ONT相连</strong>，并经过这台家庭路由器接入因特网。</p></li><li><p>在PON体系中，所有从OLT发送到分配器的分组在分配器（类似于一个电缆头端）处复制（没懂…）</p></li></ul></li></ul></li></ul></li><li><h3 id="企业和家庭接入以太网和wifi"><a class="markdownIt-Anchor" href="#企业和家庭接入以太网和wifi"></a> 企业（和家庭）接入：以太网和WiFi</h3><ul><li><p>在公司和大学校园以及越来越多的家庭环境中，使用<strong>局域网（Local Area Netword,LAN）<strong>将端系统连接到边缘路由器。有许多不同类型的局域网技术，如</strong>以太网</strong>和<strong>WiFi</strong>。</p></li><li><h4 id="以太网因特网接入"><a class="markdownIt-Anchor" href="#以太网因特网接入"></a> 以太网因特网接入</h4><p>如下图所示，以太网用户使用双绞铜线与一台<strong>以太网交换机</strong>相连，第六章中将详细讨论该技术。</p><blockquote><p>由图可看出，以太网交换机是链路层交换机</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/09/4gGeHJrfdwYipqZ.png" alt="" /></p></li><li><h4 id="无线lan因特网接入"><a class="markdownIt-Anchor" href="#无线lan因特网接入"></a> 无线LAN因特网接入</h4><ul><li>在无线LAN环境中，无线用户从/到一个接入点发送/接受分组，该接入点与企业网连接（很可能使用了有线以太网），企业网再与<strong>有线因特网</strong>相连。一个无线LAN用户通常必须位于接入点的几十米的方位内。</li><li>基于<strong>IEEE802.11</strong>技术的无线LAN接入，更通俗地称为WiFi。</li></ul><blockquote><p>Wi-Fi，是Wi-Fi联盟制造商的商标，作为产品的品牌认证；是一个基于IEEE802.11标准的无线LAN技术。</p><p>Wi-Fi常被写为WiFi或Wifi，但是它们并没有被Wi-Fi联盟认可。</p></blockquote></li></ul><blockquote><p>虽然以太网和WiFi接入网最初是在企业（公司或大学）环境中的，但他们进来已经成为家庭网络中相当常见的部件。今天许多家庭将宽带住宅接入（即电缆调制解调器或DSL调制解调器）与廉价的无线局域网技术结合起来，以产生强大的家庭网络。如下图</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/09/IoXMylPcn7bCZge.jpg" alt="" /></p><p>这个家庭网络(端系统、分组交换机、通信链路)组成如下：</p><p>一个与无线PC和家中其他无线设备通信的基站（无线接入点）；一个提供与因特网宽带接入的电缆调制解调器；一台互联了基站及带有电缆调制解调器的固定PC的路由器。</p><p>一台漫游的便携机和一台有线PC，家中其他无线设备；</p></blockquote></li><li><h3 id="广域无线接入3g和lte"><a class="markdownIt-Anchor" href="#广域无线接入3g和lte"></a> 广域无线接入：3G和LTE</h3><p>iPhone和安卓等设备越来越多地用来在移动中发信息、在社交网络中分享照片、观看视频和放音乐。这些设备应用了与<strong>蜂窝移动电话</strong>相同的无线基础设施，通过<strong>蜂窝网</strong>提供商运营的基站来发送和接受分组。与WiFi不同的是，一个用户仅需要位于基站的数万米范围（而不是几十米）内。将在第七章讨论无线网络和移动性，以及WiFi、3G和LTE等技术的基本原则。</p></li></ul><h2 id="物理媒体"><a class="markdownIt-Anchor" href="#物理媒体"></a> 物理媒体</h2><ul><li><p>当一个比特的数据从源到目的地传输时，通过一系列&quot;发射器-接收器&quot;对。对于每个发射器-接收器对，通过跨越一种 <strong>物理媒体(physical medium)</strong> 传播电磁波或光脉冲来发送该比特。该物理媒体可具有多种形状和形式，并且对沿途的每个发射器-接收器对而言不必具有相同的类型。</p></li><li><p><strong>物理媒体</strong>分成两种类型：<strong>导引型媒体(guided media)<strong>和</strong>非导引型媒体(unguided media)</strong>。对于导引型媒体，电波沿着固体媒体前行，如光缆、双绞铜线或同轴电缆。对于非导引型媒体，电波在空气或外层空间中传播，例如在无线局域网或数字卫星频道中。</p></li><li><p>物理媒体有：双绞铜线、同轴电缆、光纤、陆地无线电信道、卫星无线电信道</p><ul><li><p>双绞铜线：高速LAN联网的主导性解决方案</p></li><li><p>同轴电缆：与双绞铜线类似，同轴电缆由两个铜导体组成，但是这两个导体时同心的而不是并行的。</p><p>同轴电缆能被用作<strong>导引型共享媒体(shared medium)</strong>。特别是，许多端系统能够直接与该电缆相连，每个端系统都能接收由其他端系统发送的内容。</p></li><li><p>光纤：不受电磁干扰，很难窃听</p></li><li><p>陆地无线电信道：大致分为三类：第一类运行在<strong>很短距离</strong>(如1米或2米)；另一类运行在<strong>局域</strong>，通常跨越数十到几百米；第三类运行在<strong>广域</strong>，跨越数万米。</p></li><li><p>卫星无线电信道：一颗通信卫星连接地球上的两个或多个微波发射器/接收器，他们被称为地面站。该卫星在一个频段接收传输，使用一个转发器（下面讨论）再生信号，并在另一个频率上发射信号。通信中经常使用两类卫星： <strong>同步卫星(geostationary satellite)</strong> 和 <strong>近地轨道(Low-Earth Orbiting, LEO)</strong> 卫星</p><p>从地面站到同步卫星在回到地面站的据他距离引入了可观的280ms信号传播时延。不过，能以数百Mbps速率运行的卫星链路通常用于那些无法使用DSL或电缆因特网接入的区域。</p><p>而要提供对一个区域的连续覆盖，需要在轨道上放置许多<strong>近地轨道卫星</strong>。LEO卫星技术未来也许能够用于因特网接入。</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机网络读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应用hash技术处理字符串</title>
      <link href="/2020/08/08/%E5%BA%94%E7%94%A8hash%E6%8A%80%E6%9C%AF%E5%A4%84%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2020/08/08/%E5%BA%94%E7%94%A8hash%E6%8A%80%E6%9C%AF%E5%A4%84%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串的hash技术"><a class="markdownIt-Anchor" href="#字符串的hash技术"></a> 字符串的hash技术</h1><ul><li><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义：</h4><p>字符串的hash是通过某种字符串hash函数将不同的字符串映射到不同的数字，配合其他数据结构或STL，进行判重，统计，查询等操作。</p></li><li><h4 id="一个常用的字符串hash函数"><a class="markdownIt-Anchor" href="#一个常用的字符串hash函数"></a> 一个常用的字符串hash函数</h4><ul><li><p>hash[i] = (hash[i-1]*p + idx(s[i]))%mod</p><p>hash[0] = idx(s[0])%mod</p></li><li><p>即hash[i]是字符串的前i个字符组成的前缀的hash值，而idx(s)为字符s的一个自定义索引，例如，idx(‘a’) = 1, idx(‘b’) = 2,…, idx(‘z’) = 26。</p></li><li><p>例如：p = 7, mod = 91,把字符串&quot;abc&quot;映射为一个整数：hash[0] = idx(‘a’)%91 = 1,字符串&quot;a&quot;被映射为1；hash[1] = (hash[0]*p + idx(‘b’))%mod = 9,表示字符串&quot;ab&quot;被映射为9；hash[2] = (hash[1]*p + idx(‘c’))%mod = 66,所以，字符串&quot;abc&quot;被映射为66。</p></li></ul></li><li><h4 id="基于字符串hash函数可以求字符串的任何一个子串的hash值"><a class="markdownIt-Anchor" href="#基于字符串hash函数可以求字符串的任何一个子串的hash值"></a> 基于字符串hash函数，可以求字符串的任何一个子串的hash值</h4><ul><li><p>hash[l…r] = ((hash[r]-hash[l-1]*p<sup>r-l+1</sup>)%mod+mod)%mod (不出现负数)</p></li><li><p>如上例，对于字符串&quot;abab&quot;，hash[2]=(hash[1]*p+idx(‘a’))%mod=64，表示字符串&quot;aba&quot;被映射为64；hash[3]=(hash[2]*p+idx(‘b’))%mod=86，即字符串&quot;abab&quot;被映射为86。则hash[2…3]=( (hash[3]-hash[1]*p<sup>2</sup>)%mod+mod)%mod =9=hash[1]，即字符串 “abab”    的第一个&quot;ab&quot;子串和第二个&quot;ab&quot;子串所对应的hash值相同，都是9</p></li></ul></li><li><h4 id="p-和-mod取值要合适"><a class="markdownIt-Anchor" href="#p-和-mod取值要合适"></a> p 和 mod取值要合适</h4><ul><li>否则可能会出现不同字符串有相同的hash值。</li><li>一般p 和 mod要取<code>素数</code> ，p取一个<strong>6位到8位</strong>的较大的<strong>素数</strong>，mod取一个<strong>大素数</strong>，比如10<sup>9</sup>+7,或者10<sup>9</sup>+9。</li></ul></li></ul><h1 id="power-stringspoj-2406"><a class="markdownIt-Anchor" href="#power-stringspoj-2406"></a> Power Strings(POJ 2406)</h1><ul><li><h4 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h4><p>给出两个字符串a和b，定义a*b是它们的串联。例如，如果a=“abc”，b=“def”，则a*b=&quot;abcdef</p><p>&quot;。如果把串联视为相乘，非负整数指数则定义为：a<sup>0=&quot;&quot;（空串），而a</sup>(n+1)=a*(a^n)。</p></li><li><h4 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h4><p>每个测试用例是在一行中给出一个可打印字符的字符串<em>s</em>。<em>s</em>的长度将至少为1，并且不会超过1000000（一百万）个字符。在最后 一个测试用例后面，给出包含句点的一行。</p></li><li><h4 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h4><p>对于每个s，请输出最大的n，使得对某个字符串a，s = a ^ n。</p></li><li><h4 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h4><p>本题海量输入，为避免超时，请使用scanf代替cin。</p></li><li><h4 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/09/Empeq6iORC9FXND.png" alt="分析" /></p></li><li><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4></li></ul><p>我的下标是从零开始的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000005</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll has[N];</span><br><span class="line"><span class="keyword">char</span> str[N];</span><br><span class="line"><span class="keyword">int</span> idx[N];</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">1000007</span>;</span><br><span class="line"><span class="keyword">int</span> mod = <span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">int</span> lenstr;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hashstr</span><span class="params">(<span class="keyword">char</span>* str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">ll <span class="title">pow</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; r;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans *= p;</span><br><span class="line">        ans = ans % mod;    <span class="comment">//注意取模防止爆掉</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">26</span>;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        idx[i] = i+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(str,<span class="string">&quot;.&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        lenstr = <span class="built_in">strlen</span>(str);</span><br><span class="line">        hashstr(str);</span><br><span class="line">        <span class="keyword">int</span> ans = judge();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hashstr</span><span class="params">(<span class="keyword">char</span>* str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    has[<span class="number">0</span>] = idx[str[<span class="number">0</span>]<span class="number">-97</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; lenstr;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        has[i] = (has[i<span class="number">-1</span>]*p+idx[str[i]<span class="number">-97</span>])%mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll has1;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= lenstr;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(lenstr%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> k = lenstr/i;</span><br><span class="line">            has1 = has[i<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>;j &lt;= k;j ++)</span><br><span class="line">            &#123;</span><br><span class="line">                ll temp = ((has[j*i<span class="number">-1</span>]-has[(j<span class="number">-1</span>)*i<span class="number">-1</span>]*<span class="built_in">pow</span>(p,i))%mod+mod)%mod; <span class="comment">//注意这里n次方要自己写个函数，不要^，这个是异或。。。。</span></span><br><span class="line">                <span class="keyword">if</span>(temp != has1)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> lenstr/i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="stammering-alienshdoj-4080"><a class="markdownIt-Anchor" href="#stammering-alienshdoj-4080"></a> Stammering Aliens(HDOJ 4080)</h1><ul><li><h4 id="题目-2"><a class="markdownIt-Anchor" href="#题目-2"></a> 题目</h4><ul><li><p>Ellie Arroway博士与一个外星文明建立了联系。然而，所有破解外星人讯息的努力都失败了，因为他们遇上了一群口吃的外星人。Ellie的团队发现，在每一条足够长的讯息中，最重要的单词都会以连续字符的顺序出现一定次数的重复，甚至出现在其他单词的中间；而且，有时讯息会以一种模糊的方式缩写；例如，如果外星人要说bab两次，他们可能会发送讯息babab，该讯息已被缩写，在第一个单词中第二个b被重用为第二个单词中的第一个b</p></li><li><p>因此，一条讯息可能包含重复的相同单词一遍又一遍。现在，Ellie向您，S.R.Hadden，寻求帮助，以确定一条讯息的要点。</p></li><li><p>给出一个整数<em>m</em>和一个表示讯息的字符串<em>s</em>，请您查找至少出现<em>m</em>次的<em>s</em>的最长子字符串。例如，在讯息baaaababababbababbab中，长度为5个单词的babab包含3次，即在位置5、7和12处（其中下标索引从零开始），出现3次或更多次的子字符串不会比5更长（请参见样例输入中的第1个样例）；而且，在这条讯息中，没有子串出现11次或更多次（请参见第2个样例）。如果存在多个解决方案，则首选出现最右的子字符串（请参见第3个样例）。</p></li></ul></li><li><h4 id="输入-2"><a class="markdownIt-Anchor" href="#输入-2"></a> 输入</h4><p>输入包含若干测试用例。每个测试用例在第一行给出一个整数<em>m</em>（<em>m</em>$\geq$1），表示最小重复次数；接下来的一行给出一个长度介于<em>m</em>和40000之间（包括<em>m</em>和40000）的字符串<em>s</em>。在<em>s</em>中，所有字符都是从“a”到“z”的小写字符。最后一个测试用例由<em>m</em>=0标识，程序不用处理。</p></li><li><h4 id="输出-2"><a class="markdownIt-Anchor" href="#输出-2"></a> 输出</h4><p>对每个测试用例输出一行。如果无解，则输出none；否则，在一行中输出两个用空格分隔的整数，第一个整数表示至少出现<em>m</em>次的子串的最大长度；第二个整数表示此子字符串的最右起始位置。</p></li><li><h4 id="分析-2"><a class="markdownIt-Anchor" href="#分析-2"></a> 分析</h4></li><li><h4 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 40005</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll has[N];   <span class="comment">//下标从1开始</span></span><br><span class="line"><span class="keyword">char</span> str[N];</span><br><span class="line">ll mi[N];</span><br><span class="line">ll p = <span class="number">131</span>;               <span class="comment">//这道题没有用mod，p取的值也很小。</span></span><br><span class="line"><span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt; mapint;</span><br><span class="line"><span class="keyword">int</span> lenstr;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">confir</span><span class="params">(<span class="keyword">int</span> mid)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mi[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">40000</span>;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        mi[i] = mi[i<span class="number">-1</span>]*p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">        <span class="keyword">if</span>(m==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">        lenstr = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= lenstr;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            has[i] = has[i<span class="number">-1</span>]*p+str[i<span class="number">-1</span>]<span class="number">-97</span>+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> lef = <span class="number">1</span>,rig = lenstr;</span><br><span class="line">        <span class="keyword">int</span> mid;</span><br><span class="line">        <span class="keyword">int</span> fir;</span><br><span class="line">        <span class="keyword">while</span>(lef &lt;= rig)</span><br><span class="line">        &#123;</span><br><span class="line">            mapint.clear();</span><br><span class="line">            mid = (lef + rig)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(mid))</span><br><span class="line">            &#123;</span><br><span class="line">                lef = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                rig = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(rig==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;none\n&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            fir = confir(rig);</span><br><span class="line">            <span class="keyword">if</span>(fir==<span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;none\n&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,rig,fir);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mapint.clear();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= lenstr - mid;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tem = has[i+mid] - has[i]*mi[mid];</span><br><span class="line">        <span class="keyword">if</span>(++mapint[tem]&gt;=m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">confir</span><span class="params">(<span class="keyword">int</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mapint.clear();</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= lenstr - mid;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tem = has[i+mid] - has[i]*mi[mid];</span><br><span class="line">        <span class="keyword">if</span>(++mapint[tem]&gt;=m)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="从上题tle中学到的东西"><a class="markdownIt-Anchor" href="#从上题tle中学到的东西"></a> 从上题TLE中学到的东西</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= lenstr - mid;i ++)</span><br><span class="line">&#123;</span><br><span class="line">    tem = has[i+mid] - has[i]*mi[mid];</span><br><span class="line">    mapint[tem]++;</span><br><span class="line">    <span class="keyword">if</span>(mapint[tem]&gt;=m)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里注意那个mapint[tem]++; 应该合并到if语句中，改后代码如下。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= lenstr - mid;i ++)</span><br><span class="line">&#123;</span><br><span class="line">    tem = has[i+mid] - has[i]*mi[mid];</span><br><span class="line">    <span class="keyword">if</span>(++mapint[tem]&gt;=m)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>我之前学习的字符串的hash技术中，用到了p和mod，p和mod都推荐使用较大的素数，p推荐使用6位到8位的素数，mod推荐10<sup>9</sup>+7等等。</p><p>但是这道题中如果用了这个以及那个取模的公式，就会超时。</p></li><li><p>除以二等等的运算可以用位运算，能快一点。</p></li></ul><h1 id="stlmap的简单用法"><a class="markdownIt-Anchor" href="#stlmap的简单用法"></a> STLmap的简单用法</h1><ul><li><p>#include &lt;map&gt;</p></li><li><p>map是模板类，需要关键字和存储对象两个模板参数：std:map&lt;int ,string&gt; personnel;</p><p>这样就定义了又给用int作为索引，并拥有相关联的指向string的指针。</p></li><li><p>数据的插入：</p><ul><li><p>mapStudent.insert(pair&lt;int,string&gt;(1,“studeng_one”));</p></li><li><p>mapStudent.insert(map&lt;int,string&gt;::value_type(2,“student_two”));</p></li><li><p>mapStudent[3] = “student_three”;</p></li></ul></li><li><p>通过size()成员函数得到map的大小</p></li><li><p>通过find()成员函数查找元素，找到则返回元素的所在位置的<strong>迭代器</strong>，找不到则返回<strong>迭代器</strong>end()。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="built_in">string</span>&gt;::iterator iter;</span><br><span class="line">iter = mapStudent.find(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(iter!=mapStudent.end())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Find it, the value is &quot;</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Not find&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用迭代器遍历</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="built_in">string</span>&gt;::iterator iter;</span><br><span class="line"><span class="keyword">for</span>(iter = mapStudent.first();iter &lt; mapStudent.end();iter ++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>删除元素</p><ul><li>mapStudent.erase(iter);  //指向要删除元素的迭代器作为参数</li><li>mapStudent.erase(key); //用要删除元素的键值作为参数</li></ul></li><li><p>删除区间元素</p><ul><li><p>mapStudent.erase(mapStudent.begin(),mapStudent.end());//把整个区间删除</p><p>注意删除区间是<strong>前闭后开</strong></p></li></ul></li></ul><h1 id="stringhdoj-4821"><a class="markdownIt-Anchor" href="#stringhdoj-4821"></a> String(HDOJ 4821)</h1><ul><li><h4 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h4><ul><li><p>给定一个字符串S和两个整数L和M，我们称S是一个子串是&quot;可恢复的&quot;，当且仅当</p></li><li><p>(i)子串的长度位M*L;</p></li><li><p>(ii)这一子串通过串联S的M个&quot;多样化&quot;子串来构造:其中每个子串的长度L；而且这些子串不能又两个完全一样的串。</p></li><li><p>如果S的两个子串是从S的不同部分切下来的，则它们被认为是“不同的”。例如，字符串&quot;aa&quot;有3个不同的子串&quot;aa&quot;,“a&quot;和&quot;a”。</p></li><li><p>请您计算S的不同的”可恢复”子字符串的数量。</p></li></ul></li><li><h4 id="输入-3"><a class="markdownIt-Anchor" href="#输入-3"></a> 输入</h4><ul><li><p>输入包含多个测试用例，以EOF结束</p></li><li><p>每个测试用例的第一行给出两个用空格分隔的整数M和L</p></li><li><p>每个测试用例的第二行给出一个字符串S,它只包含小写字母</p></li><li><p>S的长度不大于10<sup>^</sup>5,而且1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> M*L <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> S的长度</p></li></ul></li><li><h4 id="输出-3"><a class="markdownIt-Anchor" href="#输出-3"></a> 输出</h4><p>对每个测试用例，在一行中输出答案。</p></li><li><h4 id="分析-3"><a class="markdownIt-Anchor" href="#分析-3"></a> 分析</h4><p>通过字符串的hash，求出任意一个长度为<em>L</em>的子串的hash值。枚举字符串起始位置，从0枚举到<em>L</em>-1。然后，在这个位置开始，每<em>L</em>个字符作为一块，首先将前<em>M</em>块插入到<em>map</em>中，同时记录不相同字符串的个数，如果不相同字符串的个数是<em>M</em>，则满足要求。然后，<strong>将这个区间向右移</strong>，删掉第1块，加入第<em>M</em>+1块，同样记录不相同字符串的个数。</p></li><li><h4 id="注意的点"><a class="markdownIt-Anchor" href="#注意的点"></a> 注意的点</h4><p>unsigned long long会自动取模，所以可以不用mod这个变量了。</p></li><li><h4 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;   <span class="comment">//unsigned long long会自动取模</span></span><br><span class="line">ll p = <span class="number">31</span>;</span><br><span class="line"><span class="keyword">char</span> str[N];</span><br><span class="line">ll has[N]; <span class="comment">//下标从1开始</span></span><br><span class="line">ll mi[N];</span><br><span class="line"><span class="keyword">int</span> m,l;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mi[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= N;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        mi[i] =  mi[i<span class="number">-1</span>]* p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;l)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> lenstr = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= lenstr;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            has[i] = has[i<span class="number">-1</span>]*p+str[i<span class="number">-1</span>]<span class="number">-97</span>+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= l<span class="number">-1</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt; mapint;</span><br><span class="line">            <span class="keyword">int</span> lenstr2 = <span class="built_in">strlen</span>(str+i);</span><br><span class="line">            <span class="keyword">int</span> tem = lenstr2 / l;</span><br><span class="line">            ll k;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m;j ++)</span><br><span class="line">            &#123;</span><br><span class="line">                k = has[i+j*l]-has[i+(j<span class="number">-1</span>)*l]*mi[l];</span><br><span class="line">                mapint[k]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> siz = mapint.size();</span><br><span class="line">            <span class="keyword">if</span>(siz==m)</span><br><span class="line">            &#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= tem - m;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                k = has[i+j*l]-has[i+(j<span class="number">-1</span>)*l]*mi[l];</span><br><span class="line">                mapint[k]--;</span><br><span class="line">                <span class="keyword">if</span>(mapint[k]==<span class="number">0</span>)&#123;mapint.erase(k);&#125;</span><br><span class="line">                k = has[i+(m+j)*l]-has[i+(m+j<span class="number">-1</span>)*l]*mi[l];</span><br><span class="line">                mapint[k]++;</span><br><span class="line">                <span class="keyword">int</span> siz = mapint.size();</span><br><span class="line">                <span class="keyword">if</span>(siz==m)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="通过上面这道题学到的东西"><a class="markdownIt-Anchor" href="#通过上面这道题学到的东西"></a> 通过上面这道题学到的东西</h1><ul><li><h4 id="unsigned-long-long-会自动取模"><a class="markdownIt-Anchor" href="#unsigned-long-long-会自动取模"></a> unsigned long long 会自动取模</h4></li><li><h4 id="这也就是为什么上上题不用mod也能保证做对"><a class="markdownIt-Anchor" href="#这也就是为什么上上题不用mod也能保证做对"></a> 这也就是为什么上上题不用mod也能保证做对</h4></li></ul>]]></content>
      
      
      <categories>
          
          <category> 字符串处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hash技术处理字符串 </tag>
            
            <tag> STLmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于有符号数和无符号数比较的问题</title>
      <link href="/2020/08/07/%E5%85%B3%E4%BA%8E%E6%9C%89%E7%AC%A6%E5%8F%B7%E6%95%B0%E5%92%8C%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B0%E6%AF%94%E8%BE%83%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/08/07/%E5%85%B3%E4%BA%8E%E6%9C%89%E7%AC%A6%E5%8F%B7%E6%95%B0%E5%92%8C%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B0%E6%AF%94%E8%BE%83%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="有符号类型和无符号类型数值比较陷阱"><a class="markdownIt-Anchor" href="#有符号类型和无符号类型数值比较陷阱"></a> 有符号类型和无符号类型数值比较陷阱</h1><ul><li>虽然已经在<code>求最长回文子串</code> 那篇文章里面写了，但还是单独摘出来，提醒一下自己。</li></ul><h1 id="要注意无符号数和有符号数直接比较的问题"><a class="markdownIt-Anchor" href="#要注意无符号数和有符号数直接比较的问题"></a> 要注意无符号数和有符号数直接比较的问题</h1><ul><li><p>上网查了一下，上面这个题超时的原因就是size_t类型是无符号整型，在和int比较的时候，因为编译器会将小的类型转换成大的类型，所以会把int转换成无符号数，而如果int的符号位是1之类的，那么就会转换成一个特别大的数，程序就会出错。</p></li><li><p>当然，出错的原因不仅仅这个，具体编程什么样子应该是不可控制的。</p></li><li><h2 id="所以以后再用sizeof和strlen函数的时候先用一个有符号变量进行强转一下"><a class="markdownIt-Anchor" href="#所以以后再用sizeof和strlen函数的时候先用一个有符号变量进行强转一下"></a> 所以以后再用sizeof()和strlen()函数的时候，先用一个有符号变量进行强转一下。</h2></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程过程中需要注意的点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 有符号类型和无符号类型数值比较陷阱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求最长回文子串</title>
      <link href="/2020/08/07/%E6%B1%82%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/"/>
      <url>/2020/08/07/%E6%B1%82%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="最长回文子串"><a class="markdownIt-Anchor" href="#最长回文子串"></a> 最长回文子串</h1><p>回文串就是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。回文子串，顾名思义，即字符串中满足回文性质的子串。比如输入字符串 &quot;google”，由于该字符串里最长的对称子字符串是 &quot;goog”，因此最长回文子串的长度为4。</p><h1 id="使用manachaer算法求最长回文子串"><a class="markdownIt-Anchor" href="#使用manachaer算法求最长回文子串"></a> 使用Manachaer算法求最长回文子串</h1><ul><li><p>给出一个字符串，要求计算出这一字符串的最长回文子串的长度。如果遍历每一个字符，并以该字符为中心向两边查找，则其时间复杂度为O(<em>n</em><sup>2</sup>)。</p></li><li><p>Manacher算法又被称为“马拉车”算法，可以在时间复杂度为O(n)的情况下求解一个字符串的最长回文子串的长度。</p></li><li><h4 id="manacher算法对字符串的预处理"><a class="markdownIt-Anchor" href="#manacher算法对字符串的预处理"></a> Manacher算法对字符串的预处理</h4><ul><li><p>由于回文分为偶回文（例如&quot;bccb&quot;）和奇回文（例如&quot;bcacb&quot;），而在处理奇偶问题上会比较繁琐，例如，对于偶回文&quot;bccb&quot;，其对称重心是在两个’c’字符之间；对于奇回文&quot;bcacb&quot;，对称中心就是’a’字符。</p></li><li><p>对此，Manacher算法在字符串首尾，及各字符间各插入一个字符，而这个字符并未出现在字符串里。例如，字符串s是&quot;abbahopxpo&quot;，用未出现在字符串里的’#‘字符插入，得新字符串s_new是&quot;$#a#b#b#a#h#o#p#x#p#o&quot;，其中，’$'是为了防止越界。在字符串S中，有一个偶回文&quot;abba&quot;和一个奇回文&quot;opxpo&quot;，分别被转换成&quot;#a#b#b#a#“和”#o#p#x#p#o#&quot;，回文的<code>长度都成了奇数</code> 。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/07/3cUyC5PLBGQvzFq.png" alt="对字符串的预处理" /></p></li></ul></li><li><h4 id="求解p数组"><a class="markdownIt-Anchor" href="#求解p数组"></a> 求解p[]数组</h4><ul><li>通过预处理之后，可以统一处理奇回文字符串和偶回文字符串</li><li>所以接下来要做的就是求出p[]</li></ul></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/07/j76WIBYFX34EUMu.png" alt="求解p思路" /></p><h1 id="palindrome-poj-3974"><a class="markdownIt-Anchor" href="#palindrome-poj-3974"></a> Palindrome (POJ 3974)</h1><ul><li><h4 id="题目简略概括"><a class="markdownIt-Anchor" href="#题目简略概括"></a> 题目简略概括：🚛</h4><p>想要求一个字符串的最长回文子串的长度，用一种比遍历更好的方法进行求解。</p></li><li><h4 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h4><p>您的程序将对最多达30个的测试用例进行测试，每个测试用例在 一行中以最多1000000个小写字符的字符串形式给出。输入以字符串&quot;END&quot;开头的一行结束（为了清楚起见，用引号）</p></li><li><h4 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h4><p>对于输入中的每个测试用例，输出测试用例编号和最长回文子串的长度</p></li><li><h4 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h4><p>这是一道裸的用Manacher算法的题目</p></li><li><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000005*2</span></span><br><span class="line"><span class="keyword">int</span> p[N];</span><br><span class="line"><span class="keyword">char</span> new_str[N];</span><br><span class="line"><span class="keyword">char</span> str[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">(<span class="keyword">char</span>* str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ind = <span class="number">1</span>,ans;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[<span class="number">0</span>]==<span class="string">&#x27;E&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = Manacher(str);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case %d: %d\n&quot;</span>,ind,ans);</span><br><span class="line">        ind++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">(<span class="keyword">char</span>* str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> lenstr = <span class="built_in">strlen</span>(str);</span><br><span class="line">    new_str[<span class="number">0</span>] = <span class="string">&#x27;$&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; lenstr;i ++)<span class="comment">//以后要特别注意无符号数和有符号数之间数值比较，因为编译器会把有符号数转换成无符号数，所以比如这个例子，int就会转换成无符号数，如果过int符号位为1，那么就会变得很大，程序就会出错，从这道题的经历来看，就会死循环</span></span><br><span class="line">    &#123;</span><br><span class="line">        new_str[<span class="number">2</span>*i+<span class="number">1</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        new_str[<span class="number">2</span>*i+<span class="number">2</span>] = str[i];</span><br><span class="line">    &#125;</span><br><span class="line">    new_str[lenstr*<span class="number">2</span>+<span class="number">1</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    new_str[lenstr*<span class="number">2</span>+<span class="number">2</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>,mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> lennewstr = <span class="built_in">strlen</span>(new_str);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; lennewstr;i ++)<span class="comment">//以后要特别注意无符号数和有符号数之间数值比较</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mx&gt;i)</span><br><span class="line">        &#123;</span><br><span class="line">            p[i] = min(mx-i,p[<span class="number">2</span>*id-i]);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(new_str[i-p[i]]==new_str[i+p[i]])</span><br><span class="line">        &#123;</span><br><span class="line">            p[i]++;</span><br><span class="line">      &#125;</span><br><span class="line">        <span class="keyword">if</span>(p[i]+i&gt;mx)</span><br><span class="line">        &#123;</span><br><span class="line">            mx = p[i] + i;</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = max(ans,p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><s>血泪教训！！！</s> 这个题看了半天都是超时，自己改了半天实在想不通到底那里还能再节省时间，结果。。。，结果。。。，就是for循环里面strlen(str)和int的比较搞得鬼。和网上的博客对照了半天，实在没改的了试着改了这个，结果就过了。</p></blockquote></li></ul><h1 id="要注意无符号数和有符号数直接比较的问题"><a class="markdownIt-Anchor" href="#要注意无符号数和有符号数直接比较的问题"></a> 要注意无符号数和有符号数直接比较的问题</h1><ul><li><p>上网查了一下，上面这个题超时的原因就是size_t类型是无符号整型，在和int比较的时候，因为编译器会将小的类型转换成大的类型，所以会把int转换成无符号数，而如果int的符号位是1之类的，那么就会转换成一个特别大的数，程序就会出错。</p></li><li><p>当然，出错的原因不仅仅这个，具体编程什么样子应该是不可控制的。</p></li><li><h2 id="所以以后再用sizeof和strlen函数的时候先用一个有符号变量进行强转一下"><a class="markdownIt-Anchor" href="#所以以后再用sizeof和strlen函数的时候先用一个有符号变量进行强转一下"></a> 所以以后再用sizeof()和strlen()函数的时候，先用一个有符号变量进行强转一下。</h2></li></ul><h1 id="best-reward-hdoj-3613"><a class="markdownIt-Anchor" href="#best-reward-hdoj-3613"></a> Best Reward (HDOJ 3613)</h1><ul><li><h4 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h4><ul><li>经过一场艰苦的战斗，李将军取得了巨大的胜利。现在，国家元首决定用荣誉和财宝来奖励他所做的伟大贡献。</li><li>奖励李将军的一件财宝是一条由26种不同的宝石组成的项链，项链的长度为<em>n</em>，也就是<em>n</em>颗宝石串在一起构成了这条项链，而每颗宝石是属于26种宝石中的一种。</li><li>按照传统的观点，项链是有价值的当且仅当项链是回文——项链在任何方向上看起来都一样。然而，这个项链可能一开始还不是回文。所以国家元首决定把项链切成两半，然后把它们都交给李将军。</li><li>同一种类的所有宝石的价值是相同的（因为宝石的质量，宝石的价值可能是正的，也可能是负的；有些种类的宝石很漂亮，而有些宝石则看起来是普通的石头）。回文项链的价值等于宝石的价值之和，而不是回文的项链的价值为零。现在的问题是，如何切割给出的项链，使两个项链的价值之和最大，并输出这个值。</li></ul></li><li><h4 id="输入-2"><a class="markdownIt-Anchor" href="#输入-2"></a> 输入</h4><ul><li>输入的第一行是一个整数<em>T</em>（1≤<em>T</em>≤10），表示测试用例的数量。然后给出这些测试用例的描述。</li><li>对于每个测试用例，第一行是26个整数：<em>v</em><sub>1</sub> , <em>v</em><sub>2</sub> , …, <em>v</em><sub>26</sub>（- 100≤<em>v</em><sub>i</sub><em>≤100，1≤</em>i≤26），表示每种宝石的价值。</li><li>每个测试用例的第二行是由字符’a’到’z’组成的字符串，表示项链，不同的字符表示不同的宝石，'a’的价值是<em>v</em><sub>1</sub>，'b’的值是<em>v</em><sub>2</sub>，……，以此类推。字符串的长度不超过500000。</li></ul></li><li><h4 id="输出-2"><a class="markdownIt-Anchor" href="#输出-2"></a> 输出</h4><ul><li>输出一个整数，李将军可以从这串项链中获得的最大值。</li></ul></li><li><h4 id="分析-2"><a class="markdownIt-Anchor" href="#分析-2"></a> 分析</h4><ul><li>首先先用Manacher算法求出以每个字符为中心的最长回文子串的长度，然后枚举切割点，得到两个子串，由此确定每个子串的中心点；检查以该子串的中心为中心点的回文串的长度，如果回文串的长度等于该子串的长度，则该字串的所有字符的价值之和加入两个项链的价值之和；并对所有的两个项链的价值之和取最大值。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/08/qkX1NKixtCTUYBv.png" alt="枚举切割点,程序里的i是j" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/08/kMHgLvqNm78A42Y.png" alt="数组下标关系" /></p></li><li><h4 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 500005</span></span><br><span class="line"><span class="keyword">int</span> valu[<span class="number">27</span>];</span><br><span class="line"><span class="keyword">int</span> sum[N];   <span class="comment">//下标从1开始</span></span><br><span class="line"><span class="keyword">char</span> str[N];</span><br><span class="line"><span class="keyword">char</span> new_str[<span class="number">2</span>*N];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">2</span>*N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">(<span class="keyword">char</span>* str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= t;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> valusum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">26</span>;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;valu[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">        Manacher(str);</span><br><span class="line">        <span class="keyword">int</span> lenstr = <span class="built_in">strlen</span>(str);</span><br><span class="line">        sum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; lenstr;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> num = str[j];</span><br><span class="line">            sum[j+<span class="number">1</span>] = sum[j]+valu[num<span class="number">-96</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; lenstr - <span class="number">1</span>;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            valusum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(p[j+<span class="number">2</span>]+j+<span class="number">2</span>==<span class="number">2</span>*j+<span class="number">4</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                valusum += (sum[j+<span class="number">1</span>]-sum[<span class="number">0</span>]);  <span class="comment">//关系如上图</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p[j+lenstr+<span class="number">2</span>]+j+lenstr+<span class="number">2</span>==<span class="number">2</span>*lenstr+<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                valusum += (sum[lenstr] - sum[j+<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            ans = max(ans,valusum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">(<span class="keyword">char</span>* str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(p,<span class="number">0</span>,<span class="keyword">sizeof</span>(p));</span><br><span class="line">    <span class="keyword">int</span> lenstr = <span class="built_in">strlen</span>(str);</span><br><span class="line">    new_str[<span class="number">0</span>] = <span class="string">&#x27;$&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; lenstr;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        new_str[i*<span class="number">2</span>+<span class="number">1</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        new_str[i*<span class="number">2</span>+<span class="number">2</span>] = str[i];</span><br><span class="line">    &#125;</span><br><span class="line">    new_str[lenstr*<span class="number">2</span>+<span class="number">1</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    new_str[lenstr*<span class="number">2</span>+<span class="number">2</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>,id;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> lennewstr = <span class="built_in">strlen</span>(new_str);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; lennewstr;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mx&gt;i)</span><br><span class="line">        &#123;</span><br><span class="line">            p[i] = min(mx-i,p[id*<span class="number">2</span>-i]);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(new_str[i-p[i]]==new_str[i+p[i]])</span><br><span class="line">        &#123;</span><br><span class="line">            p[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i+p[i]&gt;mx)</span><br><span class="line">        &#123;</span><br><span class="line">            mx = p[i] + i;</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = max(ans,p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">                        </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 字符串处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 有符号类型和无符号类型数值比较陷阱 </tag>
            
            <tag> Manacher算法 </tag>
            
            <tag> 马拉车算法 </tag>
            
            <tag> 最长回文子串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不定方程</title>
      <link href="/2020/08/05/%E4%B8%8D%E5%AE%9A%E6%96%B9%E7%A8%8B/"/>
      <url>/2020/08/05/%E4%B8%8D%E5%AE%9A%E6%96%B9%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="一些定义及定理"><a class="markdownIt-Anchor" href="#一些定义及定理"></a> 一些定义及定理</h1><ul><li><h4 id="0没有约数1的约数是它自己"><a class="markdownIt-Anchor" href="#0没有约数1的约数是它自己"></a> 0没有约数，1的约数是它自己</h4></li><li><h4 id="一般说的约数都是正的"><a class="markdownIt-Anchor" href="#一般说的约数都是正的"></a> 一般说的约数都是正的</h4></li><li><h4 id="线性组合"><a class="markdownIt-Anchor" href="#线性组合"></a> 线性组合</h4><p>如果<em>a</em>和<em>b</em>都是整数，则<em>ax</em>+<em>by</em>是<em>a</em>和<em>b</em>的线性组合，其中数<em>x</em>和<em>y</em>是整数</p></li><li><h4 id="gcdab是ab的线性组合中最小的正整数"><a class="markdownIt-Anchor" href="#gcdab是ab的线性组合中最小的正整数"></a> GCD(a,b)是a,b的线性组合中最小的正整数</h4><p>如果<em>a</em>和<em>b</em>都是整数，且<code>a和b不全为0</code> ，则<em>GCD</em>(<em>a</em>, <em>b</em>) 是<em>a</em>和<em>b</em>的线性组合中最小<code>正整数</code> 。</p><blockquote><p>注意这是最小正整数，意思是线性组合生成的正整数中它是最小的。可能有零</p></blockquote><ul><li><h6 id="证明"><a class="markdownIt-Anchor" href="#证明"></a> 证明</h6><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/s186KGAtj9H52QM.png" alt="证明" /></p><blockquote><p>上面这个过程证明了a，b的最大公约数是a，b线性组合中最小的正整数，所以对于a,b的其他公约数来说，a,b的线性组合就无解了。</p></blockquote></li></ul></li><li><h4 id="bezout定理"><a class="markdownIt-Anchor" href="#bezout定理"></a> Bezout定理</h4><p>如果整数a和b有最大公因数GCD(a,b)，那么则有整数x和y使得ax+by = GCD(a,b)</p><ul><li><h5 id="推论"><a class="markdownIt-Anchor" href="#推论"></a> 推论</h5><p>整数a和b互素当且仅当存在整数x和y使得ax+by =1</p></li></ul></li></ul><h1 id="扩展欧几里得算法求不定方程的一个解"><a class="markdownIt-Anchor" href="#扩展欧几里得算法求不定方程的一个解"></a> 扩展欧几里得算法求不定方程的一个解</h1><ul><li><h4 id="给出不定方程axby-gcdab其中的a和b是整数"><a class="markdownIt-Anchor" href="#给出不定方程axby-gcdab其中的a和b是整数"></a> 给出不定方程ax+by = GCD(a,b)，其中的a和b是整数</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/QrjIc3b7EqxieJm.png" alt="求解思路" /></p><blockquote><p>推到最后的时候，y<sub> n</sub>可以不为零，但是回代的时候代零方便</p></blockquote></li><li><h4 id="扩展欧几里得算法既可以求不定方程的解还可以求最大公约数"><a class="markdownIt-Anchor" href="#扩展欧几里得算法既可以求不定方程的解还可以求最大公约数"></a> 扩展欧几里得算法，既可以求不定方程的解，还可以求最大公约数</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">excgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span> <span class="comment">//x,y为不定方程的解</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>;</span><br><span class="line">        y = <span class="number">0</span>;   <span class="comment">//这里可以为任意整数，经过程序验证是正确的</span></span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;b)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">int</span> t = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> r = a % b;</span><br><span class="line">    <span class="keyword">int</span> ans = excgcd(b,r,x,y);</span><br><span class="line">    <span class="keyword">int</span> ox = x;</span><br><span class="line">    <span class="keyword">int</span> oy = y;</span><br><span class="line">    x = oy;</span><br><span class="line">    y = ox - (a/b)*oy;</span><br><span class="line">    <span class="keyword">return</span> ans; <span class="comment">//返回最大公约数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><s>之前证明过a,b的所有因数就是b和a mod b的所有的因数，所以对于所有的因数来说，都可以用扩展欧几里得算法来计算出不定方程的解。</s> 这里不是，因为之前证明过GCD(a,b)是a,b线性组合中最小正整数，而它又是最大公因数，所以其它的公因数不能用a,b的线性组合来表示。</p><p>下面即将介绍到，如果ax + by = c; c如果是GCD(a,b)的整数倍，那么该方程就有无数解，如果不是GCD(a,b)的整数倍，则方程无解。</p></blockquote><h1 id="不定方程的通解"><a class="markdownIt-Anchor" href="#不定方程的通解"></a> 不定方程的通解</h1><ul><li><p>设<em>a</em>, <em>b</em>和<em>c</em>都是整数。如果<em>c</em>不是<em>GCD</em>(<em>a</em>, <em>b</em>)的倍数（整数倍），则不定方程<em>ax</em>+<em>by</em>=<em>c</em>没有整数解；如果<em>c</em>是<em>GCD</em>(<em>a</em>, <em>b</em>)的倍数，则不定方程<em>ax</em>+<em>by</em>=<em>c</em>有无穷多整数解。如果(<em>x</em><sub>0</sub>  , <em>y</em><sub>0</sub>)是<em>ax</em>+<em>by</em>=<em>c</em>的一个整数解，则<em>ax</em>+<em>by</em>=<em>c</em>的所有整数解是<em>x</em>= <em>x</em><sub>0</sub>+ <em>k</em> (<em>b</em> DIV <em>GCD</em>(<em>a</em>, <em>b</em>))，<em>y</em>= <em>y</em><sub>0</sub>-<em>k</em> <em>(<em>a</em>DIV <em>GCD</em>(<em>a</em>, <em>b</em>))，其中</em>k*是整数。</p></li><li><h4 id="证明-2"><a class="markdownIt-Anchor" href="#证明-2"></a> 证明</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/STIjomOKGXYwRsb.png" alt="" /></p></li></ul><h1 id="扩展欧几里得求不定方程的通解"><a class="markdownIt-Anchor" href="#扩展欧几里得求不定方程的通解"></a> 扩展欧几里得求不定方程的通解</h1><ul><li><h3 id="方式一直接倍数关系"><a class="markdownIt-Anchor" href="#方式一直接倍数关系"></a> 方式一（直接倍数关系）</h3><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/STIjomOKGXYwRsb.png" alt="" /></p><ul><li>即直接计算ax + by = GCD(a,b)的解，然后直接倍数关系就是ax + by = c 的解。通解的话，只是对于本方程来说的，步骤就是先找出一个本方程的解，然后套公式就行，不用求出ax + by = GCD(a,b)的通解。</li></ul></li><li><h3 id="方式二利用-gcdagcdabbgcdab-1"><a class="markdownIt-Anchor" href="#方式二利用-gcdagcdabbgcdab-1"></a> 方式二（利用 GCD(a/GCD(a,b),b/GCD(a,b)) = 1）</h3><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/06/uUE9fg6xKSTmwin.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/06/e72sQI4ofdrSWAN.png" alt="" /></p><blockquote><p>上面那个正是因为GCD(a,b)是a,b的公约数，才能除。如果直接给一个不定方程，如果有解的话，则说明该数是GCD(a,b)的倍数。可以除以GCD(a,b)，得到a’x + b’y = d’，然后此时GCD(a’,b’) = 1，所以利用a’x + b’y = 1 来求出一个根(x<sub>0</sub>，y<sub>0</sub>)，则a’x+b’y = d’的根就为(d’x<sub>0</sub>,d’y<sub>0</sub>)。a’x + b’y = d’ 和 ax + by = d 是倍数关系，所以这个根也就是ax + by = d 的根。</p><blockquote><p>但是这里的这个通解我没太看懂，为啥不是套的公式，套公式的解包含这个通解。</p></blockquote></blockquote></li></ul><h1 id="the-balance-poj-2142"><a class="markdownIt-Anchor" href="#the-balance-poj-2142"></a> The balance (POJ 2142)</h1><ul><li><h4 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h4><p>Iyo Kiffa Australis女士有一个天平，但只有两种砝码可以用来称量 一剂药物。例如，用300毫克和700毫克的砝码来测量200毫克阿司匹林，她就要将1个700毫克的砝码和药物放在天平的</p><p>一边，并将3个300毫克的砝码放在天平的另一边，如图1所示。虽然她也可以将4个300毫克的砝码放和药物放在天平的一边，两个700毫克的砝码放在天平的另一边，如图2所示，但她不会选择这个方案，因为使用更多的砝码不太方便。</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/06/Osie46z1dwnvbox.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/06/dw4csK9QMZoPq7D.png" alt="" /></p><p>​请您帮助Iyo Kiffa Australis女士，帮她计算要用多少的砝码。</p><ul><li><h4 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h4><p>输入是一系列的测试用例。每个测试用例一行，给出3个用空格分隔的正整数<em>a</em>, <em>b</em>和<em>d</em>，并满足以下关系：a<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">≠</mi></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span></span></span></span>b，<em>a</em>$\leq<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10000</mn><mi mathvariant="normal">，</mi><mo>∗</mo><mi>b</mi><mo>∗</mo></mrow><annotation encoding="application/x-tex">10000， *b*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord">∗</span></span></span></span>\leq<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10000</mn><mi mathvariant="normal">，</mi><mi mathvariant="normal">而</mi><mi mathvariant="normal">且</mi><mo>∗</mo><mi>d</mi><mo>∗</mo></mrow><annotation encoding="application/x-tex">10000，而且*d*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">而</span><span class="mord cjk_fallback">且</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord">∗</span></span></span></span>\leq$50000。本题设定，您可以使用<em>a</em>毫克和<em>b</em>毫克的砝码组合来称量<em>d</em>毫克；也就是说，您不需要考虑“无解”的情况。</p><p>输入结束由一行表示，该行给出3个由空格分隔的零。这一行不是测试用例。</p></li><li><h4 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h4><p>输出由一系列的行组成，每行对应一个测试用例(<em>a</em>, <em>b</em>, <em>d</em>)。一个输出行给出两个由空格分隔的非负整数<em>x</em>和<em>y</em>，且<em>x</em>和<em>y</em>要满足以下三个条件：</p><ul><li><p>使用<em>x</em>个<em>a</em>毫克的砝码和<em>y</em>个<em>b</em>毫克的砝码可以称量<em>d</em>毫克。</p></li><li><p>在满足上述条件的非负整数对中，砝码总数(<em>x + y</em>)最小。</p></li><li><p>在满足前两个条件的非负整数对中，砝码的总的质量(<em>ax + by</em>)最小。</p></li><li><p>输出中不能出现额外的字符（例如，额外的空格）。</p></li></ul></li><li><h4 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/06/ILMRDBOkHZPvo2U.png" alt="要求|x|+|y|最小" /></p><p>然后第三个要求直接枚举判断就可以了。</p></li><li><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">excgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,d;</span><br><span class="line">    <span class="keyword">int</span> x0,y0,gcd;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="number">1</span>;  <span class="comment">//记录是否交换</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;d);</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>&amp;&amp;d==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a&lt;b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = a;</span><br><span class="line">            a = b;</span><br><span class="line">            b = t;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        gcd = excgcd(a,b,x0,y0);</span><br><span class="line">        <span class="keyword">int</span> bei = d /gcd;</span><br><span class="line">        x0 = x0 * bei;</span><br><span class="line">        y0 = y0 * bei;</span><br><span class="line">        <span class="keyword">int</span> k = y0/(a/gcd);  <span class="comment">//如之前图的分析，在这个点附近会出现最小值</span></span><br><span class="line">        <span class="keyword">int</span> ansx = <span class="built_in">abs</span>(x0),ansy = <span class="built_in">abs</span>(y0);</span><br><span class="line">        <span class="keyword">int</span> mi = ansx + ansy;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = k<span class="number">-5</span>;i &lt;= k+<span class="number">5</span>;i ++) <span class="comment">//枚举十个点，选出最小的</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> nansx = <span class="built_in">abs</span>(x0 + i*(b/gcd)); <span class="comment">//注意这里要保证a &gt; b，所以直接就在前面交换了</span></span><br><span class="line">            <span class="keyword">int</span> nansy = <span class="built_in">abs</span>(y0 - i*(a/gcd));</span><br><span class="line">            <span class="keyword">int</span> temp = <span class="built_in">abs</span>(x0 + i*(b/gcd))+<span class="built_in">abs</span>(y0 - i*(a/gcd));</span><br><span class="line">            <span class="keyword">if</span>(temp&lt;mi)</span><br><span class="line">            &#123;</span><br><span class="line">                mi = temp;</span><br><span class="line">                ansx = nansx;</span><br><span class="line">                ansy = nansy;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(temp == mi)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a&lt;b)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> we1 = b * ansx + a * ansy;</span><br><span class="line">                    <span class="keyword">int</span> we2 = b * nansx + a * nansy;</span><br><span class="line">                    <span class="keyword">if</span>(we1&gt;we2)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ansx = nansx;</span><br><span class="line">                        ansy = nansy;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> we1 = a * ansx + b * ansy;</span><br><span class="line">                    <span class="keyword">int</span> we2 = a * nansx + b * nansy;</span><br><span class="line">                    <span class="keyword">if</span>(we1&gt;we2)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ansx = nansx;</span><br><span class="line">                        ansy = nansy;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,ansx,ansy);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,ansy,ansx);</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">excgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>;</span><br><span class="line">        y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = excgcd(b,a%b,x,y);</span><br><span class="line">    <span class="keyword">int</span> ox = x,oy = y;</span><br><span class="line">    x = oy;</span><br><span class="line">    y = ox - oy * (a / b);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>相比与之前的那个扩展欧几里得，这个程序是直接在输入的时候就判断a,b的值是否要交换，因为后面的计算通解的时候要保证这一点，不然会出错</p></blockquote><h1 id="one-person-gamezoj-3593"><a class="markdownIt-Anchor" href="#one-person-gamezoj-3593"></a> One Person Game(ZOJ 3593)</h1><ul><li><h4 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h4><p>有一个有趣而简单的单人游戏。假设在您脚下有一个数轴，开始时您在<em>A</em>点，您的目标是<em>B</em>点，您可以在一步内做6种动作之一，向左或向右行走<em>a</em>，<em>b</em>或<em>c</em>，其中<em>c</em>等于<em>a+b</em>。 您必须尽快到达<em>B</em>点。请您计算最小步数。</p></li><li><h4 id="输入-2"><a class="markdownIt-Anchor" href="#输入-2"></a> 输入</h4><p>输入有多个测试用例。输入的第一行是一个整数<em>T</em>（0 &lt; <em>T</em> $\leq1000），表示测试用例的数量，然后给出*T*个测试用例。每个测试用例都由一个包含四个整数的行表示，4个用空格分隔整数*A*, *B*, *a*和*b*，（\-2<sup>31</sup>\leq$<em>A</em>, <em>B</em> &lt; 2<sup>31</sup>, 0 &lt; <em>a</em>, <em>b</em> &lt; 2<sup>31</sup>）</p></li><li><h4 id="输出-2"><a class="markdownIt-Anchor" href="#输出-2"></a> 输出</h4><p>对于每个测试用例，输出最少步数。如果无法到达<em>B</em>点，则输出“-1”。</p></li><li><h4 id="分析-2"><a class="markdownIt-Anchor" href="#分析-2"></a> 分析</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/07/6AJIOLq4l5o3GFr.png" alt="分析" /></p></li><li><h4 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">excgcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    ll A,B,a,b;</span><br><span class="line">    ll x0,y0,gcd;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= t;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll mi;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld%lld&quot;</span>,&amp;A,&amp;B,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">if</span>(a&lt;b)</span><br><span class="line">        &#123;</span><br><span class="line">            ll t = a;</span><br><span class="line">            a = b;</span><br><span class="line">            b = t;</span><br><span class="line">        &#125;</span><br><span class="line">        gcd = excgcd(a,b,x0,y0);</span><br><span class="line">        ll cha = <span class="built_in">abs</span>(B - A);</span><br><span class="line">        <span class="keyword">if</span>(cha%gcd!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ll bei = cha / gcd;</span><br><span class="line">        x0 = x0 * bei;</span><br><span class="line">        y0 = y0 * bei;</span><br><span class="line">        ll k;</span><br><span class="line">        <span class="keyword">if</span>(x0*y0 &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mi = <span class="built_in">abs</span>(x0)+<span class="built_in">abs</span>(y0);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            mi = max(<span class="built_in">abs</span>(x0),<span class="built_in">abs</span>(y0));</span><br><span class="line">        &#125;</span><br><span class="line">        k = y0/(a/gcd);</span><br><span class="line">        <span class="keyword">for</span>(ll m = k<span class="number">-3</span>;m &lt;= k+<span class="number">3</span>;m ++)</span><br><span class="line">        &#123;</span><br><span class="line">            ll nansx = x0 + m*b/gcd;</span><br><span class="line">            ll nansy = y0 - m*a/gcd;</span><br><span class="line">            <span class="keyword">if</span>(nansx*nansy&lt;=<span class="number">0</span>&amp;&amp;<span class="built_in">abs</span>(nansx)+<span class="built_in">abs</span>(nansy)&lt;mi)  <span class="comment">//注意等于零的情况的考虑</span></span><br><span class="line">            &#123;</span><br><span class="line">                mi = <span class="built_in">abs</span>(nansx) + <span class="built_in">abs</span>(nansy);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        k = (y0-x0)*gcd/(a+b);</span><br><span class="line">        <span class="keyword">for</span>(ll m = k - <span class="number">3</span>;m &lt;= k+<span class="number">3</span>;m ++)</span><br><span class="line">        &#123;</span><br><span class="line">            ll nansx = x0 + m*b/gcd;</span><br><span class="line">            ll nansy = y0 - m*a/gcd;</span><br><span class="line">            <span class="keyword">if</span>(nansx*nansy&gt;=<span class="number">0</span>&amp;&amp;max(<span class="built_in">abs</span>(nansx),<span class="built_in">abs</span>(nansy))&lt;mi) <span class="comment">//注意等于零的情况的考虑</span></span><br><span class="line">            &#123;</span><br><span class="line">                mi = max(<span class="built_in">abs</span>(nansx),<span class="built_in">abs</span>(nansy));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,mi);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">excgcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>;</span><br><span class="line">        y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = excgcd(b,a%b,x,y);</span><br><span class="line">    ll ox = x,oy = y;</span><br><span class="line">    x = oy;</span><br><span class="line">    y = ox - oy*(a/b);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意在枚举k值附近的点的时候，要考虑nansx * nansy == 0的情况，之前就是一直卡在这里出错。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最大公约数 </tag>
            
            <tag> 不定方程 </tag>
            
            <tag> 扩展欧几里得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欧几里得算法</title>
      <link href="/2020/08/05/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/"/>
      <url>/2020/08/05/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="欧几里得算法辗转相除法未写完"><a class="markdownIt-Anchor" href="#欧几里得算法辗转相除法未写完"></a> 欧几里得算法(辗转相除法)(未写完)</h1><ul><li><p>用来计算两个负整数的最大公约数。</p></li><li><p>计算的公式为(a&gt;b) GCD(a,b) = GCD(b,a mod b)</p></li><li><h4 id="证明"><a class="markdownIt-Anchor" href="#证明"></a> 证明</h4><p>证明a 和 b 与 a 和 a mod b 的公约数是一样的。</p><ul><li>若 c 是 a 和 b 的公约数，则 c|a,c|b。而 a mod b = a - k* b(k 为整数)。所以c|a mod b，c|b所以c也是 b 和 a mod b(a&gt;b)的公约数。</li><li>若 c 是 b 和 a mod b(a&gt;b)的公约数，则 c|b,c|a mod b， a mod b = a - k*b，因为k是整数且<code>c|b</code> ，所以c|a。所以c也是a 和 b 的公约数。</li></ul><p>所以GCD(a,b) == GCD(a,a mod b)（a&gt;b）</p></li></ul><blockquote><p>上述直接证明了GCD(a,b) == GCD(b,a-k*b)，如果按照这个推的话最后还是要走到a mod b这一步</p></blockquote><ul><li><p>所以依次类推下去：</p><p>GCD(a,b) == GCD(b,a mod b) == GCD(a mod b, b mod (a mod b)) == … == GCD(m,0)</p><p>则此时m 和 0 的最大公约数就是m了。也就求出了a 和 b的最大公约数。</p></li></ul><h1 id="happy-2006-poj-2773"><a class="markdownIt-Anchor" href="#happy-2006-poj-2773"></a> Happy 2006 (POJ 2773)</h1><ul><li><h4 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h4><p>如果两个正整数的最大公约数（Great Common Divisor，GCD）是1，则称这两个正整数是互素的。例如，1、3、5、7、9……和2006年都是互素的。</p></li><li><h4 id="本题要求"><a class="markdownIt-Anchor" href="#本题要求"></a> 本题要求</h4><p>对于给出的整数<em>m</em>，找到按升序排列的第<em>K</em>个和<em>m</em>互素的整数</p></li><li><h4 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h4><p>输入包含多个测试用例。每个测试用例给出两个整数m(1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> m <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> 1000000)和K(1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> K <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> 100000000)</p></li><li><h4 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h4><p>在一行输出第k个和m互素的整数。</p></li><li><h4 id="试题分析"><a class="markdownIt-Anchor" href="#试题分析"></a> 试题分析</h4><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/wrdocCUJWHSNGfh.png" alt="分析" /></p><p>所以就先求出[1,a]区间中的与a互素的数。然后根据k的值进行周期选择。</p></li><li><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">1000005</span>];</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k,m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;k)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i ++) <span class="comment">//这里等于m是考虑m为1的情况</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(GCD(m,i)==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p[++num] = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mult = k / num;</span><br><span class="line">        <span class="keyword">int</span> modd = k % num;</span><br><span class="line">        <span class="keyword">if</span>(modd==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(mult<span class="number">-1</span>)*m+p[num]);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,mult*m+p[modd]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a==b)&#123;<span class="keyword">return</span> a;&#125;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = t;</span><br><span class="line">    &#125;  <span class="comment">//让a&gt;b</span></span><br><span class="line">    <span class="keyword">while</span>(b!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = b;</span><br><span class="line">        b = a % b;</span><br><span class="line">        a = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这个题第一次用long long 怕溢出，结果就超时了。看网上说是因为虚拟机判题如果机器是32位的，则处理long long 就要用两个时间周期，而处理int只用一个时间周期。</p><blockquote><p>这个题还可以用容斥原理+二分来做，以后再来补上</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最大公约数 </tag>
            
            <tag> 欧几里得算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/2020/08/05/markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/08/05/markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="上下角标"><a class="markdownIt-Anchor" href="#上下角标"></a> 上下角标</h1><ul><li>上角标: &lt;sup&gt; x&lt;/sup&gt;   p半圆在上面</li><li>下角标: &lt;sub&gt; x&lt;/sub&gt;   p半圆在下面</li></ul><h1 id="markdown表示数学公式"><a class="markdownIt-Anchor" href="#markdown表示数学公式"></a> markdown表示数学公式</h1><ul><li><p>首先在设置中勾选内联公式选项</p></li><li><p>多个符号的嵌套，之际$ $ 之间多个 \ 就可以</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/DJlX1icYnmQyEtp.png" alt="" /><br />比如$\lfloor \sqrt{n} \rfloor$  表示的就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">⌊</mo><msqrt><mi>n</mi></msqrt><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor \sqrt{n} \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05028em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span><span class="mclose">⌋</span></span></span></span></p></li><li><p>符号及其表示</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/OnRY2D3HVZWx8oM.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/gmerKzfXjZIU3RQ.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/M9UayJhWKcjBbe3.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/ZjFpV4Cd5nvcPAD.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/SvLhmWbgF9HT6Mt.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/gNCOfKT6hkZjwQV.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/xni1YyapqNmkT5A.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/Nx9DCZ8ic7fIPKS.png" alt="" /></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/05/j4xcCpYFte6f9RM.png" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试大素数</title>
      <link href="/2020/08/04/%E6%B5%8B%E8%AF%95%E5%A4%A7%E7%B4%A0%E6%95%B0/"/>
      <url>/2020/08/04/%E6%B5%8B%E8%AF%95%E5%A4%A7%E7%B4%A0%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="试除法"><a class="markdownIt-Anchor" href="#试除法"></a> 试除法</h1><p>​测试一个数n是否为素数，计算除2…<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">⌊</mo><msqrt><mi>n</mi></msqrt><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor \sqrt{n} \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05028em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span><span class="mclose">⌋</span></span></span></span> 的素数表，如果n是素数表中的一个素数或者n不能被素数表中的数整除，那么n就是素数。</p><h1 id="测试大素数的实验范例"><a class="markdownIt-Anchor" href="#测试大素数的实验范例"></a> 测试大素数的实验范例</h1><p>​测试一个数是否为素数，最简便的方法是试除法，即试用2… <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">⌊</mo><msqrt><mi>n</mi></msqrt><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor \sqrt{n} \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05028em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span><span class="mclose">⌋</span></span></span></span>去除n。n是素数当且仅当没有一个试用的除数能被n整除。但是这个方法的时效取决于n。如果n很大则判断要花费很多时间。下面介绍两种优化算法：</p><ul><li>筛选法+试除法</li><li>Miller_Rabin方法</li></ul><h2 id="筛选法试除法"><a class="markdownIt-Anchor" href="#筛选法试除法"></a> 筛选法+试除法</h2><p>先通过筛选法计算[2,|<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mi>n</mi></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.23972em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span></span>|]的素数筛u[]和素数表prime[],素数表prime[]长度为num。x是素数当且仅当x为[2…|<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mi>n</mi></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.23972em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span></span>|]中的一个素数或者x不能被prime[]表中的任何素数整数。时间复杂度为O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mi>n</mi></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.23972em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span></span>)。</p><blockquote><p>如果直接用欧拉筛法的话，然后打表判断，复杂度为O(n)，如果n很大的话可能还是难以接受</p></blockquote><h2 id="primed-subsequence-uva-10871"><a class="markdownIt-Anchor" href="#primed-subsequence-uva-10871"></a> Primed Subsequence (UVA 10871)</h2><ul><li><h4 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h4><p>给出一个长度为<em>n</em> 的正整数序列，一个素序列（Primed Subsequence）是一个长度至少为2 的连续的子序列，总和是大于或等于2的一个素数。例如给出序列：3 5 6 3 8，存在两个长度为2的素序列（5+6=11，以及3+8=11）、一个长度为3的素序列（6+3+8=17）和一个长度为4的素序列（3+5+6+3=17）。</p></li><li><h4 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h4><p>输入包含若干测试用例。第一行给出一个整数<em>t</em>（1&lt;<em>t</em>&lt;21），表示测试用例的个数。每个测试用例</p><p>一行。在这一行首先给出一个整数<em>n</em>，0&lt; <em>n</em>&lt; 10001；然后给出<em>n</em>个小于10000的非负整数，构成一个序列。 80%测试用例序列中最多有1000个数字。</p></li><li><h4 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h4><p>对每个序列，输出“Shortest primed subsequence is length <em>x</em>:”，其中<em>x</em>是最短的素序列的长度，然后给出最短素序列，用空格分开。如果操作多个这样的序列，输出第一个出现的序列。如果没</p><p>有这样的序列，输出“This sequence is anti-primed.”</p></li><li><h4 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h4><p>每个测试用例最多有10000个数字，每个数字小于10000，所以序列和最大为100000000，如果直接欧拉筛法的话，时间可能顶不住，此时就用筛选法+试除法把复杂度降低到10000。先离线计算出[2,10010]中的素数表，然后对于素数序列的和的计算，我们用前缀和数组来计算。</p><blockquote><p>因为要求最短序列和，所以不能直接二重遍历，要枚举长度，这样就能保证找到素序列后一定为最短的。</p></blockquote></li><li><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10010</span></span><br><span class="line"><span class="keyword">int</span> prime[N];</span><br><span class="line"><span class="keyword">bool</span> u[N+<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> he[<span class="number">10005</span>];</span><br><span class="line"><span class="keyword">int</span> yuan[<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> k)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= N;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        u[i] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= N;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(u[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prime[++num] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= num;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]&gt;N)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            u[i*prime[j]] = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; t;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">        judge(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= k;j ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;yuan[j]);</span><br><span class="line">        </span><br><span class="line">        he[j] = he[j<span class="number">-1</span>] + yuan[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">2</span>;m &lt;= k;m ++)         <span class="comment">//枚举长度，找到后即为第一个</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt;= k-m;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = he[j+m]-he[j];</span><br><span class="line">            <span class="keyword">if</span>(binary_search(prime+<span class="number">1</span>,prime+num+<span class="number">1</span>,ans)) <span class="comment">//如果就在素数表中，则输出</span></span><br><span class="line">            &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Shortest primed subsequence is length %d:&quot;</span>,m);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> mm = j+<span class="number">1</span>;mm &lt;= j+m;mm ++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>,yuan[mm]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> mm = <span class="number">1</span>;mm &lt;= num;mm ++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(ans%prime[mm]==<span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        flag = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,m);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> mm = j+<span class="number">1</span>;mm &lt;= j+m;mm ++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>,yuan[mm]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;This sequence is anti-primed.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 素数筛选 </tag>
            
            <tag> 测试素数 </tag>
            
            <tag> 试除法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哥德巴赫猜想及其扩展</title>
      <link href="/2020/08/04/%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3%E5%8F%8A%E5%85%B6%E6%89%A9%E5%B1%95/"/>
      <url>/2020/08/04/%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3%E5%8F%8A%E5%85%B6%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h1 id="哥德巴赫猜想goldbachs-conjecture-poj-2262"><a class="markdownIt-Anchor" href="#哥德巴赫猜想goldbachs-conjecture-poj-2262"></a> 哥德巴赫猜想：(Goldbach’s Conjecture POJ 2262)</h1><ul><li><p>每个大于4的偶数可以写成两个奇素数的和。</p></li><li><p>现在哥德巴赫猜想任然没有被证明是否正确。现在请您证明对所有小于一百万的偶数，哥德巴赫猜想成立。</p></li><li><h4 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h4><p>输入包含一个或多个测试用例。每个测试用例给出一个偶整数<em>n</em>，6≤<em>n</em>&lt;1000000。输入以0结束。</p></li><li><h4 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h4><p>对每个测试用例，输出形式为<em>n</em> = <em>a</em> + <em>b</em>的一行，其中<em>a</em>和<em>b</em>是奇素数，数字和操作符要用一个空格分开，如样例输出所示。如果有多于一对的奇素数的和加起来为<em>n</em>，就选择b - a最大的一对。如果没有这样的对，输出&quot;Goldbach’s conjecture is wrong.&quot;。</p></li><li><h4 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h4><p>先筛选出所有的素数，然后从小到大开始，n - a 如果也是个素数，则满足，且第一个满足这个关系的就是b - a最大的一对。</p></li><li><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000000</span></span><br><span class="line"><span class="keyword">bool</span> u[N+<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> prime[N];</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> k)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= N;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        u[i] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= N;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(u[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prime[++num] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt; num;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j] &gt; n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            u[i*prime[j]] = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        judge(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; num;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(prime[i]&gt;=k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Goldbach&#x27;s conjecture is wrong.&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tem = k - prime[i];</span><br><span class="line">        <span class="keyword">bool</span> tru = binary_search(prime+<span class="number">1</span>,prime+num+<span class="number">1</span>,tem); <span class="comment">//用stl二分查找</span></span><br><span class="line">        <span class="keyword">if</span>(tru)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;k&lt;&lt;<span class="string">&quot; = &quot;</span>&lt;&lt;prime[i]&lt;&lt;<span class="string">&quot; + &quot;</span>&lt;&lt;tem&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="哥德巴赫猜想的扩展summation-of-four-primes-uva-10168"><a class="markdownIt-Anchor" href="#哥德巴赫猜想的扩展summation-of-four-primes-uva-10168"></a> 哥德巴赫猜想的扩展(Summation of Four Primes UVA 10168)</h1><ul><li><p>Euler证明的经典定理之一是素数在数量上是无限的。但每个数字是否可以表示成4个 素数的总和？我不知道答案，请您来帮我。</p></li><li><h4 id="输入-2"><a class="markdownIt-Anchor" href="#输入-2"></a> 输入</h4><p>在输入的每行中给出一个整数<em>N</em> (<em>N</em>≤10000000)，请您将这一整数表示为4个素数的总和。输入以EOF为结束。(ctrl+z/b)</p></li><li><h4 id="输出-2"><a class="markdownIt-Anchor" href="#输出-2"></a> 输出</h4><p>对于输入的每行，给出4个素数的一行输出。如果给出的数字不能表示为4个素数的总和，则输出</p><p>一行“Impossible.”。存在多个解的情况，任何成立的解答都会被接受。</p></li><li><h4 id="分析-2"><a class="markdownIt-Anchor" href="#分析-2"></a> 分析</h4><p>我们知道哥德巴赫猜想是一个大于4的偶数可以写成两个素数的和。我们可以这样处理：</p></li><li><p>对于偶数，我们假定第一第二个素数都为2，则偶数-4之后的数根据哥德巴赫猜想拆分。</p></li><li><p>对于奇数，我们假定第一个素数为2，第二个素数为3，则奇数-5之后为偶数，根据哥德巴赫猜想拆分。</p></li></ul><p>这就要求数字必须大于等于8，8一下的数没有办法拆分成4个素数的和。</p><ul><li><h4 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10000000</span></span><br><span class="line"><span class="keyword">bool</span> u[N+<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> prime[N];</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> flag)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= N;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        u[i] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= N;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(u[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prime[++num] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= num;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]&gt;N)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            u[i*prime[j]] = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k&lt;<span class="number">8</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Impossible&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(k%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                k -= <span class="number">4</span>;</span><br><span class="line">                judge(k,<span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                k -= <span class="number">5</span>;</span><br><span class="line">                judge(k,<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> flag)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; num;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tem = k - prime[i];</span><br><span class="line">        <span class="keyword">bool</span> tru = binary_search(prime+<span class="number">1</span>,prime+num+<span class="number">1</span>,tem);</span><br><span class="line">        <span class="keyword">if</span>(tru)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;2 2 &quot;</span>&lt;&lt;prime[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;tem&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;2 3 &quot;</span>&lt;&lt;prime[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;tem&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哥德巴赫猜想 </tag>
            
            <tag> 素数筛选 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>筛选素数</title>
      <link href="/2020/08/04/%E7%AD%9B%E9%80%89%E7%B4%A0%E6%95%B0/"/>
      <url>/2020/08/04/%E7%AD%9B%E9%80%89%E7%B4%A0%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h1><p>素数：一个大于1的自然数，且除了1和它本身外，不能被其他自然数整除的数叫素数。</p><h1 id="无脑暴力"><a class="markdownIt-Anchor" href="#无脑暴力"></a> 无脑暴力 😄</h1><p><s>上去就是二重循环暴力穷举</s></p><h1 id="埃氏筛法"><a class="markdownIt-Anchor" href="#埃氏筛法"></a> 埃氏筛法</h1><ul><li>筛选[2,n]中素数的最简单的方法是——埃氏筛法</li><li>代码如下：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"><span class="keyword">bool</span> u[MAX+<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> prime[MAX];</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>; <span class="comment">//第一个素数下标为1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= MAX;i ++)</span><br><span class="line">&#123;</span><br><span class="line">    u[i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= MAX;i ++) <span class="comment">//遍历每个数，筛去它的倍数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(u[i])</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>;j*i &lt;= MAX;j ++)</span><br><span class="line">&#123;</span><br><span class="line">    u[j*i] = <span class="literal">false</span>;   <span class="comment">//合数作为素数的倍数被筛掉</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= MAX;i ++)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span>(u[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prime[++num] = i;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= num;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;prime[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该算法中，合数是作为素数的倍数被筛去的。该算法的复杂度为O(n*log log <sub>n</sub>)。</p><hr /><p>上述筛选的方法中会存在重复筛选的情况，比如6会被2*3和 3*2筛去。</p><p>因此，如果每个合数仅被它最小的质因数筛去，则算法效率可以大幅提升，由此改进的算法称为</p><h1 id="欧拉筛法"><a class="markdownIt-Anchor" href="#欧拉筛法"></a> 欧拉筛法</h1><ul><li>代码如下：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"><span class="keyword">bool</span> u[MAX+<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> prime[MAX];</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= MAX;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">u[i] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= MAX;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(u[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prime[++num] = i;   <span class="comment">//下标从1开始,这个可以自己来定</span></span><br><span class="line">            <span class="comment">//这一步是选出最小的素数，因为要用这个最小的素数作为被筛合数的最小质因数去筛去合数，上面那个普通的算法中我们也可以这样写。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= num;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j] &gt; MAX)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            u[i*prime[j]] = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(i % prime[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= num;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;prime[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里不是筛去i的倍数，而是用prime[j]作为最小质因数，i作为倍数来筛去合数<br /><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/04/ThCr1Kq4SPZwFet.png" alt="输出前十个循环" /></p><p>所以整体的思想就是用合数的最小质因子来筛去这个合数。该算法的复杂度可以优化至O(n)</p><blockquote><p>对于i % prime[j] == 0 就break得解释：</p><blockquote><p>如果等于零，则说明 i = k * prime[j] 。此时如果不跳出循环的话，则下一个筛去的素数应该是：i * prime[j+1] = ( k * prime[j] ) * prime[j+1] = (k * prime[j+1]) * prime[j]  所以出现了重复。 也就是说这次被筛去的合数会在后面再次被筛选。</p></blockquote></blockquote><hr /><h1 id="欧拉筛法的证明"><a class="markdownIt-Anchor" href="#欧拉筛法的证明"></a> 欧拉筛法的证明</h1><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/04/VdyxvwJTYnZ4ga2.png" alt="欧拉筛法的线性证明" /></p><blockquote><p>这里的这个 p | m’ 的意思是 m’ % p == 0</p></blockquote><h2 id="具体的一些说明如下"><a class="markdownIt-Anchor" href="#具体的一些说明如下"></a> 具体的一些说明如下：</h2><ul><li><p>n的最小质因子为p</p></li><li><p>则n的另一个质因子p’ 大于p ,则m’ 小于 m</p></li><li><p>p对应着程序中的prime[j]数组，m对应着程序中的i</p></li></ul><h2 id="对ifiprimej-0break的解释"><a class="markdownIt-Anchor" href="#对ifiprimej-0break的解释"></a> 对if(i%prime[j] == 0){break;}的解释</h2><p>欧拉筛法的主要思想就是要保证所有的合数只被他的最小质因子筛去，而就是这句代码保证了这个线性筛选。</p><blockquote><p>即要证明程序一定会执行u[p*m] = false 和 保证不会执行 u[p’ * m’] = false</p></blockquote><h3 id="具体证明如下"><a class="markdownIt-Anchor" href="#具体证明如下"></a> 具体证明如下：</h3><p>要证明程序一定会执行u[p*m] = false 一定会执行则就要证明当i = m 时，<s>prime数组中有p</s>（就假定肯定有了，俺母鸡咋证明），且j能够循环到p</p><ul><li>n = p * m 则  m = n / p。 所以<code>m的最小质因子不小于p</code> ，如果小于了p那么n的最小质因子就不是p了。所以在执行到i % prime[j] == 0 {break;} 之前一定会执行u[p*m] = false 这句代码，所以一个合数肯定会被它的最小质因子筛除掉。</li></ul><p>要证明程序一定不会执行u[p’*m’] = false，即是要证明当i循环到m’时(m’&lt;m)，j不会循环到p’。要在这之前跳出循环，因为m’ = n / p’ ，而<code>m'中一定包含p这个质因子</code> 。</p><blockquote><p>根据<a href="https://baike.baidu.com/item/%E8%B4%A8%E5%9B%A0%E6%95%B0/6192269?fr=aladdin">这里</a>可知，任何一个正整数都有一个独一无二的质因子分解式，而且这个质因子分解式子里面一定包括它的最小质因子，因为n = p * m ;m也是正整数，也可以分解成一个独一无二的质因子分解式。</p></blockquote><p>所以当i = m’ 时，j循环到p (p &lt; p’)就会跳出循环，所以不会执行u[p’*m’] = false 这句话</p>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 素数筛选 </tag>
            
            <tag> 埃氏筛法 </tag>
            
            <tag> 欧拉筛法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
